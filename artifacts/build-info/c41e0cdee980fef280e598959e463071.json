{
	"id": "c41e0cdee980fef280e598959e463071",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\nimport \"./IERC1155Receiver.sol\";\r\nimport \"./IERC1155MetadataURI.sol\";\r\nimport \"./Address.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./ERC165.sol\";\r\nimport \"./Strings.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n    string public name;\r\n    string public symbol;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_, string memory _name, string memory _symbol) {\r\n        _setURI(uri_);\r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256 id) public view virtual override returns (string memory) {\r\n        return string(abi.encodePacked(_uri, Strings.toString(id)));\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not token owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not token owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    function mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public {\r\n        _mint(to, id, amount, data);\r\n    }\r\n\r\n    function burn(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) public {\r\n        _burn(to, id, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n    \r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}\r\n"
			},
			"Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n}\r\n"
			},
			"ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n"
			},
			"IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\r\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\r\n     *\r\n     * NOTE: To accept the transfer, this must return\r\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n     * (i.e. 0xf23a6e61, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param id The ID of the token being transferred\r\n     * @param value The amount of tokens being transferred\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\r\n     * been updated.\r\n     *\r\n     * NOTE: To accept the transfer(s), this must return\r\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n     * (i.e. 0xbc197c81, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":202:9401  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":202:9401  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122041ac6d1d84c93c3d80427c86331c1fb11a30bdbf5211be6fedaece9637fa007364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041ac6d1d84c93c3d80427c86331c1fb11a30bdbf5211be6fedaece9637fa007364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xAC PUSH14 0x1D84C93C3D80427C86331C1FB11A ADDRESS 0xBD 0xBF MSTORE GT 0xBE PUSH16 0xEDAECE9637FA007364736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "202:9199:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041ac6d1d84c93c3d80427c86331c1fb11a30bdbf5211be6fedaece9637fa007364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xAC PUSH14 0x1D84C93C3D80427C86331C1FB11A ADDRESS 0xBD 0xBF MSTORE GT 0xBE PUSH16 0xEDAECE9637FA007364736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "202:9199:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 9401,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041ac6d1d84c93c3d80427c86331c1fb11a30bdbf5211be6fedaece9637fa007364736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 9401,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x7cc4e7c4325a6bd6445f757cd8dc13839d130a638a97e46ca76d9894766ebf8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5361767bdbc08a5b04f66a2fba13ff75171af4fe3a17f567c1d3d3a69d4bd19\",\"dweb:/ipfs/QmS9ZqJeShhYoHZBFs64k48pKwe4j7NXCRuDxk9tHQLzAS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155.sol\":559:18270  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC1155.sol\":1163:1321  constructor(string memory uri_, string memory _name, string memory _symbol) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC1155.sol\":1250:1263  _setURI(uri_) */\n  tag_6\n    /* \"ERC1155.sol\":1258:1262  uri_ */\n  dup4\n    /* \"ERC1155.sol\":1250:1257  _setURI */\n  shl(0x20, tag_7)\n    /* \"ERC1155.sol\":1250:1263  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"ERC1155.sol\":1281:1286  _name */\n  dup2\n    /* \"ERC1155.sol\":1274:1278  name */\n  0x00\n    /* \"ERC1155.sol\":1274:1286  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC1155.sol\":1306:1313  _symbol */\n  dup1\n    /* \"ERC1155.sol\":1297:1303  symbol */\n  0x01\n    /* \"ERC1155.sol\":1297:1313  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"ERC1155.sol\":1163:1321  constructor(string memory uri_, string memory _name, string memory _symbol) {\r... */\n  pop\n  pop\n  pop\n    /* \"ERC1155.sol\":559:18270  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  jump(tag_11)\n    /* \"ERC1155.sol\":8910:8998  function _setURI(string memory newuri) internal virtual {\r... */\ntag_7:\n    /* \"ERC1155.sol\":8984:8990  newuri */\n  dup1\n    /* \"ERC1155.sol\":8977:8981  _uri */\n  0x04\n    /* \"ERC1155.sol\":8977:8990  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_13\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_13:\n  pop\n    /* \"ERC1155.sol\":8910:8998  function _setURI(string memory newuri) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"ERC1155.sol\":559:18270  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_17\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_17:\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_18:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_19)\ntag_20:\ntag_16:\n  pop\n  swap1\n  pop\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_23)\ntag_24:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_26:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_28\n    /* \"#utility.yul\":137:186   */\n  tag_29\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":121:187   */\n  tag_31\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_33\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":262:374   */\ntag_32:\n    /* \"#utility.yul\":383:422   */\n  tag_35\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_37:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_40\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":531:653   */\ntag_39:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_42\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1991   */\ntag_3:\n    /* \"#utility.yul\":927:933   */\n  0x00\n    /* \"#utility.yul\":935:941   */\n  dup1\n    /* \"#utility.yul\":943:949   */\n  0x00\n    /* \"#utility.yul\":992:994   */\n  0x60\n    /* \"#utility.yul\":980:989   */\n  dup5\n    /* \"#utility.yul\":971:978   */\n  dup7\n    /* \"#utility.yul\":967:990   */\n  sub\n    /* \"#utility.yul\":963:995   */\n  slt\n    /* \"#utility.yul\":960:1079   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":998:1077   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":960:1079   */\ntag_44:\n    /* \"#utility.yul\":1139:1140   */\n  0x00\n    /* \"#utility.yul\":1128:1137   */\n  dup5\n    /* \"#utility.yul\":1124:1141   */\n  add\n    /* \"#utility.yul\":1118:1142   */\n  mload\n    /* \"#utility.yul\":1169:1187   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1161:1167   */\n  dup2\n    /* \"#utility.yul\":1158:1188   */\n  gt\n    /* \"#utility.yul\":1155:1272   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1191:1270   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1155:1272   */\ntag_47:\n    /* \"#utility.yul\":1296:1370   */\n  tag_50\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup3\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1296:1370   */\n  tag_37\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1286:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1089:1380   */\n  pop\n    /* \"#utility.yul\":1440:1442   */\n  0x20\n    /* \"#utility.yul\":1429:1438   */\n  dup5\n    /* \"#utility.yul\":1425:1443   */\n  add\n    /* \"#utility.yul\":1419:1444   */\n  mload\n    /* \"#utility.yul\":1471:1489   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1463:1469   */\n  dup2\n    /* \"#utility.yul\":1460:1490   */\n  gt\n    /* \"#utility.yul\":1457:1574   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1493:1572   */\n  tag_52\n  tag_49\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1457:1574   */\ntag_51:\n    /* \"#utility.yul\":1598:1672   */\n  tag_53\n    /* \"#utility.yul\":1664:1671   */\n  dup7\n    /* \"#utility.yul\":1655:1661   */\n  dup3\n    /* \"#utility.yul\":1644:1653   */\n  dup8\n    /* \"#utility.yul\":1640:1662   */\n  add\n    /* \"#utility.yul\":1598:1672   */\n  tag_37\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1588:1672   */\n  swap3\n  pop\n    /* \"#utility.yul\":1390:1682   */\n  pop\n    /* \"#utility.yul\":1742:1744   */\n  0x40\n    /* \"#utility.yul\":1731:1740   */\n  dup5\n    /* \"#utility.yul\":1727:1745   */\n  add\n    /* \"#utility.yul\":1721:1746   */\n  mload\n    /* \"#utility.yul\":1773:1791   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1765:1771   */\n  dup2\n    /* \"#utility.yul\":1762:1792   */\n  gt\n    /* \"#utility.yul\":1759:1876   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1795:1874   */\n  tag_55\n  tag_49\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1759:1876   */\ntag_54:\n    /* \"#utility.yul\":1900:1974   */\n  tag_56\n    /* \"#utility.yul\":1966:1973   */\n  dup7\n    /* \"#utility.yul\":1957:1963   */\n  dup3\n    /* \"#utility.yul\":1946:1955   */\n  dup8\n    /* \"#utility.yul\":1942:1964   */\n  add\n    /* \"#utility.yul\":1900:1974   */\n  tag_37\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1890:1974   */\n  swap2\n  pop\n    /* \"#utility.yul\":1692:1984   */\n  pop\n    /* \"#utility.yul\":809:1991   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1997:2126   */\ntag_31:\n    /* \"#utility.yul\":2031:2037   */\n  0x00\n    /* \"#utility.yul\":2058:2078   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2048:2078   */\n  swap1\n  pop\n    /* \"#utility.yul\":2087:2120   */\n  tag_60\n    /* \"#utility.yul\":2115:2119   */\n  dup3\n    /* \"#utility.yul\":2107:2113   */\n  dup3\n    /* \"#utility.yul\":2087:2120   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1997:2126   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2132:2207   */\ntag_59:\n    /* \"#utility.yul\":2165:2171   */\n  0x00\n    /* \"#utility.yul\":2198:2200   */\n  0x40\n    /* \"#utility.yul\":2192:2201   */\n  mload\n    /* \"#utility.yul\":2182:2201   */\n  swap1\n  pop\n    /* \"#utility.yul\":2132:2207   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2213:2521   */\ntag_30:\n    /* \"#utility.yul\":2275:2279   */\n  0x00\n    /* \"#utility.yul\":2365:2383   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2357:2363   */\n  dup3\n    /* \"#utility.yul\":2354:2384   */\n  gt\n    /* \"#utility.yul\":2351:2407   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2387:2405   */\n  tag_65\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2351:2407   */\ntag_64:\n    /* \"#utility.yul\":2425:2454   */\n  tag_67\n    /* \"#utility.yul\":2447:2453   */\n  dup3\n    /* \"#utility.yul\":2425:2454   */\n  tag_68\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2417:2454   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2513   */\n  0x20\n    /* \"#utility.yul\":2503:2507   */\n  dup2\n    /* \"#utility.yul\":2499:2514   */\n  add\n    /* \"#utility.yul\":2491:2514   */\n  swap1\n  pop\n    /* \"#utility.yul\":2213:2521   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2527:2834   */\ntag_36:\n    /* \"#utility.yul\":2595:2596   */\n  0x00\n    /* \"#utility.yul\":2605:2718   */\ntag_70:\n    /* \"#utility.yul\":2619:2625   */\n  dup4\n    /* \"#utility.yul\":2616:2617   */\n  dup2\n    /* \"#utility.yul\":2613:2626   */\n  lt\n    /* \"#utility.yul\":2605:2718   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2704:2705   */\n  dup1\n    /* \"#utility.yul\":2699:2702   */\n  dup3\n    /* \"#utility.yul\":2695:2706   */\n  add\n    /* \"#utility.yul\":2689:2707   */\n  mload\n    /* \"#utility.yul\":2685:2686   */\n  dup2\n    /* \"#utility.yul\":2680:2683   */\n  dup5\n    /* \"#utility.yul\":2676:2687   */\n  add\n    /* \"#utility.yul\":2669:2708   */\n  mstore\n    /* \"#utility.yul\":2641:2643   */\n  0x20\n    /* \"#utility.yul\":2638:2639   */\n  dup2\n    /* \"#utility.yul\":2634:2644   */\n  add\n    /* \"#utility.yul\":2629:2644   */\n  swap1\n  pop\n    /* \"#utility.yul\":2605:2718   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2736:2742   */\n  dup4\n    /* \"#utility.yul\":2733:2734   */\n  dup2\n    /* \"#utility.yul\":2730:2743   */\n  gt\n    /* \"#utility.yul\":2727:2828   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2816:2817   */\n  0x00\n    /* \"#utility.yul\":2807:2813   */\n  dup5\n    /* \"#utility.yul\":2802:2805   */\n  dup5\n    /* \"#utility.yul\":2798:2814   */\n  add\n    /* \"#utility.yul\":2791:2818   */\n  mstore\n    /* \"#utility.yul\":2727:2828   */\ntag_73:\n    /* \"#utility.yul\":2576:2834   */\n  pop\n    /* \"#utility.yul\":2527:2834   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2840:3160   */\ntag_15:\n    /* \"#utility.yul\":2884:2890   */\n  0x00\n    /* \"#utility.yul\":2921:2922   */\n  0x02\n    /* \"#utility.yul\":2915:2919   */\n  dup3\n    /* \"#utility.yul\":2911:2923   */\n  div\n    /* \"#utility.yul\":2901:2923   */\n  swap1\n  pop\n    /* \"#utility.yul\":2968:2969   */\n  0x01\n    /* \"#utility.yul\":2962:2966   */\n  dup3\n    /* \"#utility.yul\":2958:2970   */\n  and\n    /* \"#utility.yul\":2989:3007   */\n  dup1\n    /* \"#utility.yul\":2979:3060   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3045:3049   */\n  0x7f\n    /* \"#utility.yul\":3037:3043   */\n  dup3\n    /* \"#utility.yul\":3033:3050   */\n  and\n    /* \"#utility.yul\":3023:3050   */\n  swap2\n  pop\n    /* \"#utility.yul\":2979:3060   */\ntag_75:\n    /* \"#utility.yul\":3107:3109   */\n  0x20\n    /* \"#utility.yul\":3099:3105   */\n  dup3\n    /* \"#utility.yul\":3096:3110   */\n  lt\n    /* \"#utility.yul\":3076:3094   */\n  dup2\n    /* \"#utility.yul\":3073:3111   */\n  eq\n    /* \"#utility.yul\":3070:3154   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3126:3144   */\n  tag_77\n  tag_78\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3070:3154   */\ntag_76:\n    /* \"#utility.yul\":2891:3160   */\n  pop\n    /* \"#utility.yul\":2840:3160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3166:3447   */\ntag_61:\n    /* \"#utility.yul\":3249:3276   */\n  tag_80\n    /* \"#utility.yul\":3271:3275   */\n  dup3\n    /* \"#utility.yul\":3249:3276   */\n  tag_68\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3241:3247   */\n  dup2\n    /* \"#utility.yul\":3237:3277   */\n  add\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3367:3377   */\n  dup2\n    /* \"#utility.yul\":3364:3386   */\n  lt\n    /* \"#utility.yul\":3343:3361   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3331:3341   */\n  dup3\n    /* \"#utility.yul\":3328:3362   */\n  gt\n    /* \"#utility.yul\":3325:3387   */\n  or\n    /* \"#utility.yul\":3322:3410   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3390:3408   */\n  tag_82\n  tag_66\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3322:3410   */\ntag_81:\n    /* \"#utility.yul\":3430:3440   */\n  dup1\n    /* \"#utility.yul\":3426:3428   */\n  0x40\n    /* \"#utility.yul\":3419:3441   */\n  mstore\n    /* \"#utility.yul\":3209:3447   */\n  pop\n    /* \"#utility.yul\":3166:3447   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3633   */\ntag_78:\n    /* \"#utility.yul\":3501:3578   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3498:3499   */\n  0x00\n    /* \"#utility.yul\":3491:3579   */\n  mstore\n    /* \"#utility.yul\":3598:3602   */\n  0x22\n    /* \"#utility.yul\":3595:3596   */\n  0x04\n    /* \"#utility.yul\":3588:3603   */\n  mstore\n    /* \"#utility.yul\":3622:3626   */\n  0x24\n    /* \"#utility.yul\":3619:3620   */\n  0x00\n    /* \"#utility.yul\":3612:3627   */\n  revert\n    /* \"#utility.yul\":3639:3819   */\ntag_66:\n    /* \"#utility.yul\":3687:3764   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3684:3685   */\n  0x00\n    /* \"#utility.yul\":3677:3765   */\n  mstore\n    /* \"#utility.yul\":3784:3788   */\n  0x41\n    /* \"#utility.yul\":3781:3782   */\n  0x04\n    /* \"#utility.yul\":3774:3789   */\n  mstore\n    /* \"#utility.yul\":3808:3812   */\n  0x24\n    /* \"#utility.yul\":3805:3806   */\n  0x00\n    /* \"#utility.yul\":3798:3813   */\n  revert\n    /* \"#utility.yul\":3825:3942   */\ntag_41:\n    /* \"#utility.yul\":3934:3935   */\n  0x00\n    /* \"#utility.yul\":3931:3932   */\n  dup1\n    /* \"#utility.yul\":3924:3936   */\n  revert\n    /* \"#utility.yul\":3948:4065   */\ntag_34:\n    /* \"#utility.yul\":4057:4058   */\n  0x00\n    /* \"#utility.yul\":4054:4055   */\n  dup1\n    /* \"#utility.yul\":4047:4059   */\n  revert\n    /* \"#utility.yul\":4071:4188   */\ntag_49:\n    /* \"#utility.yul\":4180:4181   */\n  0x00\n    /* \"#utility.yul\":4177:4178   */\n  dup1\n    /* \"#utility.yul\":4170:4182   */\n  revert\n    /* \"#utility.yul\":4194:4311   */\ntag_46:\n    /* \"#utility.yul\":4303:4304   */\n  0x00\n    /* \"#utility.yul\":4300:4301   */\n  dup1\n    /* \"#utility.yul\":4293:4305   */\n  revert\n    /* \"#utility.yul\":4317:4419   */\ntag_68:\n    /* \"#utility.yul\":4358:4364   */\n  0x00\n    /* \"#utility.yul\":4409:4411   */\n  0x1f\n    /* \"#utility.yul\":4405:4412   */\n  not\n    /* \"#utility.yul\":4400:4402   */\n  0x1f\n    /* \"#utility.yul\":4393:4398   */\n  dup4\n    /* \"#utility.yul\":4389:4403   */\n  add\n    /* \"#utility.yul\":4385:4413   */\n  and\n    /* \"#utility.yul\":4375:4413   */\n  swap1\n  pop\n    /* \"#utility.yul\":4317:4419   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC1155.sol\":559:18270  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155.sol\":559:18270  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x731133e9\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC1155.sol\":2421:2651  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":1393:1703  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":665:683  string public name */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":2114:2270  function uri(uint256 id) public view virtual override returns (string memory) {\r... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":4365:4804  function safeBatchTransferFrom(\r... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"ERC1155.sol\":2817:3341  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":4812:4981  function mint(\r... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"ERC1155.sol\":690:710  string public symbol */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":3414:3569  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"ERC1155.sol\":3641:3809  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155.sol\":3881:4288  function safeTransferFrom(\r... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"ERC1155.sol\":4989:5124  function burn(\r... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"ERC1155.sol\":2421:2651  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_19:\n        /* \"ERC1155.sol\":2507:2514  uint256 */\n      0x00\n        /* \"ERC1155.sol\":2554:2555  0 */\n      dup1\n        /* \"ERC1155.sol\":2535:2556  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":2535:2542  account */\n      dup4\n        /* \"ERC1155.sol\":2535:2556  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":2527:2603  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"ERC1155.sol\":2621:2630  _balances */\n      0x02\n        /* \"ERC1155.sol\":2621:2634  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":2631:2633  id */\n      dup4\n        /* \"ERC1155.sol\":2621:2634  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":2621:2643  _balances[id][account] */\n      0x00\n        /* \"ERC1155.sol\":2635:2642  account */\n      dup5\n        /* \"ERC1155.sol\":2621:2643  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":2614:2643  return _balances[id][account] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":2421:2651  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":1393:1703  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_25:\n        /* \"ERC1155.sol\":1495:1499  bool */\n      0x00\n        /* \"ERC1155.sol\":1547:1573  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"ERC1155.sol\":1532:1573  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155.sol\":1532:1543  interfaceId */\n      dup3\n        /* \"ERC1155.sol\":1532:1573  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155.sol\":1532:1642  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"ERC1155.sol\":1605:1642  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"ERC1155.sol\":1590:1642  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155.sol\":1590:1601  interfaceId */\n      dup3\n        /* \"ERC1155.sol\":1590:1642  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155.sol\":1532:1642  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_76:\n        /* \"ERC1155.sol\":1532:1695  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"ERC1155.sol\":1659:1695  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"ERC1155.sol\":1683:1694  interfaceId */\n      dup3\n        /* \"ERC1155.sol\":1659:1682  super.supportsInterface */\n      tag_79\n        /* \"ERC1155.sol\":1659:1695  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"ERC1155.sol\":1532:1695  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_77:\n        /* \"ERC1155.sol\":1512:1695  return\r... */\n      swap1\n      pop\n        /* \"ERC1155.sol\":1393:1703  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":665:683  string public name */\n    tag_29:\n      0x00\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_81\n      jump\t// in\n    tag_82:\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_84\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_83)\n    tag_84:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"ERC1155.sol\":2114:2270  function uri(uint256 id) public view virtual override returns (string memory) {\r... */\n    tag_35:\n        /* \"ERC1155.sol\":2177:2190  string memory */\n      0x60\n        /* \"ERC1155.sol\":2234:2238  _uri */\n      0x04\n        /* \"ERC1155.sol\":2240:2260  Strings.toString(id) */\n      tag_87\n        /* \"ERC1155.sol\":2257:2259  id */\n      dup4\n        /* \"ERC1155.sol\":2240:2256  Strings.toString */\n      tag_88\n        /* \"ERC1155.sol\":2240:2260  Strings.toString(id) */\n      jump\t// in\n    tag_87:\n        /* \"ERC1155.sol\":2217:2261  abi.encodePacked(_uri, Strings.toString(id)) */\n      add(0x20, mload(0x40))\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"ERC1155.sol\":2203:2262  return string(abi.encodePacked(_uri, Strings.toString(id))) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":2114:2270  function uri(uint256 id) public view virtual override returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":4365:4804  function safeBatchTransferFrom(\r... */\n    tag_40:\n        /* \"ERC1155.sol\":4606:4618  _msgSender() */\n      tag_92\n        /* \"ERC1155.sol\":4606:4616  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":4606:4618  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"ERC1155.sol\":4598:4618  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":4598:4602  from */\n      dup6\n        /* \"ERC1155.sol\":4598:4618  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC1155.sol\":4598:4658  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"ERC1155.sol\":4622:4658  isApprovedForAll(from, _msgSender()) */\n      tag_95\n        /* \"ERC1155.sol\":4639:4643  from */\n      dup6\n        /* \"ERC1155.sol\":4645:4657  _msgSender() */\n      tag_96\n        /* \"ERC1155.sol\":4645:4655  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":4645:4657  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"ERC1155.sol\":4622:4638  isApprovedForAll */\n      tag_61\n        /* \"ERC1155.sol\":4622:4658  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_95:\n        /* \"ERC1155.sol\":4598:4658  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_94:\n        /* \"ERC1155.sol\":4576:4733  require(\r... */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"ERC1155.sol\":4744:4796  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_100\n        /* \"ERC1155.sol\":4767:4771  from */\n      dup6\n        /* \"ERC1155.sol\":4773:4775  to */\n      dup6\n        /* \"ERC1155.sol\":4777:4780  ids */\n      dup6\n        /* \"ERC1155.sol\":4782:4789  amounts */\n      dup6\n        /* \"ERC1155.sol\":4791:4795  data */\n      dup6\n        /* \"ERC1155.sol\":4744:4766  _safeBatchTransferFrom */\n      tag_101\n        /* \"ERC1155.sol\":4744:4796  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_100:\n        /* \"ERC1155.sol\":4365:4804  function safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":2817:3341  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_44:\n        /* \"ERC1155.sol\":2973:2989  uint256[] memory */\n      0x60\n        /* \"ERC1155.sol\":3034:3037  ids */\n      dup2\n        /* \"ERC1155.sol\":3034:3044  ids.length */\n      mload\n        /* \"ERC1155.sol\":3015:3023  accounts */\n      dup4\n        /* \"ERC1155.sol\":3015:3030  accounts.length */\n      mload\n        /* \"ERC1155.sol\":3015:3044  accounts.length == ids.length */\n      eq\n        /* \"ERC1155.sol\":3007:3090  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"ERC1155.sol\":3103:3133  uint256[] memory batchBalances */\n      0x00\n        /* \"ERC1155.sol\":3150:3158  accounts */\n      dup4\n        /* \"ERC1155.sol\":3150:3165  accounts.length */\n      mload\n        /* \"ERC1155.sol\":3136:3166  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_109:\n      pop\n        /* \"ERC1155.sol\":3103:3166  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":3184:3193  uint256 i */\n      0x00\n        /* \"ERC1155.sol\":3179:3301  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n    tag_110:\n        /* \"ERC1155.sol\":3203:3211  accounts */\n      dup5\n        /* \"ERC1155.sol\":3203:3218  accounts.length */\n      mload\n        /* \"ERC1155.sol\":3199:3200  i */\n      dup2\n        /* \"ERC1155.sol\":3199:3218  i < accounts.length */\n      lt\n        /* \"ERC1155.sol\":3179:3301  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      iszero\n      tag_111\n      jumpi\n        /* \"ERC1155.sol\":3259:3289  balanceOf(accounts[i], ids[i]) */\n      tag_113\n        /* \"ERC1155.sol\":3269:3277  accounts */\n      dup6\n        /* \"ERC1155.sol\":3278:3279  i */\n      dup3\n        /* \"ERC1155.sol\":3269:3280  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":3282:3285  ids */\n      dup6\n        /* \"ERC1155.sol\":3286:3287  i */\n      dup4\n        /* \"ERC1155.sol\":3282:3288  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_118\n      tag_116\n      jump\t// in\n    tag_118:\n    tag_117:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":3259:3268  balanceOf */\n      tag_19\n        /* \"ERC1155.sol\":3259:3289  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_113:\n        /* \"ERC1155.sol\":3240:3253  batchBalances */\n      dup3\n        /* \"ERC1155.sol\":3254:3255  i */\n      dup3\n        /* \"ERC1155.sol\":3240:3256  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_120\n      tag_116\n      jump\t// in\n    tag_120:\n    tag_119:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155.sol\":3240:3289  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155.sol\":3220:3223  ++i */\n      dup1\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      swap1\n      pop\n        /* \"ERC1155.sol\":3179:3301  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      jump(tag_110)\n    tag_111:\n      pop\n        /* \"ERC1155.sol\":3320:3333  batchBalances */\n      dup1\n        /* \"ERC1155.sol\":3313:3333  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":2817:3341  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":4812:4981  function mint(\r... */\n    tag_50:\n        /* \"ERC1155.sol\":4946:4973  _mint(to, id, amount, data) */\n      tag_124\n        /* \"ERC1155.sol\":4952:4954  to */\n      dup5\n        /* \"ERC1155.sol\":4956:4958  id */\n      dup5\n        /* \"ERC1155.sol\":4960:4966  amount */\n      dup5\n        /* \"ERC1155.sol\":4968:4972  data */\n      dup5\n        /* \"ERC1155.sol\":4946:4951  _mint */\n      tag_125\n        /* \"ERC1155.sol\":4946:4973  _mint(to, id, amount, data) */\n      jump\t// in\n    tag_124:\n        /* \"ERC1155.sol\":4812:4981  function mint(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":690:710  string public symbol */\n    tag_52:\n      0x01\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_81\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_81\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"ERC1155.sol\":3414:3569  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_57:\n        /* \"ERC1155.sol\":3509:3561  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_132\n        /* \"ERC1155.sol\":3528:3540  _msgSender() */\n      tag_133\n        /* \"ERC1155.sol\":3528:3538  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":3528:3540  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"ERC1155.sol\":3542:3550  operator */\n      dup4\n        /* \"ERC1155.sol\":3552:3560  approved */\n      dup4\n        /* \"ERC1155.sol\":3509:3527  _setApprovalForAll */\n      tag_134\n        /* \"ERC1155.sol\":3509:3561  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_132:\n        /* \"ERC1155.sol\":3414:3569  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":3641:3809  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_61:\n        /* \"ERC1155.sol\":3740:3744  bool */\n      0x00\n        /* \"ERC1155.sol\":3764:3782  _operatorApprovals */\n      0x03\n        /* \"ERC1155.sol\":3764:3791  _operatorApprovals[account] */\n      0x00\n        /* \"ERC1155.sol\":3783:3790  account */\n      dup5\n        /* \"ERC1155.sol\":3764:3791  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":3764:3801  _operatorApprovals[account][operator] */\n      0x00\n        /* \"ERC1155.sol\":3792:3800  operator */\n      dup4\n        /* \"ERC1155.sol\":3764:3801  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1155.sol\":3757:3801  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":3641:3809  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":3881:4288  function safeTransferFrom(\r... */\n    tag_66:\n        /* \"ERC1155.sol\":4097:4109  _msgSender() */\n      tag_137\n        /* \"ERC1155.sol\":4097:4107  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":4097:4109  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"ERC1155.sol\":4089:4109  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":4089:4093  from */\n      dup6\n        /* \"ERC1155.sol\":4089:4109  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC1155.sol\":4089:4149  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_138\n      jumpi\n      pop\n        /* \"ERC1155.sol\":4113:4149  isApprovedForAll(from, _msgSender()) */\n      tag_139\n        /* \"ERC1155.sol\":4130:4134  from */\n      dup6\n        /* \"ERC1155.sol\":4136:4148  _msgSender() */\n      tag_140\n        /* \"ERC1155.sol\":4136:4146  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":4136:4148  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"ERC1155.sol\":4113:4129  isApprovedForAll */\n      tag_61\n        /* \"ERC1155.sol\":4113:4149  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_139:\n        /* \"ERC1155.sol\":4089:4149  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_138:\n        /* \"ERC1155.sol\":4067:4224  require(\r... */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_99\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"ERC1155.sol\":4235:4280  _safeTransferFrom(from, to, id, amount, data) */\n      tag_143\n        /* \"ERC1155.sol\":4253:4257  from */\n      dup6\n        /* \"ERC1155.sol\":4259:4261  to */\n      dup6\n        /* \"ERC1155.sol\":4263:4265  id */\n      dup6\n        /* \"ERC1155.sol\":4267:4273  amount */\n      dup6\n        /* \"ERC1155.sol\":4275:4279  data */\n      dup6\n        /* \"ERC1155.sol\":4235:4252  _safeTransferFrom */\n      tag_144\n        /* \"ERC1155.sol\":4235:4280  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_143:\n        /* \"ERC1155.sol\":3881:4288  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":4989:5124  function burn(\r... */\n    tag_70:\n        /* \"ERC1155.sol\":5095:5116  _burn(to, id, amount) */\n      tag_146\n        /* \"ERC1155.sol\":5101:5103  to */\n      dup4\n        /* \"ERC1155.sol\":5105:5107  id */\n      dup4\n        /* \"ERC1155.sol\":5109:5115  amount */\n      dup4\n        /* \"ERC1155.sol\":5095:5100  _burn */\n      tag_147\n        /* \"ERC1155.sol\":5095:5116  _burn(to, id, amount) */\n      jump\t// in\n    tag_146:\n        /* \"ERC1155.sol\":4989:5124  function burn(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_79:\n        /* \"ERC165.sol\":939:943  bool */\n      0x00\n        /* \"ERC165.sol\":978:1003  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC165.sol\":963:974  interfaceId */\n      dup3\n        /* \"ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC165.sol\":956:1003  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Strings.sol\":407:1130  function toString(uint256 value) internal pure returns (string memory) {\r... */\n    tag_88:\n        /* \"Strings.sol\":463:476  string memory */\n      0x60\n        /* \"Strings.sol\":693:694  0 */\n      0x00\n        /* \"Strings.sol\":684:689  value */\n      dup3\n        /* \"Strings.sol\":684:694  value == 0 */\n      eq\n        /* \"Strings.sol\":680:733  if (value == 0) {\r... */\n      iszero\n      tag_150\n      jumpi\n        /* \"Strings.sol\":711:721  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_149)\n        /* \"Strings.sol\":680:733  if (value == 0) {\r... */\n    tag_150:\n        /* \"Strings.sol\":743:755  uint256 temp */\n      0x00\n        /* \"Strings.sol\":758:763  value */\n      dup3\n        /* \"Strings.sol\":743:763  uint256 temp = value */\n      swap1\n      pop\n        /* \"Strings.sol\":774:788  uint256 digits */\n      0x00\n        /* \"Strings.sol\":799:877  while (temp != 0) {\r... */\n    tag_151:\n        /* \"Strings.sol\":814:815  0 */\n      0x00\n        /* \"Strings.sol\":806:810  temp */\n      dup3\n        /* \"Strings.sol\":806:815  temp != 0 */\n      eq\n        /* \"Strings.sol\":799:877  while (temp != 0) {\r... */\n      tag_152\n      jumpi\n        /* \"Strings.sol\":832:840  digits++ */\n      dup1\n      dup1\n      tag_153\n      swap1\n      tag_122\n      jump\t// in\n    tag_153:\n      swap2\n      pop\n      pop\n        /* \"Strings.sol\":863:865  10 */\n      0x0a\n        /* \"Strings.sol\":855:865  temp /= 10 */\n      dup3\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      swap2\n      pop\n        /* \"Strings.sol\":799:877  while (temp != 0) {\r... */\n      jump(tag_151)\n    tag_152:\n        /* \"Strings.sol\":887:906  bytes memory buffer */\n      0x00\n        /* \"Strings.sol\":919:925  digits */\n      dup2\n        /* \"Strings.sol\":909:926  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_156\n      jumpi\n      tag_157\n      tag_108\n      jump\t// in\n    tag_157:\n    tag_156:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_158:\n      pop\n        /* \"Strings.sol\":887:926  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"Strings.sol\":937:1091  while (value != 0) {\r... */\n    tag_159:\n        /* \"Strings.sol\":953:954  0 */\n      0x00\n        /* \"Strings.sol\":944:949  value */\n      dup6\n        /* \"Strings.sol\":944:954  value != 0 */\n      eq\n        /* \"Strings.sol\":937:1091  while (value != 0) {\r... */\n      tag_160\n      jumpi\n        /* \"Strings.sol\":981:982  1 */\n      0x01\n        /* \"Strings.sol\":971:982  digits -= 1 */\n      dup3\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      swap2\n      pop\n        /* \"Strings.sol\":1048:1050  10 */\n      0x0a\n        /* \"Strings.sol\":1040:1045  value */\n      dup6\n        /* \"Strings.sol\":1040:1050  value % 10 */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"Strings.sol\":1027:1029  48 */\n      0x30\n        /* \"Strings.sol\":1027:1051  48 + uint256(value % 10) */\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"Strings.sol\":1014:1053  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"Strings.sol\":997:1003  buffer */\n      dup2\n        /* \"Strings.sol\":1004:1010  digits */\n      dup4\n        /* \"Strings.sol\":997:1011  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_168\n      tag_116\n      jump\t// in\n    tag_168:\n    tag_167:\n      0x20\n      add\n      add\n        /* \"Strings.sol\":997:1053  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Strings.sol\":1077:1079  10 */\n      0x0a\n        /* \"Strings.sol\":1068:1079  value /= 10 */\n      dup6\n      tag_169\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_169:\n      swap5\n      pop\n        /* \"Strings.sol\":937:1091  while (value != 0) {\r... */\n      jump(tag_159)\n    tag_160:\n        /* \"Strings.sol\":1115:1121  buffer */\n      dup1\n        /* \"Strings.sol\":1101:1122  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Strings.sol\":407:1130  function toString(uint256 value) internal pure returns (string memory) {\r... */\n    tag_149:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_93:\n        /* \"Context.sol\":709:716  address */\n      0x00\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC1155.sol\":6920:8066  function _safeBatchTransferFrom(\r... */\n    tag_101:\n        /* \"ERC1155.sol\":7147:7154  amounts */\n      dup2\n        /* \"ERC1155.sol\":7147:7161  amounts.length */\n      mload\n        /* \"ERC1155.sol\":7133:7136  ids */\n      dup4\n        /* \"ERC1155.sol\":7133:7143  ids.length */\n      mload\n        /* \"ERC1155.sol\":7133:7161  ids.length == amounts.length */\n      eq\n        /* \"ERC1155.sol\":7125:7206  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"ERC1155.sol\":7239:7240  0 */\n      0x00\n        /* \"ERC1155.sol\":7225:7241  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":7225:7227  to */\n      dup5\n        /* \"ERC1155.sol\":7225:7241  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":7217:7283  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"ERC1155.sol\":7296:7312  address operator */\n      0x00\n        /* \"ERC1155.sol\":7315:7327  _msgSender() */\n      tag_178\n        /* \"ERC1155.sol\":7315:7325  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":7315:7327  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"ERC1155.sol\":7296:7327  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7340:7400  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_179\n        /* \"ERC1155.sol\":7361:7369  operator */\n      dup2\n        /* \"ERC1155.sol\":7371:7375  from */\n      dup8\n        /* \"ERC1155.sol\":7377:7379  to */\n      dup8\n        /* \"ERC1155.sol\":7381:7384  ids */\n      dup8\n        /* \"ERC1155.sol\":7386:7393  amounts */\n      dup8\n        /* \"ERC1155.sol\":7395:7399  data */\n      dup8\n        /* \"ERC1155.sol\":7340:7360  _beforeTokenTransfer */\n      tag_180\n        /* \"ERC1155.sol\":7340:7400  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_179:\n        /* \"ERC1155.sol\":7418:7427  uint256 i */\n      0x00\n        /* \"ERC1155.sol\":7413:7834  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n    tag_181:\n        /* \"ERC1155.sol\":7437:7440  ids */\n      dup5\n        /* \"ERC1155.sol\":7437:7447  ids.length */\n      mload\n        /* \"ERC1155.sol\":7433:7434  i */\n      dup2\n        /* \"ERC1155.sol\":7433:7447  i < ids.length */\n      lt\n        /* \"ERC1155.sol\":7413:7834  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      iszero\n      tag_182\n      jumpi\n        /* \"ERC1155.sol\":7469:7479  uint256 id */\n      0x00\n        /* \"ERC1155.sol\":7482:7485  ids */\n      dup6\n        /* \"ERC1155.sol\":7486:7487  i */\n      dup3\n        /* \"ERC1155.sol\":7482:7488  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_116\n      jump\t// in\n    tag_185:\n    tag_184:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":7469:7488  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7503:7517  uint256 amount */\n      0x00\n        /* \"ERC1155.sol\":7520:7527  amounts */\n      dup6\n        /* \"ERC1155.sol\":7528:7529  i */\n      dup4\n        /* \"ERC1155.sol\":7520:7530  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_187\n      tag_116\n      jump\t// in\n    tag_187:\n    tag_186:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155.sol\":7503:7530  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7547:7566  uint256 fromBalance */\n      0x00\n        /* \"ERC1155.sol\":7569:7578  _balances */\n      0x02\n        /* \"ERC1155.sol\":7569:7582  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":7579:7581  id */\n      dup5\n        /* \"ERC1155.sol\":7569:7582  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7569:7588  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":7583:7587  from */\n      dup12\n        /* \"ERC1155.sol\":7569:7588  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":7547:7588  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":7626:7632  amount */\n      dup2\n        /* \"ERC1155.sol\":7611:7622  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":7611:7632  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155.sol\":7603:7679  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"ERC1155.sol\":7759:7765  amount */\n      dup2\n        /* \"ERC1155.sol\":7745:7756  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":7745:7765  fromBalance - amount */\n      sub\n        /* \"ERC1155.sol\":7723:7732  _balances */\n      0x02\n        /* \"ERC1155.sol\":7723:7736  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":7733:7735  id */\n      dup6\n        /* \"ERC1155.sol\":7723:7736  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7723:7742  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":7737:7741  from */\n      dup13\n        /* \"ERC1155.sol\":7723:7742  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7723:7765  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":7816:7822  amount */\n      dup2\n        /* \"ERC1155.sol\":7795:7804  _balances */\n      0x02\n        /* \"ERC1155.sol\":7795:7808  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":7805:7807  id */\n      dup6\n        /* \"ERC1155.sol\":7795:7808  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":7795:7812  _balances[id][to] */\n      0x00\n        /* \"ERC1155.sol\":7809:7811  to */\n      dup12\n        /* \"ERC1155.sol\":7795:7812  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":7795:7822  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":7454:7834  {\r... */\n      pop\n      pop\n      pop\n        /* \"ERC1155.sol\":7449:7452  ++i */\n      dup1\n      tag_192\n      swap1\n      tag_122\n      jump\t// in\n    tag_192:\n      swap1\n      pop\n        /* \"ERC1155.sol\":7413:7834  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"ERC1155.sol\":7881:7883  to */\n      dup5\n        /* \"ERC1155.sol\":7851:7898  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":7875:7879  from */\n      dup7\n        /* \"ERC1155.sol\":7851:7898  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":7865:7873  operator */\n      dup3\n        /* \"ERC1155.sol\":7851:7898  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"ERC1155.sol\":7885:7888  ids */\n      dup8\n        /* \"ERC1155.sol\":7890:7897  amounts */\n      dup8\n        /* \"ERC1155.sol\":7851:7898  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":7911:7970  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_195\n        /* \"ERC1155.sol\":7931:7939  operator */\n      dup2\n        /* \"ERC1155.sol\":7941:7945  from */\n      dup8\n        /* \"ERC1155.sol\":7947:7949  to */\n      dup8\n        /* \"ERC1155.sol\":7951:7954  ids */\n      dup8\n        /* \"ERC1155.sol\":7956:7963  amounts */\n      dup8\n        /* \"ERC1155.sol\":7965:7969  data */\n      dup8\n        /* \"ERC1155.sol\":7911:7930  _afterTokenTransfer */\n      tag_196\n        /* \"ERC1155.sol\":7911:7970  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_195:\n        /* \"ERC1155.sol\":7983:8058  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_197\n        /* \"ERC1155.sol\":8019:8027  operator */\n      dup2\n        /* \"ERC1155.sol\":8029:8033  from */\n      dup8\n        /* \"ERC1155.sol\":8035:8037  to */\n      dup8\n        /* \"ERC1155.sol\":8039:8042  ids */\n      dup8\n        /* \"ERC1155.sol\":8044:8051  amounts */\n      dup8\n        /* \"ERC1155.sol\":8053:8057  data */\n      dup8\n        /* \"ERC1155.sol\":7983:8018  _doSafeBatchTransferAcceptanceCheck */\n      tag_198\n        /* \"ERC1155.sol\":7983:8058  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_197:\n        /* \"ERC1155.sol\":7114:8066  {\r... */\n      pop\n        /* \"ERC1155.sol\":6920:8066  function _safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":9390:10119  function _mint(\r... */\n    tag_125:\n        /* \"ERC1155.sol\":9557:9558  0 */\n      0x00\n        /* \"ERC1155.sol\":9543:9559  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":9543:9545  to */\n      dup5\n        /* \"ERC1155.sol\":9543:9559  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":9535:9597  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"ERC1155.sol\":9610:9626  address operator */\n      0x00\n        /* \"ERC1155.sol\":9629:9641  _msgSender() */\n      tag_203\n        /* \"ERC1155.sol\":9629:9639  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":9629:9641  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"ERC1155.sol\":9610:9641  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":9652:9672  uint256[] memory ids */\n      0x00\n        /* \"ERC1155.sol\":9675:9696  _asSingletonArray(id) */\n      tag_204\n        /* \"ERC1155.sol\":9693:9695  id */\n      dup6\n        /* \"ERC1155.sol\":9675:9692  _asSingletonArray */\n      tag_205\n        /* \"ERC1155.sol\":9675:9696  _asSingletonArray(id) */\n      jump\t// in\n    tag_204:\n        /* \"ERC1155.sol\":9652:9696  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":9707:9731  uint256[] memory amounts */\n      0x00\n        /* \"ERC1155.sol\":9734:9759  _asSingletonArray(amount) */\n      tag_206\n        /* \"ERC1155.sol\":9752:9758  amount */\n      dup6\n        /* \"ERC1155.sol\":9734:9751  _asSingletonArray */\n      tag_205\n        /* \"ERC1155.sol\":9734:9759  _asSingletonArray(amount) */\n      jump\t// in\n    tag_206:\n        /* \"ERC1155.sol\":9707:9759  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":9772:9838  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_207\n        /* \"ERC1155.sol\":9793:9801  operator */\n      dup4\n        /* \"ERC1155.sol\":9811:9812  0 */\n      0x00\n        /* \"ERC1155.sol\":9815:9817  to */\n      dup10\n        /* \"ERC1155.sol\":9819:9822  ids */\n      dup6\n        /* \"ERC1155.sol\":9824:9831  amounts */\n      dup6\n        /* \"ERC1155.sol\":9833:9837  data */\n      dup10\n        /* \"ERC1155.sol\":9772:9792  _beforeTokenTransfer */\n      tag_180\n        /* \"ERC1155.sol\":9772:9838  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_207:\n        /* \"ERC1155.sol\":9872:9878  amount */\n      dup5\n        /* \"ERC1155.sol\":9851:9860  _balances */\n      0x02\n        /* \"ERC1155.sol\":9851:9864  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":9861:9863  id */\n      dup9\n        /* \"ERC1155.sol\":9851:9864  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":9851:9868  _balances[id][to] */\n      0x00\n        /* \"ERC1155.sol\":9865:9867  to */\n      dup10\n        /* \"ERC1155.sol\":9851:9868  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":9851:9878  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":9931:9933  to */\n      dup7\n        /* \"ERC1155.sol\":9894:9946  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":9927:9928  0 */\n      0x00\n        /* \"ERC1155.sol\":9894:9946  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":9909:9917  operator */\n      dup5\n        /* \"ERC1155.sol\":9894:9946  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155.sol\":9935:9937  id */\n      dup10\n        /* \"ERC1155.sol\":9939:9945  amount */\n      dup10\n        /* \"ERC1155.sol\":9894:9946  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      tag_209\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":9959:10024  _afterTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_211\n        /* \"ERC1155.sol\":9979:9987  operator */\n      dup4\n        /* \"ERC1155.sol\":9997:9998  0 */\n      0x00\n        /* \"ERC1155.sol\":10001:10003  to */\n      dup10\n        /* \"ERC1155.sol\":10005:10008  ids */\n      dup6\n        /* \"ERC1155.sol\":10010:10017  amounts */\n      dup6\n        /* \"ERC1155.sol\":10019:10023  data */\n      dup10\n        /* \"ERC1155.sol\":9959:9978  _afterTokenTransfer */\n      tag_196\n        /* \"ERC1155.sol\":9959:10024  _afterTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_211:\n        /* \"ERC1155.sol\":10037:10111  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_212\n        /* \"ERC1155.sol\":10068:10076  operator */\n      dup4\n        /* \"ERC1155.sol\":10086:10087  0 */\n      0x00\n        /* \"ERC1155.sol\":10090:10092  to */\n      dup10\n        /* \"ERC1155.sol\":10094:10096  id */\n      dup10\n        /* \"ERC1155.sol\":10098:10104  amount */\n      dup10\n        /* \"ERC1155.sol\":10106:10110  data */\n      dup10\n        /* \"ERC1155.sol\":10037:10067  _doSafeTransferAcceptanceCheck */\n      tag_213\n        /* \"ERC1155.sol\":10037:10111  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_212:\n        /* \"ERC1155.sol\":9524:10119  {\r... */\n      pop\n      pop\n      pop\n        /* \"ERC1155.sol\":9390:10119  function _mint(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":13803:14134  function _setApprovalForAll(\r... */\n    tag_134:\n        /* \"ERC1155.sol\":13958:13966  operator */\n      dup2\n        /* \"ERC1155.sol\":13949:13966  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":13949:13954  owner */\n      dup4\n        /* \"ERC1155.sol\":13949:13966  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":13941:14012  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"ERC1155.sol\":14061:14069  approved */\n      dup1\n        /* \"ERC1155.sol\":14023:14041  _operatorApprovals */\n      0x03\n        /* \"ERC1155.sol\":14023:14048  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC1155.sol\":14042:14047  owner */\n      dup6\n        /* \"ERC1155.sol\":14023:14048  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":14023:14058  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC1155.sol\":14049:14057  operator */\n      dup5\n        /* \"ERC1155.sol\":14023:14058  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":14023:14069  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":14107:14115  operator */\n      dup2\n        /* \"ERC1155.sol\":14085:14126  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":14100:14105  owner */\n      dup4\n        /* \"ERC1155.sol\":14085:14126  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC1155.sol\":14117:14125  approved */\n      dup4\n        /* \"ERC1155.sol\":14085:14126  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1155.sol\":13803:14134  function _setApprovalForAll(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":5588:6562  function _safeTransferFrom(\r... */\n    tag_144:\n        /* \"ERC1155.sol\":5790:5791  0 */\n      0x00\n        /* \"ERC1155.sol\":5776:5792  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":5776:5778  to */\n      dup5\n        /* \"ERC1155.sol\":5776:5792  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":5768:5834  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_177\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"ERC1155.sol\":5847:5863  address operator */\n      0x00\n        /* \"ERC1155.sol\":5866:5878  _msgSender() */\n      tag_222\n        /* \"ERC1155.sol\":5866:5876  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":5866:5878  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"ERC1155.sol\":5847:5878  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":5889:5909  uint256[] memory ids */\n      0x00\n        /* \"ERC1155.sol\":5912:5933  _asSingletonArray(id) */\n      tag_223\n        /* \"ERC1155.sol\":5930:5932  id */\n      dup6\n        /* \"ERC1155.sol\":5912:5929  _asSingletonArray */\n      tag_205\n        /* \"ERC1155.sol\":5912:5933  _asSingletonArray(id) */\n      jump\t// in\n    tag_223:\n        /* \"ERC1155.sol\":5889:5933  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":5944:5968  uint256[] memory amounts */\n      0x00\n        /* \"ERC1155.sol\":5971:5996  _asSingletonArray(amount) */\n      tag_224\n        /* \"ERC1155.sol\":5989:5995  amount */\n      dup6\n        /* \"ERC1155.sol\":5971:5988  _asSingletonArray */\n      tag_205\n        /* \"ERC1155.sol\":5971:5996  _asSingletonArray(amount) */\n      jump\t// in\n    tag_224:\n        /* \"ERC1155.sol\":5944:5996  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":6009:6069  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_225\n        /* \"ERC1155.sol\":6030:6038  operator */\n      dup4\n        /* \"ERC1155.sol\":6040:6044  from */\n      dup10\n        /* \"ERC1155.sol\":6046:6048  to */\n      dup10\n        /* \"ERC1155.sol\":6050:6053  ids */\n      dup6\n        /* \"ERC1155.sol\":6055:6062  amounts */\n      dup6\n        /* \"ERC1155.sol\":6064:6068  data */\n      dup10\n        /* \"ERC1155.sol\":6009:6029  _beforeTokenTransfer */\n      tag_180\n        /* \"ERC1155.sol\":6009:6069  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_225:\n        /* \"ERC1155.sol\":6082:6101  uint256 fromBalance */\n      0x00\n        /* \"ERC1155.sol\":6104:6113  _balances */\n      0x02\n        /* \"ERC1155.sol\":6104:6117  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":6114:6116  id */\n      dup9\n        /* \"ERC1155.sol\":6104:6117  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6104:6123  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":6118:6122  from */\n      dup11\n        /* \"ERC1155.sol\":6104:6123  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":6082:6123  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":6157:6163  amount */\n      dup6\n        /* \"ERC1155.sol\":6142:6153  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":6142:6163  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155.sol\":6134:6210  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap1\n      tag_190\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"ERC1155.sol\":6282:6288  amount */\n      dup6\n        /* \"ERC1155.sol\":6268:6279  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":6268:6288  fromBalance - amount */\n      sub\n        /* \"ERC1155.sol\":6246:6255  _balances */\n      0x02\n        /* \"ERC1155.sol\":6246:6259  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":6256:6258  id */\n      dup10\n        /* \"ERC1155.sol\":6246:6259  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6246:6265  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":6260:6264  from */\n      dup12\n        /* \"ERC1155.sol\":6246:6265  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6246:6288  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":6331:6337  amount */\n      dup6\n        /* \"ERC1155.sol\":6310:6319  _balances */\n      0x02\n        /* \"ERC1155.sol\":6310:6323  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":6320:6322  id */\n      dup10\n        /* \"ERC1155.sol\":6310:6323  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":6310:6327  _balances[id][to] */\n      0x00\n        /* \"ERC1155.sol\":6324:6326  to */\n      dup11\n        /* \"ERC1155.sol\":6310:6327  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155.sol\":6310:6337  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_228:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":6386:6388  to */\n      dup8\n        /* \"ERC1155.sol\":6355:6401  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":6380:6384  from */\n      dup10\n        /* \"ERC1155.sol\":6355:6401  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":6370:6378  operator */\n      dup6\n        /* \"ERC1155.sol\":6355:6401  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155.sol\":6390:6392  id */\n      dup11\n        /* \"ERC1155.sol\":6394:6400  amount */\n      dup11\n        /* \"ERC1155.sol\":6355:6401  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_229\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":6414:6473  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_230\n        /* \"ERC1155.sol\":6434:6442  operator */\n      dup5\n        /* \"ERC1155.sol\":6444:6448  from */\n      dup11\n        /* \"ERC1155.sol\":6450:6452  to */\n      dup11\n        /* \"ERC1155.sol\":6454:6457  ids */\n      dup7\n        /* \"ERC1155.sol\":6459:6466  amounts */\n      dup7\n        /* \"ERC1155.sol\":6468:6472  data */\n      dup11\n        /* \"ERC1155.sol\":6414:6433  _afterTokenTransfer */\n      tag_196\n        /* \"ERC1155.sol\":6414:6473  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_230:\n        /* \"ERC1155.sol\":6486:6554  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_231\n        /* \"ERC1155.sol\":6517:6525  operator */\n      dup5\n        /* \"ERC1155.sol\":6527:6531  from */\n      dup11\n        /* \"ERC1155.sol\":6533:6535  to */\n      dup11\n        /* \"ERC1155.sol\":6537:6539  id */\n      dup11\n        /* \"ERC1155.sol\":6541:6547  amount */\n      dup11\n        /* \"ERC1155.sol\":6549:6553  data */\n      dup11\n        /* \"ERC1155.sol\":6486:6516  _doSafeTransferAcceptanceCheck */\n      tag_213\n        /* \"ERC1155.sol\":6486:6554  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_231:\n        /* \"ERC1155.sol\":5757:6562  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC1155.sol\":5588:6562  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":11633:12441  function _burn(\r... */\n    tag_147:\n        /* \"ERC1155.sol\":11776:11777  0 */\n      0x00\n        /* \"ERC1155.sol\":11760:11778  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":11760:11764  from */\n      dup4\n        /* \"ERC1155.sol\":11760:11778  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155.sol\":11752:11818  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"ERC1155.sol\":11831:11847  address operator */\n      0x00\n        /* \"ERC1155.sol\":11850:11862  _msgSender() */\n      tag_236\n        /* \"ERC1155.sol\":11850:11860  _msgSender */\n      tag_93\n        /* \"ERC1155.sol\":11850:11862  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"ERC1155.sol\":11831:11862  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155.sol\":11873:11893  uint256[] memory ids */\n      0x00\n        /* \"ERC1155.sol\":11896:11917  _asSingletonArray(id) */\n      tag_237\n        /* \"ERC1155.sol\":11914:11916  id */\n      dup5\n        /* \"ERC1155.sol\":11896:11913  _asSingletonArray */\n      tag_205\n        /* \"ERC1155.sol\":11896:11917  _asSingletonArray(id) */\n      jump\t// in\n    tag_237:\n        /* \"ERC1155.sol\":11873:11917  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":11928:11952  uint256[] memory amounts */\n      0x00\n        /* \"ERC1155.sol\":11955:11980  _asSingletonArray(amount) */\n      tag_238\n        /* \"ERC1155.sol\":11973:11979  amount */\n      dup5\n        /* \"ERC1155.sol\":11955:11972  _asSingletonArray */\n      tag_205\n        /* \"ERC1155.sol\":11955:11980  _asSingletonArray(amount) */\n      jump\t// in\n    tag_238:\n        /* \"ERC1155.sol\":11928:11980  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":11993:12059  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_239\n        /* \"ERC1155.sol\":12014:12022  operator */\n      dup4\n        /* \"ERC1155.sol\":12024:12028  from */\n      dup8\n        /* \"ERC1155.sol\":12038:12039  0 */\n      0x00\n        /* \"ERC1155.sol\":12042:12045  ids */\n      dup6\n        /* \"ERC1155.sol\":12047:12054  amounts */\n      dup6\n        /* \"ERC1155.sol\":11993:12059  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC1155.sol\":11993:12013  _beforeTokenTransfer */\n      tag_180\n        /* \"ERC1155.sol\":11993:12059  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_239:\n        /* \"ERC1155.sol\":12072:12091  uint256 fromBalance */\n      0x00\n        /* \"ERC1155.sol\":12094:12103  _balances */\n      0x02\n        /* \"ERC1155.sol\":12094:12107  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":12104:12106  id */\n      dup8\n        /* \"ERC1155.sol\":12094:12107  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":12094:12113  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":12108:12112  from */\n      dup9\n        /* \"ERC1155.sol\":12094:12113  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155.sol\":12072:12113  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155.sol\":12147:12153  amount */\n      dup5\n        /* \"ERC1155.sol\":12132:12143  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":12132:12153  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155.sol\":12124:12194  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"ERC1155.sol\":12266:12272  amount */\n      dup5\n        /* \"ERC1155.sol\":12252:12263  fromBalance */\n      dup2\n        /* \"ERC1155.sol\":12252:12272  fromBalance - amount */\n      sub\n        /* \"ERC1155.sol\":12230:12239  _balances */\n      0x02\n        /* \"ERC1155.sol\":12230:12243  _balances[id] */\n      0x00\n        /* \"ERC1155.sol\":12240:12242  id */\n      dup9\n        /* \"ERC1155.sol\":12230:12243  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":12230:12249  _balances[id][from] */\n      0x00\n        /* \"ERC1155.sol\":12244:12248  from */\n      dup10\n        /* \"ERC1155.sol\":12230:12249  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155.sol\":12230:12272  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155.sol\":12340:12341  0 */\n      0x00\n        /* \"ERC1155.sol\":12301:12355  TransferSingle(operator, from, address(0), id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":12326:12330  from */\n      dup8\n        /* \"ERC1155.sol\":12301:12355  TransferSingle(operator, from, address(0), id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155.sol\":12316:12324  operator */\n      dup6\n        /* \"ERC1155.sol\":12301:12355  TransferSingle(operator, from, address(0), id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155.sol\":12344:12346  id */\n      dup10\n        /* \"ERC1155.sol\":12348:12354  amount */\n      dup10\n        /* \"ERC1155.sol\":12301:12355  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      tag_243\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155.sol\":12368:12433  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_244\n        /* \"ERC1155.sol\":12388:12396  operator */\n      dup5\n        /* \"ERC1155.sol\":12398:12402  from */\n      dup9\n        /* \"ERC1155.sol\":12412:12413  0 */\n      0x00\n        /* \"ERC1155.sol\":12416:12419  ids */\n      dup7\n        /* \"ERC1155.sol\":12421:12428  amounts */\n      dup7\n        /* \"ERC1155.sol\":12368:12433  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"ERC1155.sol\":12368:12387  _afterTokenTransfer */\n      tag_196\n        /* \"ERC1155.sol\":12368:12433  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_244:\n        /* \"ERC1155.sol\":11741:12441  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"ERC1155.sol\":11633:12441  function _burn(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":15092:15313  function _beforeTokenTransfer(\r... */\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":16268:16488  function _afterTokenTransfer(\r... */\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":17248:18061  function _doSafeBatchTransferAcceptanceCheck(\r... */\n    tag_198:\n        /* \"ERC1155.sol\":17488:17503  to.isContract() */\n      tag_248\n        /* \"ERC1155.sol\":17488:17490  to */\n      dup5\n        /* \"ERC1155.sol\":17488:17501  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_249\n        /* \"ERC1155.sol\":17488:17503  to.isContract() */\n      jump\t// in\n    tag_248:\n        /* \"ERC1155.sol\":17484:18054  if (to.isContract()) {\r... */\n      iszero\n      tag_250\n      jumpi\n        /* \"ERC1155.sol\":17541:17543  to */\n      dup4\n        /* \"ERC1155.sol\":17524:17567  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"ERC1155.sol\":17568:17576  operator */\n      dup8\n        /* \"ERC1155.sol\":17578:17582  from */\n      dup8\n        /* \"ERC1155.sol\":17584:17587  ids */\n      dup7\n        /* \"ERC1155.sol\":17589:17596  amounts */\n      dup7\n        /* \"ERC1155.sol\":17598:17602  data */\n      dup7\n        /* \"ERC1155.sol\":17524:17603  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_254\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      0x01\n    tag_254:\n        /* \"ERC1155.sol\":17520:18043  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n      tag_257\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_260\n      jumpi\n      pop\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n      dup1\n      tag_265\n      jumpi\n      pop\n      jump(tag_259)\n    tag_265:\n        /* \"ERC1155.sol\":17916:17922  reason */\n      dup1\n        /* \"ERC1155.sol\":17909:17923  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":17520:18043  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_260:\n      pop\n    tag_259:\n        /* \"ERC1155.sol\":17965:18027  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":17520:18043  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_257:\n        /* \"ERC1155.sol\":17697:17745  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"ERC1155.sol\":17685:17745  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155.sol\":17685:17693  response */\n      dup2\n        /* \"ERC1155.sol\":17685:17745  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155.sol\":17681:17840  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n      tag_270\n      jumpi\n        /* \"ERC1155.sol\":17770:17820  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":17681:17840  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n    tag_270:\n        /* \"ERC1155.sol\":17604:17855  returns (\r... */\n      pop\n        /* \"ERC1155.sol\":17484:18054  if (to.isContract()) {\r... */\n    tag_250:\n        /* \"ERC1155.sol\":17248:18061  function _doSafeBatchTransferAcceptanceCheck(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":18069:18267  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n    tag_205:\n        /* \"ERC1155.sol\":18135:18151  uint256[] memory */\n      0x60\n        /* \"ERC1155.sol\":18164:18186  uint256[] memory array */\n      0x00\n        /* \"ERC1155.sol\":18203:18204  1 */\n      0x01\n        /* \"ERC1155.sol\":18189:18205  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_274\n      jumpi\n      tag_275\n      tag_108\n      jump\t// in\n    tag_275:\n    tag_274:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_276\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_276:\n      pop\n        /* \"ERC1155.sol\":18164:18205  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155.sol\":18227:18234  element */\n      dup3\n        /* \"ERC1155.sol\":18216:18221  array */\n      dup2\n        /* \"ERC1155.sol\":18222:18223  0 */\n      0x00\n        /* \"ERC1155.sol\":18216:18224  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_278\n      tag_116\n      jump\t// in\n    tag_278:\n    tag_277:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155.sol\":18216:18234  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155.sol\":18254:18259  array */\n      dup1\n        /* \"ERC1155.sol\":18247:18259  return array */\n      swap2\n      pop\n      pop\n        /* \"ERC1155.sol\":18069:18267  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155.sol\":16496:17240  function _doSafeTransferAcceptanceCheck(\r... */\n    tag_213:\n        /* \"ERC1155.sol\":16711:16726  to.isContract() */\n      tag_280\n        /* \"ERC1155.sol\":16711:16713  to */\n      dup5\n        /* \"ERC1155.sol\":16711:16724  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_249\n        /* \"ERC1155.sol\":16711:16726  to.isContract() */\n      jump\t// in\n    tag_280:\n        /* \"ERC1155.sol\":16707:17233  if (to.isContract()) {\r... */\n      iszero\n      tag_281\n      jumpi\n        /* \"ERC1155.sol\":16764:16766  to */\n      dup4\n        /* \"ERC1155.sol\":16747:16785  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"ERC1155.sol\":16786:16794  operator */\n      dup8\n        /* \"ERC1155.sol\":16796:16800  from */\n      dup8\n        /* \"ERC1155.sol\":16802:16804  id */\n      dup7\n        /* \"ERC1155.sol\":16806:16812  amount */\n      dup7\n        /* \"ERC1155.sol\":16814:16818  data */\n      dup7\n        /* \"ERC1155.sol\":16747:16819  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_285\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_286:\n      0x01\n    tag_285:\n        /* \"ERC1155.sol\":16743:17222  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n      tag_287\n      jumpi\n      tag_291\n      tag_262\n      jump\t// in\n    tag_291:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_290\n      jumpi\n      pop\n      tag_292\n      tag_264\n      jump\t// in\n    tag_292:\n      dup1\n      tag_293\n      jumpi\n      pop\n      jump(tag_289)\n    tag_293:\n        /* \"ERC1155.sol\":17095:17101  reason */\n      dup1\n        /* \"ERC1155.sol\":17088:17102  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":16743:17222  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n    tag_290:\n      pop\n    tag_289:\n        /* \"ERC1155.sol\":17144:17206  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_268\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":16743:17222  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n    tag_287:\n        /* \"ERC1155.sol\":16881:16924  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"ERC1155.sol\":16869:16924  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155.sol\":16869:16877  response */\n      dup2\n        /* \"ERC1155.sol\":16869:16924  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155.sol\":16865:17019  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n      tag_297\n      jumpi\n        /* \"ERC1155.sol\":16949:16999  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_272\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155.sol\":16865:17019  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n    tag_297:\n        /* \"ERC1155.sol\":16820:17034  returns (bytes4 response) {\r... */\n      pop\n        /* \"ERC1155.sol\":16707:17233  if (to.isContract()) {\r... */\n    tag_281:\n        /* \"ERC1155.sol\":16496:17240  function _doSafeTransferAcceptanceCheck(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n    tag_249:\n        /* \"Address.sol\":1270:1274  bool */\n      0x00\n        /* \"Address.sol\":1527:1528  0 */\n      dup1\n        /* \"Address.sol\":1505:1512  account */\n      dup3\n        /* \"Address.sol\":1505:1524  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"Address.sol\":1505:1528  account.code.length > 0 */\n      gt\n        /* \"Address.sol\":1498:1528  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_301:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_303\n        /* \"#utility.yul\":161:225   */\n      tag_304\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":145:226   */\n      tag_306\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_308\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":350:493   */\n    tag_307:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_310:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_313\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_310)\n    tag_312:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1491   */\n    tag_315:\n        /* \"#utility.yul\":865:870   */\n      0x00\n        /* \"#utility.yul\":890:971   */\n      tag_317\n        /* \"#utility.yul\":906:970   */\n      tag_318\n        /* \"#utility.yul\":963:969   */\n      dup5\n        /* \"#utility.yul\":906:970   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":890:971   */\n      tag_306\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":881:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":991:996   */\n      dup1\n        /* \"#utility.yul\":1020:1026   */\n      dup4\n        /* \"#utility.yul\":1013:1018   */\n      dup3\n        /* \"#utility.yul\":1006:1027   */\n      mstore\n        /* \"#utility.yul\":1054:1058   */\n      0x20\n        /* \"#utility.yul\":1047:1052   */\n      dup3\n        /* \"#utility.yul\":1043:1059   */\n      add\n        /* \"#utility.yul\":1036:1059   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1086   */\n      dup3\n        /* \"#utility.yul\":1130:1133   */\n      dup6\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup7\n        /* \"#utility.yul\":1110:1127   */\n      mul\n        /* \"#utility.yul\":1105:1108   */\n      dup3\n        /* \"#utility.yul\":1101:1128   */\n      add\n        /* \"#utility.yul\":1098:1134   */\n      gt\n        /* \"#utility.yul\":1095:1238   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":1149:1228   */\n      tag_321\n      tag_309\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1095:1238   */\n    tag_320:\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1247:1485   */\n    tag_322:\n        /* \"#utility.yul\":1272:1278   */\n      dup6\n        /* \"#utility.yul\":1269:1270   */\n      dup2\n        /* \"#utility.yul\":1266:1279   */\n      lt\n        /* \"#utility.yul\":1247:1485   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":1340:1343   */\n      dup2\n        /* \"#utility.yul\":1369:1406   */\n      tag_325\n        /* \"#utility.yul\":1402:1405   */\n      dup9\n        /* \"#utility.yul\":1390:1400   */\n      dup3\n        /* \"#utility.yul\":1369:1406   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1364:1367   */\n      dup5\n        /* \"#utility.yul\":1357:1407   */\n      mstore\n        /* \"#utility.yul\":1436:1440   */\n      0x20\n        /* \"#utility.yul\":1431:1434   */\n      dup5\n        /* \"#utility.yul\":1427:1441   */\n      add\n        /* \"#utility.yul\":1420:1441   */\n      swap4\n      pop\n        /* \"#utility.yul\":1470:1474   */\n      0x20\n        /* \"#utility.yul\":1465:1468   */\n      dup4\n        /* \"#utility.yul\":1461:1475   */\n      add\n        /* \"#utility.yul\":1454:1475   */\n      swap3\n      pop\n        /* \"#utility.yul\":1307:1485   */\n      pop\n        /* \"#utility.yul\":1294:1295   */\n      0x01\n        /* \"#utility.yul\":1291:1292   */\n      dup2\n        /* \"#utility.yul\":1287:1296   */\n      add\n        /* \"#utility.yul\":1282:1296   */\n      swap1\n      pop\n        /* \"#utility.yul\":1247:1485   */\n      jump(tag_322)\n    tag_324:\n        /* \"#utility.yul\":1251:1265   */\n      pop\n        /* \"#utility.yul\":871:1491   */\n      pop\n      pop\n        /* \"#utility.yul\":769:1491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1497:1907   */\n    tag_327:\n        /* \"#utility.yul\":1574:1579   */\n      0x00\n        /* \"#utility.yul\":1599:1664   */\n      tag_329\n        /* \"#utility.yul\":1615:1663   */\n      tag_330\n        /* \"#utility.yul\":1656:1662   */\n      dup5\n        /* \"#utility.yul\":1615:1663   */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1599:1664   */\n      tag_306\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1590:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1693   */\n      dup3\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1673:1694   */\n      mstore\n        /* \"#utility.yul\":1725:1729   */\n      0x20\n        /* \"#utility.yul\":1718:1723   */\n      dup2\n        /* \"#utility.yul\":1714:1730   */\n      add\n        /* \"#utility.yul\":1763:1766   */\n      dup5\n        /* \"#utility.yul\":1754:1760   */\n      dup5\n        /* \"#utility.yul\":1749:1752   */\n      dup5\n        /* \"#utility.yul\":1745:1761   */\n      add\n        /* \"#utility.yul\":1742:1767   */\n      gt\n        /* \"#utility.yul\":1739:1851   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1770:1849   */\n      tag_333\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1739:1851   */\n    tag_332:\n        /* \"#utility.yul\":1860:1901   */\n      tag_335\n        /* \"#utility.yul\":1894:1900   */\n      dup5\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1884:1887   */\n      dup6\n        /* \"#utility.yul\":1860:1901   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1580:1907   */\n      pop\n        /* \"#utility.yul\":1497:1907   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2052   */\n    tag_314:\n        /* \"#utility.yul\":1959:1964   */\n      0x00\n        /* \"#utility.yul\":1997:2003   */\n      dup2\n        /* \"#utility.yul\":1984:2004   */\n      calldataload\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2046   */\n      tag_338\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1913:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2075:2445   */\n    tag_340:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2195:2198   */\n      dup3\n        /* \"#utility.yul\":2188:2192   */\n      0x1f\n        /* \"#utility.yul\":2180:2186   */\n      dup4\n        /* \"#utility.yul\":2176:2193   */\n      add\n        /* \"#utility.yul\":2172:2199   */\n      slt\n        /* \"#utility.yul\":2162:2284   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2203:2282   */\n      tag_343\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2162:2284   */\n    tag_342:\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2345:2439   */\n      tag_345\n        /* \"#utility.yul\":2435:2438   */\n      dup5\n        /* \"#utility.yul\":2427:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2424   */\n      0x20\n        /* \"#utility.yul\":2412:2418   */\n      dup7\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2345:2439   */\n      tag_301\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2336:2439   */\n      swap2\n      pop\n        /* \"#utility.yul\":2152:2445   */\n      pop\n        /* \"#utility.yul\":2075:2445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2838   */\n    tag_346:\n        /* \"#utility.yul\":2539:2544   */\n      0x00\n        /* \"#utility.yul\":2588:2591   */\n      dup3\n        /* \"#utility.yul\":2581:2585   */\n      0x1f\n        /* \"#utility.yul\":2573:2579   */\n      dup4\n        /* \"#utility.yul\":2569:2586   */\n      add\n        /* \"#utility.yul\":2565:2592   */\n      slt\n        /* \"#utility.yul\":2555:2677   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2596:2675   */\n      tag_349\n      tag_344\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2555:2677   */\n    tag_348:\n        /* \"#utility.yul\":2713:2719   */\n      dup2\n        /* \"#utility.yul\":2700:2720   */\n      calldataload\n        /* \"#utility.yul\":2738:2832   */\n      tag_350\n        /* \"#utility.yul\":2828:2831   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2817   */\n      0x20\n        /* \"#utility.yul\":2805:2811   */\n      dup7\n        /* \"#utility.yul\":2801:2818   */\n      add\n        /* \"#utility.yul\":2738:2832   */\n      tag_315\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2729:2832   */\n      swap2\n      pop\n        /* \"#utility.yul\":2545:2838   */\n      pop\n        /* \"#utility.yul\":2468:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2977   */\n    tag_351:\n        /* \"#utility.yul\":2887:2892   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup2\n        /* \"#utility.yul\":2912:2932   */\n      calldataload\n        /* \"#utility.yul\":2903:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:2971   */\n      tag_353\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2941:2971   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2844:2977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3120   */\n    tag_355:\n        /* \"#utility.yul\":3028:3033   */\n      0x00\n        /* \"#utility.yul\":3066:3072   */\n      dup2\n        /* \"#utility.yul\":3053:3073   */\n      calldataload\n        /* \"#utility.yul\":3044:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3114   */\n      tag_357\n        /* \"#utility.yul\":3108:3113   */\n      dup2\n        /* \"#utility.yul\":3082:3114   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2983:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3267   */\n    tag_359:\n        /* \"#utility.yul\":3182:3187   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3207:3220   */\n      mload\n        /* \"#utility.yul\":3198:3220   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3261   */\n      tag_361\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_358\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3126:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3286:3624   */\n    tag_362:\n        /* \"#utility.yul\":3341:3346   */\n      0x00\n        /* \"#utility.yul\":3390:3393   */\n      dup3\n        /* \"#utility.yul\":3383:3387   */\n      0x1f\n        /* \"#utility.yul\":3375:3381   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3367:3394   */\n      slt\n        /* \"#utility.yul\":3357:3479   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":3398:3477   */\n      tag_365\n      tag_344\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3357:3479   */\n    tag_364:\n        /* \"#utility.yul\":3515:3521   */\n      dup2\n        /* \"#utility.yul\":3502:3522   */\n      calldataload\n        /* \"#utility.yul\":3540:3618   */\n      tag_366\n        /* \"#utility.yul\":3614:3617   */\n      dup5\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3599:3603   */\n      0x20\n        /* \"#utility.yul\":3591:3597   */\n      dup7\n        /* \"#utility.yul\":3587:3604   */\n      add\n        /* \"#utility.yul\":3540:3618   */\n      tag_327\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3531:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3347:3624   */\n      pop\n        /* \"#utility.yul\":3286:3624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3630:3769   */\n    tag_326:\n        /* \"#utility.yul\":3676:3681   */\n      0x00\n        /* \"#utility.yul\":3714:3720   */\n      dup2\n        /* \"#utility.yul\":3701:3721   */\n      calldataload\n        /* \"#utility.yul\":3692:3721   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3763   */\n      tag_368\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3730:3763   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3630:3769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3775:4249   */\n    tag_60:\n        /* \"#utility.yul\":3843:3849   */\n      0x00\n        /* \"#utility.yul\":3851:3857   */\n      dup1\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3888:3897   */\n      dup4\n        /* \"#utility.yul\":3879:3886   */\n      dup6\n        /* \"#utility.yul\":3875:3898   */\n      sub\n        /* \"#utility.yul\":3871:3903   */\n      slt\n        /* \"#utility.yul\":3868:3987   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":3906:3985   */\n      tag_372\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3868:3987   */\n    tag_371:\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4051:4104   */\n      tag_374\n        /* \"#utility.yul\":4096:4103   */\n      dup6\n        /* \"#utility.yul\":4087:4093   */\n      dup3\n        /* \"#utility.yul\":4076:4085   */\n      dup7\n        /* \"#utility.yul\":4072:4094   */\n      add\n        /* \"#utility.yul\":4051:4104   */\n      tag_314\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4041:4104   */\n      swap3\n      pop\n        /* \"#utility.yul\":3997:4114   */\n      pop\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4179:4232   */\n      tag_375\n        /* \"#utility.yul\":4224:4231   */\n      dup6\n        /* \"#utility.yul\":4215:4221   */\n      dup3\n        /* \"#utility.yul\":4204:4213   */\n      dup7\n        /* \"#utility.yul\":4200:4222   */\n      add\n        /* \"#utility.yul\":4179:4232   */\n      tag_314\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4169:4232   */\n      swap2\n      pop\n        /* \"#utility.yul\":4124:4242   */\n      pop\n        /* \"#utility.yul\":3775:4249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:5764   */\n    tag_39:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup1\n        /* \"#utility.yul\":4425:4431   */\n      0x00\n        /* \"#utility.yul\":4433:4439   */\n      dup1\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4490:4493   */\n      0xa0\n        /* \"#utility.yul\":4478:4487   */\n      dup7\n        /* \"#utility.yul\":4469:4476   */\n      dup9\n        /* \"#utility.yul\":4465:4488   */\n      sub\n        /* \"#utility.yul\":4461:4494   */\n      slt\n        /* \"#utility.yul\":4458:4578   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":4497:4576   */\n      tag_378\n      tag_373\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4458:4578   */\n    tag_377:\n        /* \"#utility.yul\":4617:4618   */\n      0x00\n        /* \"#utility.yul\":4642:4695   */\n      tag_379\n        /* \"#utility.yul\":4687:4694   */\n      dup9\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      dup10\n        /* \"#utility.yul\":4663:4685   */\n      add\n        /* \"#utility.yul\":4642:4695   */\n      tag_314\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4632:4695   */\n      swap6\n      pop\n        /* \"#utility.yul\":4588:4705   */\n      pop\n        /* \"#utility.yul\":4744:4746   */\n      0x20\n        /* \"#utility.yul\":4770:4823   */\n      tag_380\n        /* \"#utility.yul\":4815:4822   */\n      dup9\n        /* \"#utility.yul\":4806:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4804   */\n      dup10\n        /* \"#utility.yul\":4791:4813   */\n      add\n        /* \"#utility.yul\":4770:4823   */\n      tag_314\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4760:4823   */\n      swap5\n      pop\n        /* \"#utility.yul\":4715:4833   */\n      pop\n        /* \"#utility.yul\":4900:4902   */\n      0x40\n        /* \"#utility.yul\":4889:4898   */\n      dup7\n        /* \"#utility.yul\":4885:4903   */\n      add\n        /* \"#utility.yul\":4872:4904   */\n      calldataload\n        /* \"#utility.yul\":4931:4949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4920:4950   */\n      gt\n        /* \"#utility.yul\":4917:5034   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":4953:5032   */\n      tag_382\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4917:5034   */\n    tag_381:\n        /* \"#utility.yul\":5058:5136   */\n      tag_384\n        /* \"#utility.yul\":5128:5135   */\n      dup9\n        /* \"#utility.yul\":5119:5125   */\n      dup3\n        /* \"#utility.yul\":5108:5117   */\n      dup10\n        /* \"#utility.yul\":5104:5126   */\n      add\n        /* \"#utility.yul\":5058:5136   */\n      tag_346\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5048:5136   */\n      swap4\n      pop\n        /* \"#utility.yul\":4843:5146   */\n      pop\n        /* \"#utility.yul\":5213:5215   */\n      0x60\n        /* \"#utility.yul\":5202:5211   */\n      dup7\n        /* \"#utility.yul\":5198:5216   */\n      add\n        /* \"#utility.yul\":5185:5217   */\n      calldataload\n        /* \"#utility.yul\":5244:5262   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5236:5242   */\n      dup2\n        /* \"#utility.yul\":5233:5263   */\n      gt\n        /* \"#utility.yul\":5230:5347   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_386\n      tag_383\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5230:5347   */\n    tag_385:\n        /* \"#utility.yul\":5371:5449   */\n      tag_387\n        /* \"#utility.yul\":5441:5448   */\n      dup9\n        /* \"#utility.yul\":5432:5438   */\n      dup3\n        /* \"#utility.yul\":5421:5430   */\n      dup10\n        /* \"#utility.yul\":5417:5439   */\n      add\n        /* \"#utility.yul\":5371:5449   */\n      tag_346\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5361:5449   */\n      swap3\n      pop\n        /* \"#utility.yul\":5156:5459   */\n      pop\n        /* \"#utility.yul\":5526:5529   */\n      0x80\n        /* \"#utility.yul\":5515:5524   */\n      dup7\n        /* \"#utility.yul\":5511:5530   */\n      add\n        /* \"#utility.yul\":5498:5531   */\n      calldataload\n        /* \"#utility.yul\":5558:5576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5550:5556   */\n      dup2\n        /* \"#utility.yul\":5547:5577   */\n      gt\n        /* \"#utility.yul\":5544:5661   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":5580:5659   */\n      tag_389\n      tag_383\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5544:5661   */\n    tag_388:\n        /* \"#utility.yul\":5685:5747   */\n      tag_390\n        /* \"#utility.yul\":5739:5746   */\n      dup9\n        /* \"#utility.yul\":5730:5736   */\n      dup3\n        /* \"#utility.yul\":5719:5728   */\n      dup10\n        /* \"#utility.yul\":5715:5737   */\n      add\n        /* \"#utility.yul\":5685:5747   */\n      tag_362\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5469:5757   */\n      pop\n        /* \"#utility.yul\":4255:5764   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:6859   */\n    tag_65:\n        /* \"#utility.yul\":5874:5880   */\n      0x00\n        /* \"#utility.yul\":5882:5888   */\n      dup1\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5898:5904   */\n      dup1\n        /* \"#utility.yul\":5906:5912   */\n      0x00\n        /* \"#utility.yul\":5955:5958   */\n      0xa0\n        /* \"#utility.yul\":5943:5952   */\n      dup7\n        /* \"#utility.yul\":5934:5941   */\n      dup9\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:6043   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":5962:6041   */\n      tag_393\n      tag_373\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5923:6043   */\n    tag_392:\n        /* \"#utility.yul\":6082:6083   */\n      0x00\n        /* \"#utility.yul\":6107:6160   */\n      tag_394\n        /* \"#utility.yul\":6152:6159   */\n      dup9\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6132:6141   */\n      dup10\n        /* \"#utility.yul\":6128:6150   */\n      add\n        /* \"#utility.yul\":6107:6160   */\n      tag_314\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6097:6160   */\n      swap6\n      pop\n        /* \"#utility.yul\":6053:6170   */\n      pop\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"#utility.yul\":6235:6288   */\n      tag_395\n        /* \"#utility.yul\":6280:6287   */\n      dup9\n        /* \"#utility.yul\":6271:6277   */\n      dup3\n        /* \"#utility.yul\":6260:6269   */\n      dup10\n        /* \"#utility.yul\":6256:6278   */\n      add\n        /* \"#utility.yul\":6235:6288   */\n      tag_314\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6225:6288   */\n      swap5\n      pop\n        /* \"#utility.yul\":6180:6298   */\n      pop\n        /* \"#utility.yul\":6337:6339   */\n      0x40\n        /* \"#utility.yul\":6363:6416   */\n      tag_396\n        /* \"#utility.yul\":6408:6415   */\n      dup9\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup10\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_326\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6353:6416   */\n      swap4\n      pop\n        /* \"#utility.yul\":6308:6426   */\n      pop\n        /* \"#utility.yul\":6465:6467   */\n      0x60\n        /* \"#utility.yul\":6491:6544   */\n      tag_397\n        /* \"#utility.yul\":6536:6543   */\n      dup9\n        /* \"#utility.yul\":6527:6533   */\n      dup3\n        /* \"#utility.yul\":6516:6525   */\n      dup10\n        /* \"#utility.yul\":6512:6534   */\n      add\n        /* \"#utility.yul\":6491:6544   */\n      tag_326\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6481:6544   */\n      swap3\n      pop\n        /* \"#utility.yul\":6436:6554   */\n      pop\n        /* \"#utility.yul\":6621:6624   */\n      0x80\n        /* \"#utility.yul\":6610:6619   */\n      dup7\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6593:6626   */\n      calldataload\n        /* \"#utility.yul\":6653:6671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6645:6651   */\n      dup2\n        /* \"#utility.yul\":6642:6672   */\n      gt\n        /* \"#utility.yul\":6639:6756   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":6675:6754   */\n      tag_399\n      tag_383\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6639:6756   */\n    tag_398:\n        /* \"#utility.yul\":6780:6842   */\n      tag_400\n        /* \"#utility.yul\":6834:6841   */\n      dup9\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6814:6823   */\n      dup10\n        /* \"#utility.yul\":6810:6832   */\n      add\n        /* \"#utility.yul\":6780:6842   */\n      tag_362\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6770:6842   */\n      swap2\n      pop\n        /* \"#utility.yul\":6564:6852   */\n      pop\n        /* \"#utility.yul\":5770:6859   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7333   */\n    tag_56:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      dup1\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_403\n      tag_373\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6955:7074   */\n    tag_402:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_404\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_314\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7240:7242   */\n      0x20\n        /* \"#utility.yul\":7266:7316   */\n      tag_405\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7299:7305   */\n      dup3\n        /* \"#utility.yul\":7288:7297   */\n      dup7\n        /* \"#utility.yul\":7284:7306   */\n      add\n        /* \"#utility.yul\":7266:7316   */\n      tag_351\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7256:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7326   */\n      pop\n        /* \"#utility.yul\":6865:7333   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7813   */\n    tag_18:\n        /* \"#utility.yul\":7407:7413   */\n      0x00\n        /* \"#utility.yul\":7415:7421   */\n      dup1\n        /* \"#utility.yul\":7464:7466   */\n      0x40\n        /* \"#utility.yul\":7452:7461   */\n      dup4\n        /* \"#utility.yul\":7443:7450   */\n      dup6\n        /* \"#utility.yul\":7439:7462   */\n      sub\n        /* \"#utility.yul\":7435:7467   */\n      slt\n        /* \"#utility.yul\":7432:7551   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7470:7549   */\n      tag_408\n      tag_373\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7432:7551   */\n    tag_407:\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7615:7668   */\n      tag_409\n        /* \"#utility.yul\":7660:7667   */\n      dup6\n        /* \"#utility.yul\":7651:7657   */\n      dup3\n        /* \"#utility.yul\":7640:7649   */\n      dup7\n        /* \"#utility.yul\":7636:7658   */\n      add\n        /* \"#utility.yul\":7615:7668   */\n      tag_314\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7605:7668   */\n      swap3\n      pop\n        /* \"#utility.yul\":7561:7678   */\n      pop\n        /* \"#utility.yul\":7717:7719   */\n      0x20\n        /* \"#utility.yul\":7743:7796   */\n      tag_410\n        /* \"#utility.yul\":7788:7795   */\n      dup6\n        /* \"#utility.yul\":7779:7785   */\n      dup3\n        /* \"#utility.yul\":7768:7777   */\n      dup7\n        /* \"#utility.yul\":7764:7786   */\n      add\n        /* \"#utility.yul\":7743:7796   */\n      tag_326\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7733:7796   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7806   */\n      pop\n        /* \"#utility.yul\":7339:7813   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8438   */\n    tag_69:\n        /* \"#utility.yul\":7896:7902   */\n      0x00\n        /* \"#utility.yul\":7904:7910   */\n      dup1\n        /* \"#utility.yul\":7912:7918   */\n      0x00\n        /* \"#utility.yul\":7961:7963   */\n      0x60\n        /* \"#utility.yul\":7949:7958   */\n      dup5\n        /* \"#utility.yul\":7940:7947   */\n      dup7\n        /* \"#utility.yul\":7936:7959   */\n      sub\n        /* \"#utility.yul\":7932:7964   */\n      slt\n        /* \"#utility.yul\":7929:8048   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":7967:8046   */\n      tag_413\n      tag_373\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7929:8048   */\n    tag_412:\n        /* \"#utility.yul\":8087:8088   */\n      0x00\n        /* \"#utility.yul\":8112:8165   */\n      tag_414\n        /* \"#utility.yul\":8157:8164   */\n      dup7\n        /* \"#utility.yul\":8148:8154   */\n      dup3\n        /* \"#utility.yul\":8137:8146   */\n      dup8\n        /* \"#utility.yul\":8133:8155   */\n      add\n        /* \"#utility.yul\":8112:8165   */\n      tag_314\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8102:8165   */\n      swap4\n      pop\n        /* \"#utility.yul\":8058:8175   */\n      pop\n        /* \"#utility.yul\":8214:8216   */\n      0x20\n        /* \"#utility.yul\":8240:8293   */\n      tag_415\n        /* \"#utility.yul\":8285:8292   */\n      dup7\n        /* \"#utility.yul\":8276:8282   */\n      dup3\n        /* \"#utility.yul\":8265:8274   */\n      dup8\n        /* \"#utility.yul\":8261:8283   */\n      add\n        /* \"#utility.yul\":8240:8293   */\n      tag_326\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8230:8293   */\n      swap3\n      pop\n        /* \"#utility.yul\":8185:8303   */\n      pop\n        /* \"#utility.yul\":8342:8344   */\n      0x40\n        /* \"#utility.yul\":8368:8421   */\n      tag_416\n        /* \"#utility.yul\":8413:8420   */\n      dup7\n        /* \"#utility.yul\":8404:8410   */\n      dup3\n        /* \"#utility.yul\":8393:8402   */\n      dup8\n        /* \"#utility.yul\":8389:8411   */\n      add\n        /* \"#utility.yul\":8368:8421   */\n      tag_326\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8358:8421   */\n      swap2\n      pop\n        /* \"#utility.yul\":8313:8431   */\n      pop\n        /* \"#utility.yul\":7819:8438   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8444:9387   */\n    tag_49:\n        /* \"#utility.yul\":8539:8545   */\n      0x00\n        /* \"#utility.yul\":8547:8553   */\n      dup1\n        /* \"#utility.yul\":8555:8561   */\n      0x00\n        /* \"#utility.yul\":8563:8569   */\n      dup1\n        /* \"#utility.yul\":8612:8615   */\n      0x80\n        /* \"#utility.yul\":8600:8609   */\n      dup6\n        /* \"#utility.yul\":8591:8598   */\n      dup8\n        /* \"#utility.yul\":8587:8610   */\n      sub\n        /* \"#utility.yul\":8583:8616   */\n      slt\n        /* \"#utility.yul\":8580:8700   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":8619:8698   */\n      tag_419\n      tag_373\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8580:8700   */\n    tag_418:\n        /* \"#utility.yul\":8739:8740   */\n      0x00\n        /* \"#utility.yul\":8764:8817   */\n      tag_420\n        /* \"#utility.yul\":8809:8816   */\n      dup8\n        /* \"#utility.yul\":8800:8806   */\n      dup3\n        /* \"#utility.yul\":8789:8798   */\n      dup9\n        /* \"#utility.yul\":8785:8807   */\n      add\n        /* \"#utility.yul\":8764:8817   */\n      tag_314\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8754:8817   */\n      swap5\n      pop\n        /* \"#utility.yul\":8710:8827   */\n      pop\n        /* \"#utility.yul\":8866:8868   */\n      0x20\n        /* \"#utility.yul\":8892:8945   */\n      tag_421\n        /* \"#utility.yul\":8937:8944   */\n      dup8\n        /* \"#utility.yul\":8928:8934   */\n      dup3\n        /* \"#utility.yul\":8917:8926   */\n      dup9\n        /* \"#utility.yul\":8913:8935   */\n      add\n        /* \"#utility.yul\":8892:8945   */\n      tag_326\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8882:8945   */\n      swap4\n      pop\n        /* \"#utility.yul\":8837:8955   */\n      pop\n        /* \"#utility.yul\":8994:8996   */\n      0x40\n        /* \"#utility.yul\":9020:9073   */\n      tag_422\n        /* \"#utility.yul\":9065:9072   */\n      dup8\n        /* \"#utility.yul\":9056:9062   */\n      dup3\n        /* \"#utility.yul\":9045:9054   */\n      dup9\n        /* \"#utility.yul\":9041:9063   */\n      add\n        /* \"#utility.yul\":9020:9073   */\n      tag_326\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9010:9073   */\n      swap3\n      pop\n        /* \"#utility.yul\":8965:9083   */\n      pop\n        /* \"#utility.yul\":9150:9152   */\n      0x60\n        /* \"#utility.yul\":9139:9148   */\n      dup6\n        /* \"#utility.yul\":9135:9153   */\n      add\n        /* \"#utility.yul\":9122:9154   */\n      calldataload\n        /* \"#utility.yul\":9181:9199   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9173:9179   */\n      dup2\n        /* \"#utility.yul\":9170:9200   */\n      gt\n        /* \"#utility.yul\":9167:9284   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":9203:9282   */\n      tag_424\n      tag_383\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9167:9284   */\n    tag_423:\n        /* \"#utility.yul\":9308:9370   */\n      tag_425\n        /* \"#utility.yul\":9362:9369   */\n      dup8\n        /* \"#utility.yul\":9353:9359   */\n      dup3\n        /* \"#utility.yul\":9342:9351   */\n      dup9\n        /* \"#utility.yul\":9338:9360   */\n      add\n        /* \"#utility.yul\":9308:9370   */\n      tag_362\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9298:9370   */\n      swap2\n      pop\n        /* \"#utility.yul\":9093:9380   */\n      pop\n        /* \"#utility.yul\":8444:9387   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9393:10287   */\n    tag_43:\n        /* \"#utility.yul\":9511:9517   */\n      0x00\n        /* \"#utility.yul\":9519:9525   */\n      dup1\n        /* \"#utility.yul\":9568:9570   */\n      0x40\n        /* \"#utility.yul\":9556:9565   */\n      dup4\n        /* \"#utility.yul\":9547:9554   */\n      dup6\n        /* \"#utility.yul\":9543:9566   */\n      sub\n        /* \"#utility.yul\":9539:9571   */\n      slt\n        /* \"#utility.yul\":9536:9655   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":9574:9653   */\n      tag_428\n      tag_373\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9536:9655   */\n    tag_427:\n        /* \"#utility.yul\":9722:9723   */\n      0x00\n        /* \"#utility.yul\":9711:9720   */\n      dup4\n        /* \"#utility.yul\":9707:9724   */\n      add\n        /* \"#utility.yul\":9694:9725   */\n      calldataload\n        /* \"#utility.yul\":9752:9770   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9744:9750   */\n      dup2\n        /* \"#utility.yul\":9741:9771   */\n      gt\n        /* \"#utility.yul\":9738:9855   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9774:9853   */\n      tag_430\n      tag_383\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9738:9855   */\n    tag_429:\n        /* \"#utility.yul\":9879:9957   */\n      tag_431\n        /* \"#utility.yul\":9949:9956   */\n      dup6\n        /* \"#utility.yul\":9940:9946   */\n      dup3\n        /* \"#utility.yul\":9929:9938   */\n      dup7\n        /* \"#utility.yul\":9925:9947   */\n      add\n        /* \"#utility.yul\":9879:9957   */\n      tag_340\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9869:9957   */\n      swap3\n      pop\n        /* \"#utility.yul\":9665:9967   */\n      pop\n        /* \"#utility.yul\":10034:10036   */\n      0x20\n        /* \"#utility.yul\":10023:10032   */\n      dup4\n        /* \"#utility.yul\":10019:10037   */\n      add\n        /* \"#utility.yul\":10006:10038   */\n      calldataload\n        /* \"#utility.yul\":10065:10083   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10057:10063   */\n      dup2\n        /* \"#utility.yul\":10054:10084   */\n      gt\n        /* \"#utility.yul\":10051:10168   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10087:10166   */\n      tag_433\n      tag_383\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10051:10168   */\n    tag_432:\n        /* \"#utility.yul\":10192:10270   */\n      tag_434\n        /* \"#utility.yul\":10262:10269   */\n      dup6\n        /* \"#utility.yul\":10253:10259   */\n      dup3\n        /* \"#utility.yul\":10242:10251   */\n      dup7\n        /* \"#utility.yul\":10238:10260   */\n      add\n        /* \"#utility.yul\":10192:10270   */\n      tag_346\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10182:10270   */\n      swap2\n      pop\n        /* \"#utility.yul\":9977:10280   */\n      pop\n        /* \"#utility.yul\":9393:10287   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10293:10620   */\n    tag_24:\n        /* \"#utility.yul\":10351:10357   */\n      0x00\n        /* \"#utility.yul\":10400:10402   */\n      0x20\n        /* \"#utility.yul\":10388:10397   */\n      dup3\n        /* \"#utility.yul\":10379:10386   */\n      dup5\n        /* \"#utility.yul\":10375:10398   */\n      sub\n        /* \"#utility.yul\":10371:10403   */\n      slt\n        /* \"#utility.yul\":10368:10487   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10406:10485   */\n      tag_437\n      tag_373\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10368:10487   */\n    tag_436:\n        /* \"#utility.yul\":10526:10527   */\n      0x00\n        /* \"#utility.yul\":10551:10603   */\n      tag_438\n        /* \"#utility.yul\":10595:10602   */\n      dup5\n        /* \"#utility.yul\":10586:10592   */\n      dup3\n        /* \"#utility.yul\":10575:10584   */\n      dup6\n        /* \"#utility.yul\":10571:10593   */\n      add\n        /* \"#utility.yul\":10551:10603   */\n      tag_355\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10541:10603   */\n      swap2\n      pop\n        /* \"#utility.yul\":10497:10613   */\n      pop\n        /* \"#utility.yul\":10293:10620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10626:10975   */\n    tag_256:\n        /* \"#utility.yul\":10695:10701   */\n      0x00\n        /* \"#utility.yul\":10744:10746   */\n      0x20\n        /* \"#utility.yul\":10732:10741   */\n      dup3\n        /* \"#utility.yul\":10723:10730   */\n      dup5\n        /* \"#utility.yul\":10719:10742   */\n      sub\n        /* \"#utility.yul\":10715:10747   */\n      slt\n        /* \"#utility.yul\":10712:10831   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10750:10829   */\n      tag_441\n      tag_373\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10712:10831   */\n    tag_440:\n        /* \"#utility.yul\":10870:10871   */\n      0x00\n        /* \"#utility.yul\":10895:10958   */\n      tag_442\n        /* \"#utility.yul\":10950:10957   */\n      dup5\n        /* \"#utility.yul\":10941:10947   */\n      dup3\n        /* \"#utility.yul\":10930:10939   */\n      dup6\n        /* \"#utility.yul\":10926:10948   */\n      add\n        /* \"#utility.yul\":10895:10958   */\n      tag_359\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10885:10958   */\n      swap2\n      pop\n        /* \"#utility.yul\":10841:10968   */\n      pop\n        /* \"#utility.yul\":10626:10975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10981:11310   */\n    tag_34:\n        /* \"#utility.yul\":11040:11046   */\n      0x00\n        /* \"#utility.yul\":11089:11091   */\n      0x20\n        /* \"#utility.yul\":11077:11086   */\n      dup3\n        /* \"#utility.yul\":11068:11075   */\n      dup5\n        /* \"#utility.yul\":11064:11087   */\n      sub\n        /* \"#utility.yul\":11060:11092   */\n      slt\n        /* \"#utility.yul\":11057:11176   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":11095:11174   */\n      tag_445\n      tag_373\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11057:11176   */\n    tag_444:\n        /* \"#utility.yul\":11215:11216   */\n      0x00\n        /* \"#utility.yul\":11240:11293   */\n      tag_446\n        /* \"#utility.yul\":11285:11292   */\n      dup5\n        /* \"#utility.yul\":11276:11282   */\n      dup3\n        /* \"#utility.yul\":11265:11274   */\n      dup6\n        /* \"#utility.yul\":11261:11283   */\n      add\n        /* \"#utility.yul\":11240:11293   */\n      tag_326\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11230:11293   */\n      swap2\n      pop\n        /* \"#utility.yul\":11186:11303   */\n      pop\n        /* \"#utility.yul\":10981:11310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11316:11495   */\n    tag_447:\n        /* \"#utility.yul\":11385:11395   */\n      0x00\n        /* \"#utility.yul\":11406:11452   */\n      tag_449\n        /* \"#utility.yul\":11448:11451   */\n      dup4\n        /* \"#utility.yul\":11440:11446   */\n      dup4\n        /* \"#utility.yul\":11406:11452   */\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11484:11488   */\n      0x20\n        /* \"#utility.yul\":11479:11482   */\n      dup4\n        /* \"#utility.yul\":11475:11489   */\n      add\n        /* \"#utility.yul\":11461:11489   */\n      swap1\n      pop\n        /* \"#utility.yul\":11316:11495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11501:11619   */\n    tag_451:\n        /* \"#utility.yul\":11588:11612   */\n      tag_453\n        /* \"#utility.yul\":11606:11611   */\n      dup2\n        /* \"#utility.yul\":11588:11612   */\n      tag_454\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11583:11586   */\n      dup3\n        /* \"#utility.yul\":11576:11613   */\n      mstore\n        /* \"#utility.yul\":11501:11619   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11655:12387   */\n    tag_455:\n        /* \"#utility.yul\":11774:11777   */\n      0x00\n        /* \"#utility.yul\":11803:11857   */\n      tag_457\n        /* \"#utility.yul\":11851:11856   */\n      dup3\n        /* \"#utility.yul\":11803:11857   */\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11873:11959   */\n      tag_459\n        /* \"#utility.yul\":11952:11958   */\n      dup2\n        /* \"#utility.yul\":11947:11950   */\n      dup6\n        /* \"#utility.yul\":11873:11959   */\n      tag_460\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11866:11959   */\n      swap4\n      pop\n        /* \"#utility.yul\":11983:12039   */\n      tag_461\n        /* \"#utility.yul\":12033:12038   */\n      dup4\n        /* \"#utility.yul\":11983:12039   */\n      tag_462\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12062:12069   */\n      dup1\n        /* \"#utility.yul\":12093:12094   */\n      0x00\n        /* \"#utility.yul\":12078:12362   */\n    tag_463:\n        /* \"#utility.yul\":12103:12109   */\n      dup4\n        /* \"#utility.yul\":12100:12101   */\n      dup2\n        /* \"#utility.yul\":12097:12110   */\n      lt\n        /* \"#utility.yul\":12078:12362   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":12179:12185   */\n      dup2\n        /* \"#utility.yul\":12173:12186   */\n      mload\n        /* \"#utility.yul\":12206:12269   */\n      tag_466\n        /* \"#utility.yul\":12265:12268   */\n      dup9\n        /* \"#utility.yul\":12250:12263   */\n      dup3\n        /* \"#utility.yul\":12206:12269   */\n      tag_447\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12199:12269   */\n      swap8\n      pop\n        /* \"#utility.yul\":12292:12352   */\n      tag_467\n        /* \"#utility.yul\":12345:12351   */\n      dup4\n        /* \"#utility.yul\":12292:12352   */\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12282:12352   */\n      swap3\n      pop\n        /* \"#utility.yul\":12138:12362   */\n      pop\n        /* \"#utility.yul\":12125:12126   */\n      0x01\n        /* \"#utility.yul\":12122:12123   */\n      dup2\n        /* \"#utility.yul\":12118:12127   */\n      add\n        /* \"#utility.yul\":12113:12127   */\n      swap1\n      pop\n        /* \"#utility.yul\":12078:12362   */\n      jump(tag_463)\n    tag_465:\n        /* \"#utility.yul\":12082:12096   */\n      pop\n        /* \"#utility.yul\":12378:12381   */\n      dup6\n        /* \"#utility.yul\":12371:12381   */\n      swap4\n      pop\n        /* \"#utility.yul\":11779:12387   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11655:12387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12393:12502   */\n    tag_469:\n        /* \"#utility.yul\":12474:12495   */\n      tag_471\n        /* \"#utility.yul\":12489:12494   */\n      dup2\n        /* \"#utility.yul\":12474:12495   */\n      tag_472\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12469:12472   */\n      dup3\n        /* \"#utility.yul\":12462:12496   */\n      mstore\n        /* \"#utility.yul\":12393:12502   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12508:12868   */\n    tag_473:\n        /* \"#utility.yul\":12594:12597   */\n      0x00\n        /* \"#utility.yul\":12622:12660   */\n      tag_475\n        /* \"#utility.yul\":12654:12659   */\n      dup3\n        /* \"#utility.yul\":12622:12660   */\n      tag_476\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12676:12746   */\n      tag_477\n        /* \"#utility.yul\":12739:12745   */\n      dup2\n        /* \"#utility.yul\":12734:12737   */\n      dup6\n        /* \"#utility.yul\":12676:12746   */\n      tag_478\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12669:12746   */\n      swap4\n      pop\n        /* \"#utility.yul\":12755:12807   */\n      tag_479\n        /* \"#utility.yul\":12800:12806   */\n      dup2\n        /* \"#utility.yul\":12795:12798   */\n      dup6\n        /* \"#utility.yul\":12788:12792   */\n      0x20\n        /* \"#utility.yul\":12781:12786   */\n      dup7\n        /* \"#utility.yul\":12777:12793   */\n      add\n        /* \"#utility.yul\":12755:12807   */\n      tag_480\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12832:12861   */\n      tag_481\n        /* \"#utility.yul\":12854:12860   */\n      dup2\n        /* \"#utility.yul\":12832:12861   */\n      tag_482\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12827:12830   */\n      dup5\n        /* \"#utility.yul\":12823:12862   */\n      add\n        /* \"#utility.yul\":12816:12862   */\n      swap2\n      pop\n        /* \"#utility.yul\":12598:12868   */\n      pop\n        /* \"#utility.yul\":12508:12868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12874:13238   */\n    tag_483:\n        /* \"#utility.yul\":12962:12965   */\n      0x00\n        /* \"#utility.yul\":12990:13029   */\n      tag_485\n        /* \"#utility.yul\":13023:13028   */\n      dup3\n        /* \"#utility.yul\":12990:13029   */\n      tag_486\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13045:13116   */\n      tag_487\n        /* \"#utility.yul\":13109:13115   */\n      dup2\n        /* \"#utility.yul\":13104:13107   */\n      dup6\n        /* \"#utility.yul\":13045:13116   */\n      tag_488\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13038:13116   */\n      swap4\n      pop\n        /* \"#utility.yul\":13125:13177   */\n      tag_489\n        /* \"#utility.yul\":13170:13176   */\n      dup2\n        /* \"#utility.yul\":13165:13168   */\n      dup6\n        /* \"#utility.yul\":13158:13162   */\n      0x20\n        /* \"#utility.yul\":13151:13156   */\n      dup7\n        /* \"#utility.yul\":13147:13163   */\n      add\n        /* \"#utility.yul\":13125:13177   */\n      tag_480\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13202:13231   */\n      tag_490\n        /* \"#utility.yul\":13224:13230   */\n      dup2\n        /* \"#utility.yul\":13202:13231   */\n      tag_482\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":13197:13200   */\n      dup5\n        /* \"#utility.yul\":13193:13232   */\n      add\n        /* \"#utility.yul\":13186:13232   */\n      swap2\n      pop\n        /* \"#utility.yul\":12966:13238   */\n      pop\n        /* \"#utility.yul\":12874:13238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13244:13621   */\n    tag_491:\n        /* \"#utility.yul\":13350:13353   */\n      0x00\n        /* \"#utility.yul\":13378:13417   */\n      tag_493\n        /* \"#utility.yul\":13411:13416   */\n      dup3\n        /* \"#utility.yul\":13378:13417   */\n      tag_486\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13433:13522   */\n      tag_494\n        /* \"#utility.yul\":13515:13521   */\n      dup2\n        /* \"#utility.yul\":13510:13513   */\n      dup6\n        /* \"#utility.yul\":13433:13522   */\n      tag_495\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13426:13522   */\n      swap4\n      pop\n        /* \"#utility.yul\":13531:13583   */\n      tag_496\n        /* \"#utility.yul\":13576:13582   */\n      dup2\n        /* \"#utility.yul\":13571:13574   */\n      dup6\n        /* \"#utility.yul\":13564:13568   */\n      0x20\n        /* \"#utility.yul\":13557:13562   */\n      dup7\n        /* \"#utility.yul\":13553:13569   */\n      add\n        /* \"#utility.yul\":13531:13583   */\n      tag_480\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13608:13614   */\n      dup1\n        /* \"#utility.yul\":13603:13606   */\n      dup5\n        /* \"#utility.yul\":13599:13615   */\n      add\n        /* \"#utility.yul\":13592:13615   */\n      swap2\n      pop\n        /* \"#utility.yul\":13354:13621   */\n      pop\n        /* \"#utility.yul\":13244:13621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13651:14496   */\n    tag_497:\n        /* \"#utility.yul\":13754:13757   */\n      0x00\n        /* \"#utility.yul\":13791:13796   */\n      dup2\n        /* \"#utility.yul\":13785:13797   */\n      sload\n        /* \"#utility.yul\":13820:13856   */\n      tag_499\n        /* \"#utility.yul\":13846:13855   */\n      dup2\n        /* \"#utility.yul\":13820:13856   */\n      tag_81\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13872:13961   */\n      tag_500\n        /* \"#utility.yul\":13954:13960   */\n      dup2\n        /* \"#utility.yul\":13949:13952   */\n      dup7\n        /* \"#utility.yul\":13872:13961   */\n      tag_495\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13865:13961   */\n      swap5\n      pop\n        /* \"#utility.yul\":13992:13993   */\n      0x01\n        /* \"#utility.yul\":13981:13990   */\n      dup3\n        /* \"#utility.yul\":13977:13994   */\n      and\n        /* \"#utility.yul\":14008:14009   */\n      0x00\n        /* \"#utility.yul\":14003:14140   */\n      dup2\n      eq\n      tag_502\n      jumpi\n        /* \"#utility.yul\":14154:14155   */\n      0x01\n        /* \"#utility.yul\":14149:14490   */\n      dup2\n      eq\n      tag_503\n      jumpi\n        /* \"#utility.yul\":13970:14490   */\n      jump(tag_501)\n        /* \"#utility.yul\":14003:14140   */\n    tag_502:\n        /* \"#utility.yul\":14087:14091   */\n      0xff\n        /* \"#utility.yul\":14083:14092   */\n      not\n        /* \"#utility.yul\":14072:14081   */\n      dup4\n        /* \"#utility.yul\":14068:14093   */\n      and\n        /* \"#utility.yul\":14063:14066   */\n      dup7\n        /* \"#utility.yul\":14056:14094   */\n      mstore\n        /* \"#utility.yul\":14123:14129   */\n      dup2\n        /* \"#utility.yul\":14118:14121   */\n      dup7\n        /* \"#utility.yul\":14114:14130   */\n      add\n        /* \"#utility.yul\":14107:14130   */\n      swap4\n      pop\n        /* \"#utility.yul\":14003:14140   */\n      jump(tag_501)\n        /* \"#utility.yul\":14149:14490   */\n    tag_503:\n        /* \"#utility.yul\":14216:14254   */\n      tag_504\n        /* \"#utility.yul\":14248:14253   */\n      dup6\n        /* \"#utility.yul\":14216:14254   */\n      tag_505\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14276:14277   */\n      0x00\n        /* \"#utility.yul\":14290:14444   */\n    tag_506:\n        /* \"#utility.yul\":14304:14310   */\n      dup4\n        /* \"#utility.yul\":14301:14302   */\n      dup2\n        /* \"#utility.yul\":14298:14311   */\n      lt\n        /* \"#utility.yul\":14290:14444   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":14378:14385   */\n      dup2\n        /* \"#utility.yul\":14372:14386   */\n      sload\n        /* \"#utility.yul\":14368:14369   */\n      dup2\n        /* \"#utility.yul\":14363:14366   */\n      dup10\n        /* \"#utility.yul\":14359:14370   */\n      add\n        /* \"#utility.yul\":14352:14387   */\n      mstore\n        /* \"#utility.yul\":14428:14429   */\n      0x01\n        /* \"#utility.yul\":14419:14426   */\n      dup3\n        /* \"#utility.yul\":14415:14430   */\n      add\n        /* \"#utility.yul\":14404:14430   */\n      swap2\n      pop\n        /* \"#utility.yul\":14326:14330   */\n      0x20\n        /* \"#utility.yul\":14323:14324   */\n      dup2\n        /* \"#utility.yul\":14319:14331   */\n      add\n        /* \"#utility.yul\":14314:14331   */\n      swap1\n      pop\n        /* \"#utility.yul\":14290:14444   */\n      jump(tag_506)\n    tag_508:\n        /* \"#utility.yul\":14473:14479   */\n      dup4\n        /* \"#utility.yul\":14468:14471   */\n      dup9\n        /* \"#utility.yul\":14464:14480   */\n      add\n        /* \"#utility.yul\":14457:14480   */\n      swap6\n      pop\n        /* \"#utility.yul\":14156:14490   */\n      pop\n      pop\n        /* \"#utility.yul\":13970:14490   */\n    tag_501:\n      pop\n        /* \"#utility.yul\":13758:14496   */\n      pop\n      pop\n        /* \"#utility.yul\":13651:14496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14502:14868   */\n    tag_509:\n        /* \"#utility.yul\":14644:14647   */\n      0x00\n        /* \"#utility.yul\":14665:14732   */\n      tag_511\n        /* \"#utility.yul\":14729:14731   */\n      0x34\n        /* \"#utility.yul\":14724:14727   */\n      dup4\n        /* \"#utility.yul\":14665:14732   */\n      tag_488\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":14658:14732   */\n      swap2\n      pop\n        /* \"#utility.yul\":14741:14834   */\n      tag_512\n        /* \"#utility.yul\":14830:14833   */\n      dup3\n        /* \"#utility.yul\":14741:14834   */\n      tag_513\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14859:14861   */\n      0x40\n        /* \"#utility.yul\":14854:14857   */\n      dup3\n        /* \"#utility.yul\":14850:14862   */\n      add\n        /* \"#utility.yul\":14843:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14502:14868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14874:15240   */\n    tag_514:\n        /* \"#utility.yul\":15016:15019   */\n      0x00\n        /* \"#utility.yul\":15037:15104   */\n      tag_516\n        /* \"#utility.yul\":15101:15103   */\n      0x2f\n        /* \"#utility.yul\":15096:15099   */\n      dup4\n        /* \"#utility.yul\":15037:15104   */\n      tag_488\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15030:15104   */\n      swap2\n      pop\n        /* \"#utility.yul\":15113:15206   */\n      tag_517\n        /* \"#utility.yul\":15202:15205   */\n      dup3\n        /* \"#utility.yul\":15113:15206   */\n      tag_518\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15231:15233   */\n      0x40\n        /* \"#utility.yul\":15226:15229   */\n      dup3\n        /* \"#utility.yul\":15222:15234   */\n      add\n        /* \"#utility.yul\":15215:15234   */\n      swap1\n      pop\n        /* \"#utility.yul\":14874:15240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15246:15612   */\n    tag_519:\n        /* \"#utility.yul\":15388:15391   */\n      0x00\n        /* \"#utility.yul\":15409:15476   */\n      tag_521\n        /* \"#utility.yul\":15473:15475   */\n      0x28\n        /* \"#utility.yul\":15468:15471   */\n      dup4\n        /* \"#utility.yul\":15409:15476   */\n      tag_488\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15402:15476   */\n      swap2\n      pop\n        /* \"#utility.yul\":15485:15578   */\n      tag_522\n        /* \"#utility.yul\":15574:15577   */\n      dup3\n        /* \"#utility.yul\":15485:15578   */\n      tag_523\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15603:15605   */\n      0x40\n        /* \"#utility.yul\":15598:15601   */\n      dup3\n        /* \"#utility.yul\":15594:15606   */\n      add\n        /* \"#utility.yul\":15587:15606   */\n      swap1\n      pop\n        /* \"#utility.yul\":15246:15612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15618:15984   */\n    tag_524:\n        /* \"#utility.yul\":15760:15763   */\n      0x00\n        /* \"#utility.yul\":15781:15848   */\n      tag_526\n        /* \"#utility.yul\":15845:15847   */\n      0x24\n        /* \"#utility.yul\":15840:15843   */\n      dup4\n        /* \"#utility.yul\":15781:15848   */\n      tag_488\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15774:15848   */\n      swap2\n      pop\n        /* \"#utility.yul\":15857:15950   */\n      tag_527\n        /* \"#utility.yul\":15946:15949   */\n      dup3\n        /* \"#utility.yul\":15857:15950   */\n      tag_528\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15975:15977   */\n      0x40\n        /* \"#utility.yul\":15970:15973   */\n      dup3\n        /* \"#utility.yul\":15966:15978   */\n      add\n        /* \"#utility.yul\":15959:15978   */\n      swap1\n      pop\n        /* \"#utility.yul\":15618:15984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15990:16356   */\n    tag_529:\n        /* \"#utility.yul\":16132:16135   */\n      0x00\n        /* \"#utility.yul\":16153:16220   */\n      tag_531\n        /* \"#utility.yul\":16217:16219   */\n      0x2a\n        /* \"#utility.yul\":16212:16215   */\n      dup4\n        /* \"#utility.yul\":16153:16220   */\n      tag_488\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16146:16220   */\n      swap2\n      pop\n        /* \"#utility.yul\":16229:16322   */\n      tag_532\n        /* \"#utility.yul\":16318:16321   */\n      dup3\n        /* \"#utility.yul\":16229:16322   */\n      tag_533\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16347:16349   */\n      0x40\n        /* \"#utility.yul\":16342:16345   */\n      dup3\n        /* \"#utility.yul\":16338:16350   */\n      add\n        /* \"#utility.yul\":16331:16350   */\n      swap1\n      pop\n        /* \"#utility.yul\":15990:16356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16362:16728   */\n    tag_534:\n        /* \"#utility.yul\":16504:16507   */\n      0x00\n        /* \"#utility.yul\":16525:16592   */\n      tag_536\n        /* \"#utility.yul\":16589:16591   */\n      0x25\n        /* \"#utility.yul\":16584:16587   */\n      dup4\n        /* \"#utility.yul\":16525:16592   */\n      tag_488\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16518:16592   */\n      swap2\n      pop\n        /* \"#utility.yul\":16601:16694   */\n      tag_537\n        /* \"#utility.yul\":16690:16693   */\n      dup3\n        /* \"#utility.yul\":16601:16694   */\n      tag_538\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16719:16721   */\n      0x40\n        /* \"#utility.yul\":16714:16717   */\n      dup3\n        /* \"#utility.yul\":16710:16722   */\n      add\n        /* \"#utility.yul\":16703:16722   */\n      swap1\n      pop\n        /* \"#utility.yul\":16362:16728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16734:17100   */\n    tag_539:\n        /* \"#utility.yul\":16876:16879   */\n      0x00\n        /* \"#utility.yul\":16897:16964   */\n      tag_541\n        /* \"#utility.yul\":16961:16963   */\n      0x23\n        /* \"#utility.yul\":16956:16959   */\n      dup4\n        /* \"#utility.yul\":16897:16964   */\n      tag_488\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16890:16964   */\n      swap2\n      pop\n        /* \"#utility.yul\":16973:17066   */\n      tag_542\n        /* \"#utility.yul\":17062:17065   */\n      dup3\n        /* \"#utility.yul\":16973:17066   */\n      tag_543\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17091:17093   */\n      0x40\n        /* \"#utility.yul\":17086:17089   */\n      dup3\n        /* \"#utility.yul\":17082:17094   */\n      add\n        /* \"#utility.yul\":17075:17094   */\n      swap1\n      pop\n        /* \"#utility.yul\":16734:17100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17106:17472   */\n    tag_544:\n        /* \"#utility.yul\":17248:17251   */\n      0x00\n        /* \"#utility.yul\":17269:17336   */\n      tag_546\n        /* \"#utility.yul\":17333:17335   */\n      0x2a\n        /* \"#utility.yul\":17328:17331   */\n      dup4\n        /* \"#utility.yul\":17269:17336   */\n      tag_488\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17262:17336   */\n      swap2\n      pop\n        /* \"#utility.yul\":17345:17438   */\n      tag_547\n        /* \"#utility.yul\":17434:17437   */\n      dup3\n        /* \"#utility.yul\":17345:17438   */\n      tag_548\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17463:17465   */\n      0x40\n        /* \"#utility.yul\":17458:17461   */\n      dup3\n        /* \"#utility.yul\":17454:17466   */\n      add\n        /* \"#utility.yul\":17447:17466   */\n      swap1\n      pop\n        /* \"#utility.yul\":17106:17472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17478:17844   */\n    tag_549:\n        /* \"#utility.yul\":17620:17623   */\n      0x00\n        /* \"#utility.yul\":17641:17708   */\n      tag_551\n        /* \"#utility.yul\":17705:17707   */\n      0x29\n        /* \"#utility.yul\":17700:17703   */\n      dup4\n        /* \"#utility.yul\":17641:17708   */\n      tag_488\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17634:17708   */\n      swap2\n      pop\n        /* \"#utility.yul\":17717:17810   */\n      tag_552\n        /* \"#utility.yul\":17806:17809   */\n      dup3\n        /* \"#utility.yul\":17717:17810   */\n      tag_553\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17835:17837   */\n      0x40\n        /* \"#utility.yul\":17830:17833   */\n      dup3\n        /* \"#utility.yul\":17826:17838   */\n      add\n        /* \"#utility.yul\":17819:17838   */\n      swap1\n      pop\n        /* \"#utility.yul\":17478:17844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17850:18216   */\n    tag_554:\n        /* \"#utility.yul\":17992:17995   */\n      0x00\n        /* \"#utility.yul\":18013:18080   */\n      tag_556\n        /* \"#utility.yul\":18077:18079   */\n      0x29\n        /* \"#utility.yul\":18072:18075   */\n      dup4\n        /* \"#utility.yul\":18013:18080   */\n      tag_488\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18006:18080   */\n      swap2\n      pop\n        /* \"#utility.yul\":18089:18182   */\n      tag_557\n        /* \"#utility.yul\":18178:18181   */\n      dup3\n        /* \"#utility.yul\":18089:18182   */\n      tag_558\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":18207:18209   */\n      0x40\n        /* \"#utility.yul\":18202:18205   */\n      dup3\n        /* \"#utility.yul\":18198:18210   */\n      add\n        /* \"#utility.yul\":18191:18210   */\n      swap1\n      pop\n        /* \"#utility.yul\":17850:18216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18222:18588   */\n    tag_559:\n        /* \"#utility.yul\":18364:18367   */\n      0x00\n        /* \"#utility.yul\":18385:18452   */\n      tag_561\n        /* \"#utility.yul\":18449:18451   */\n      0x28\n        /* \"#utility.yul\":18444:18447   */\n      dup4\n        /* \"#utility.yul\":18385:18452   */\n      tag_488\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18378:18452   */\n      swap2\n      pop\n        /* \"#utility.yul\":18461:18554   */\n      tag_562\n        /* \"#utility.yul\":18550:18553   */\n      dup3\n        /* \"#utility.yul\":18461:18554   */\n      tag_563\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18579:18581   */\n      0x40\n        /* \"#utility.yul\":18574:18577   */\n      dup3\n        /* \"#utility.yul\":18570:18582   */\n      add\n        /* \"#utility.yul\":18563:18582   */\n      swap1\n      pop\n        /* \"#utility.yul\":18222:18588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18594:18960   */\n    tag_564:\n        /* \"#utility.yul\":18736:18739   */\n      0x00\n        /* \"#utility.yul\":18757:18824   */\n      tag_566\n        /* \"#utility.yul\":18821:18823   */\n      0x21\n        /* \"#utility.yul\":18816:18819   */\n      dup4\n        /* \"#utility.yul\":18757:18824   */\n      tag_488\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":18750:18824   */\n      swap2\n      pop\n        /* \"#utility.yul\":18833:18926   */\n      tag_567\n        /* \"#utility.yul\":18922:18925   */\n      dup3\n        /* \"#utility.yul\":18833:18926   */\n      tag_568\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18951:18953   */\n      0x40\n        /* \"#utility.yul\":18946:18949   */\n      dup3\n        /* \"#utility.yul\":18942:18954   */\n      add\n        /* \"#utility.yul\":18935:18954   */\n      swap1\n      pop\n        /* \"#utility.yul\":18594:18960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18966:19074   */\n    tag_450:\n        /* \"#utility.yul\":19043:19067   */\n      tag_570\n        /* \"#utility.yul\":19061:19066   */\n      dup2\n        /* \"#utility.yul\":19043:19067   */\n      tag_571\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19038:19041   */\n      dup3\n        /* \"#utility.yul\":19031:19068   */\n      mstore\n        /* \"#utility.yul\":18966:19074   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19080:19198   */\n    tag_572:\n        /* \"#utility.yul\":19167:19191   */\n      tag_574\n        /* \"#utility.yul\":19185:19190   */\n      dup2\n        /* \"#utility.yul\":19167:19191   */\n      tag_571\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":19162:19165   */\n      dup3\n        /* \"#utility.yul\":19155:19192   */\n      mstore\n        /* \"#utility.yul\":19080:19198   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19204:19633   */\n    tag_90:\n        /* \"#utility.yul\":19381:19384   */\n      0x00\n        /* \"#utility.yul\":19403:19495   */\n      tag_576\n        /* \"#utility.yul\":19491:19494   */\n      dup3\n        /* \"#utility.yul\":19482:19488   */\n      dup6\n        /* \"#utility.yul\":19403:19495   */\n      tag_497\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":19396:19495   */\n      swap2\n      pop\n        /* \"#utility.yul\":19512:19607   */\n      tag_577\n        /* \"#utility.yul\":19603:19606   */\n      dup3\n        /* \"#utility.yul\":19594:19600   */\n      dup5\n        /* \"#utility.yul\":19512:19607   */\n      tag_491\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":19505:19607   */\n      swap2\n      pop\n        /* \"#utility.yul\":19624:19627   */\n      dup2\n        /* \"#utility.yul\":19617:19627   */\n      swap1\n      pop\n        /* \"#utility.yul\":19204:19633   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19639:20692   */\n    tag_252:\n        /* \"#utility.yul\":19962:19966   */\n      0x00\n        /* \"#utility.yul\":20000:20003   */\n      0xa0\n        /* \"#utility.yul\":19989:19998   */\n      dup3\n        /* \"#utility.yul\":19985:20004   */\n      add\n        /* \"#utility.yul\":19977:20004   */\n      swap1\n      pop\n        /* \"#utility.yul\":20014:20085   */\n      tag_579\n        /* \"#utility.yul\":20082:20083   */\n      0x00\n        /* \"#utility.yul\":20071:20080   */\n      dup4\n        /* \"#utility.yul\":20067:20084   */\n      add\n        /* \"#utility.yul\":20058:20064   */\n      dup9\n        /* \"#utility.yul\":20014:20085   */\n      tag_451\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":20095:20167   */\n      tag_580\n        /* \"#utility.yul\":20163:20165   */\n      0x20\n        /* \"#utility.yul\":20152:20161   */\n      dup4\n        /* \"#utility.yul\":20148:20166   */\n      add\n        /* \"#utility.yul\":20139:20145   */\n      dup8\n        /* \"#utility.yul\":20095:20167   */\n      tag_451\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20214:20223   */\n      dup2\n        /* \"#utility.yul\":20208:20212   */\n      dup2\n        /* \"#utility.yul\":20204:20224   */\n      sub\n        /* \"#utility.yul\":20199:20201   */\n      0x40\n        /* \"#utility.yul\":20188:20197   */\n      dup4\n        /* \"#utility.yul\":20184:20202   */\n      add\n        /* \"#utility.yul\":20177:20225   */\n      mstore\n        /* \"#utility.yul\":20242:20350   */\n      tag_581\n        /* \"#utility.yul\":20345:20349   */\n      dup2\n        /* \"#utility.yul\":20336:20342   */\n      dup7\n        /* \"#utility.yul\":20242:20350   */\n      tag_455\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":20234:20350   */\n      swap1\n      pop\n        /* \"#utility.yul\":20397:20406   */\n      dup2\n        /* \"#utility.yul\":20391:20395   */\n      dup2\n        /* \"#utility.yul\":20387:20407   */\n      sub\n        /* \"#utility.yul\":20382:20384   */\n      0x60\n        /* \"#utility.yul\":20371:20380   */\n      dup4\n        /* \"#utility.yul\":20367:20385   */\n      add\n        /* \"#utility.yul\":20360:20408   */\n      mstore\n        /* \"#utility.yul\":20425:20533   */\n      tag_582\n        /* \"#utility.yul\":20528:20532   */\n      dup2\n        /* \"#utility.yul\":20519:20525   */\n      dup6\n        /* \"#utility.yul\":20425:20533   */\n      tag_455\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20417:20533   */\n      swap1\n      pop\n        /* \"#utility.yul\":20581:20590   */\n      dup2\n        /* \"#utility.yul\":20575:20579   */\n      dup2\n        /* \"#utility.yul\":20571:20591   */\n      sub\n        /* \"#utility.yul\":20565:20568   */\n      0x80\n        /* \"#utility.yul\":20554:20563   */\n      dup4\n        /* \"#utility.yul\":20550:20569   */\n      add\n        /* \"#utility.yul\":20543:20592   */\n      mstore\n        /* \"#utility.yul\":20609:20685   */\n      tag_583\n        /* \"#utility.yul\":20680:20684   */\n      dup2\n        /* \"#utility.yul\":20671:20677   */\n      dup5\n        /* \"#utility.yul\":20609:20685   */\n      tag_473\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":20601:20685   */\n      swap1\n      pop\n        /* \"#utility.yul\":19639:20692   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20698:21449   */\n    tag_283:\n        /* \"#utility.yul\":20921:20925   */\n      0x00\n        /* \"#utility.yul\":20959:20962   */\n      0xa0\n        /* \"#utility.yul\":20948:20957   */\n      dup3\n        /* \"#utility.yul\":20944:20963   */\n      add\n        /* \"#utility.yul\":20936:20963   */\n      swap1\n      pop\n        /* \"#utility.yul\":20973:21044   */\n      tag_585\n        /* \"#utility.yul\":21041:21042   */\n      0x00\n        /* \"#utility.yul\":21030:21039   */\n      dup4\n        /* \"#utility.yul\":21026:21043   */\n      add\n        /* \"#utility.yul\":21017:21023   */\n      dup9\n        /* \"#utility.yul\":20973:21044   */\n      tag_451\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":21054:21126   */\n      tag_586\n        /* \"#utility.yul\":21122:21124   */\n      0x20\n        /* \"#utility.yul\":21111:21120   */\n      dup4\n        /* \"#utility.yul\":21107:21125   */\n      add\n        /* \"#utility.yul\":21098:21104   */\n      dup8\n        /* \"#utility.yul\":21054:21126   */\n      tag_451\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":21136:21208   */\n      tag_587\n        /* \"#utility.yul\":21204:21206   */\n      0x40\n        /* \"#utility.yul\":21193:21202   */\n      dup4\n        /* \"#utility.yul\":21189:21207   */\n      add\n        /* \"#utility.yul\":21180:21186   */\n      dup7\n        /* \"#utility.yul\":21136:21208   */\n      tag_572\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21218:21290   */\n      tag_588\n        /* \"#utility.yul\":21286:21288   */\n      0x60\n        /* \"#utility.yul\":21275:21284   */\n      dup4\n        /* \"#utility.yul\":21271:21289   */\n      add\n        /* \"#utility.yul\":21262:21268   */\n      dup6\n        /* \"#utility.yul\":21218:21290   */\n      tag_572\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21338:21347   */\n      dup2\n        /* \"#utility.yul\":21332:21336   */\n      dup2\n        /* \"#utility.yul\":21328:21348   */\n      sub\n        /* \"#utility.yul\":21322:21325   */\n      0x80\n        /* \"#utility.yul\":21311:21320   */\n      dup4\n        /* \"#utility.yul\":21307:21326   */\n      add\n        /* \"#utility.yul\":21300:21349   */\n      mstore\n        /* \"#utility.yul\":21366:21442   */\n      tag_589\n        /* \"#utility.yul\":21437:21441   */\n      dup2\n        /* \"#utility.yul\":21428:21434   */\n      dup5\n        /* \"#utility.yul\":21366:21442   */\n      tag_473\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":21358:21442   */\n      swap1\n      pop\n        /* \"#utility.yul\":20698:21449   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21455:21828   */\n    tag_46:\n        /* \"#utility.yul\":21598:21602   */\n      0x00\n        /* \"#utility.yul\":21636:21638   */\n      0x20\n        /* \"#utility.yul\":21625:21634   */\n      dup3\n        /* \"#utility.yul\":21621:21639   */\n      add\n        /* \"#utility.yul\":21613:21639   */\n      swap1\n      pop\n        /* \"#utility.yul\":21685:21694   */\n      dup2\n        /* \"#utility.yul\":21679:21683   */\n      dup2\n        /* \"#utility.yul\":21675:21695   */\n      sub\n        /* \"#utility.yul\":21671:21672   */\n      0x00\n        /* \"#utility.yul\":21660:21669   */\n      dup4\n        /* \"#utility.yul\":21656:21673   */\n      add\n        /* \"#utility.yul\":21649:21696   */\n      mstore\n        /* \"#utility.yul\":21713:21821   */\n      tag_591\n        /* \"#utility.yul\":21816:21820   */\n      dup2\n        /* \"#utility.yul\":21807:21813   */\n      dup5\n        /* \"#utility.yul\":21713:21821   */\n      tag_455\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":21705:21821   */\n      swap1\n      pop\n        /* \"#utility.yul\":21455:21828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21834:22468   */\n    tag_194:\n        /* \"#utility.yul\":22055:22059   */\n      0x00\n        /* \"#utility.yul\":22093:22095   */\n      0x40\n        /* \"#utility.yul\":22082:22091   */\n      dup3\n        /* \"#utility.yul\":22078:22096   */\n      add\n        /* \"#utility.yul\":22070:22096   */\n      swap1\n      pop\n        /* \"#utility.yul\":22142:22151   */\n      dup2\n        /* \"#utility.yul\":22136:22140   */\n      dup2\n        /* \"#utility.yul\":22132:22152   */\n      sub\n        /* \"#utility.yul\":22128:22129   */\n      0x00\n        /* \"#utility.yul\":22117:22126   */\n      dup4\n        /* \"#utility.yul\":22113:22130   */\n      add\n        /* \"#utility.yul\":22106:22153   */\n      mstore\n        /* \"#utility.yul\":22170:22278   */\n      tag_593\n        /* \"#utility.yul\":22273:22277   */\n      dup2\n        /* \"#utility.yul\":22264:22270   */\n      dup6\n        /* \"#utility.yul\":22170:22278   */\n      tag_455\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":22162:22278   */\n      swap1\n      pop\n        /* \"#utility.yul\":22325:22334   */\n      dup2\n        /* \"#utility.yul\":22319:22323   */\n      dup2\n        /* \"#utility.yul\":22315:22335   */\n      sub\n        /* \"#utility.yul\":22310:22312   */\n      0x20\n        /* \"#utility.yul\":22299:22308   */\n      dup4\n        /* \"#utility.yul\":22295:22313   */\n      add\n        /* \"#utility.yul\":22288:22336   */\n      mstore\n        /* \"#utility.yul\":22353:22461   */\n      tag_594\n        /* \"#utility.yul\":22456:22460   */\n      dup2\n        /* \"#utility.yul\":22447:22453   */\n      dup5\n        /* \"#utility.yul\":22353:22461   */\n      tag_455\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":22345:22461   */\n      swap1\n      pop\n        /* \"#utility.yul\":21834:22468   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22474:22684   */\n    tag_27:\n        /* \"#utility.yul\":22561:22565   */\n      0x00\n        /* \"#utility.yul\":22599:22601   */\n      0x20\n        /* \"#utility.yul\":22588:22597   */\n      dup3\n        /* \"#utility.yul\":22584:22602   */\n      add\n        /* \"#utility.yul\":22576:22602   */\n      swap1\n      pop\n        /* \"#utility.yul\":22612:22677   */\n      tag_596\n        /* \"#utility.yul\":22674:22675   */\n      0x00\n        /* \"#utility.yul\":22663:22672   */\n      dup4\n        /* \"#utility.yul\":22659:22676   */\n      add\n        /* \"#utility.yul\":22650:22656   */\n      dup5\n        /* \"#utility.yul\":22612:22677   */\n      tag_469\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":22474:22684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22690:23003   */\n    tag_31:\n        /* \"#utility.yul\":22803:22807   */\n      0x00\n        /* \"#utility.yul\":22841:22843   */\n      0x20\n        /* \"#utility.yul\":22830:22839   */\n      dup3\n        /* \"#utility.yul\":22826:22844   */\n      add\n        /* \"#utility.yul\":22818:22844   */\n      swap1\n      pop\n        /* \"#utility.yul\":22890:22899   */\n      dup2\n        /* \"#utility.yul\":22884:22888   */\n      dup2\n        /* \"#utility.yul\":22880:22900   */\n      sub\n        /* \"#utility.yul\":22876:22877   */\n      0x00\n        /* \"#utility.yul\":22865:22874   */\n      dup4\n        /* \"#utility.yul\":22861:22878   */\n      add\n        /* \"#utility.yul\":22854:22901   */\n      mstore\n        /* \"#utility.yul\":22918:22996   */\n      tag_598\n        /* \"#utility.yul\":22991:22995   */\n      dup2\n        /* \"#utility.yul\":22982:22988   */\n      dup5\n        /* \"#utility.yul\":22918:22996   */\n      tag_483\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":22910:22996   */\n      swap1\n      pop\n        /* \"#utility.yul\":22690:23003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23009:23428   */\n    tag_268:\n        /* \"#utility.yul\":23175:23179   */\n      0x00\n        /* \"#utility.yul\":23213:23215   */\n      0x20\n        /* \"#utility.yul\":23202:23211   */\n      dup3\n        /* \"#utility.yul\":23198:23216   */\n      add\n        /* \"#utility.yul\":23190:23216   */\n      swap1\n      pop\n        /* \"#utility.yul\":23262:23271   */\n      dup2\n        /* \"#utility.yul\":23256:23260   */\n      dup2\n        /* \"#utility.yul\":23252:23272   */\n      sub\n        /* \"#utility.yul\":23248:23249   */\n      0x00\n        /* \"#utility.yul\":23237:23246   */\n      dup4\n        /* \"#utility.yul\":23233:23250   */\n      add\n        /* \"#utility.yul\":23226:23273   */\n      mstore\n        /* \"#utility.yul\":23290:23421   */\n      tag_600\n        /* \"#utility.yul\":23416:23420   */\n      dup2\n        /* \"#utility.yul\":23290:23421   */\n      tag_509\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":23282:23421   */\n      swap1\n      pop\n        /* \"#utility.yul\":23009:23428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23434:23853   */\n    tag_99:\n        /* \"#utility.yul\":23600:23604   */\n      0x00\n        /* \"#utility.yul\":23638:23640   */\n      0x20\n        /* \"#utility.yul\":23627:23636   */\n      dup3\n        /* \"#utility.yul\":23623:23641   */\n      add\n        /* \"#utility.yul\":23615:23641   */\n      swap1\n      pop\n        /* \"#utility.yul\":23687:23696   */\n      dup2\n        /* \"#utility.yul\":23681:23685   */\n      dup2\n        /* \"#utility.yul\":23677:23697   */\n      sub\n        /* \"#utility.yul\":23673:23674   */\n      0x00\n        /* \"#utility.yul\":23662:23671   */\n      dup4\n        /* \"#utility.yul\":23658:23675   */\n      add\n        /* \"#utility.yul\":23651:23698   */\n      mstore\n        /* \"#utility.yul\":23715:23846   */\n      tag_602\n        /* \"#utility.yul\":23841:23845   */\n      dup2\n        /* \"#utility.yul\":23715:23846   */\n      tag_514\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":23707:23846   */\n      swap1\n      pop\n        /* \"#utility.yul\":23434:23853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23859:24278   */\n    tag_272:\n        /* \"#utility.yul\":24025:24029   */\n      0x00\n        /* \"#utility.yul\":24063:24065   */\n      0x20\n        /* \"#utility.yul\":24052:24061   */\n      dup3\n        /* \"#utility.yul\":24048:24066   */\n      add\n        /* \"#utility.yul\":24040:24066   */\n      swap1\n      pop\n        /* \"#utility.yul\":24112:24121   */\n      dup2\n        /* \"#utility.yul\":24106:24110   */\n      dup2\n        /* \"#utility.yul\":24102:24122   */\n      sub\n        /* \"#utility.yul\":24098:24099   */\n      0x00\n        /* \"#utility.yul\":24087:24096   */\n      dup4\n        /* \"#utility.yul\":24083:24100   */\n      add\n        /* \"#utility.yul\":24076:24123   */\n      mstore\n        /* \"#utility.yul\":24140:24271   */\n      tag_604\n        /* \"#utility.yul\":24266:24270   */\n      dup2\n        /* \"#utility.yul\":24140:24271   */\n      tag_519\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":24132:24271   */\n      swap1\n      pop\n        /* \"#utility.yul\":23859:24278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24284:24703   */\n    tag_242:\n        /* \"#utility.yul\":24450:24454   */\n      0x00\n        /* \"#utility.yul\":24488:24490   */\n      0x20\n        /* \"#utility.yul\":24477:24486   */\n      dup3\n        /* \"#utility.yul\":24473:24491   */\n      add\n        /* \"#utility.yul\":24465:24491   */\n      swap1\n      pop\n        /* \"#utility.yul\":24537:24546   */\n      dup2\n        /* \"#utility.yul\":24531:24535   */\n      dup2\n        /* \"#utility.yul\":24527:24547   */\n      sub\n        /* \"#utility.yul\":24523:24524   */\n      0x00\n        /* \"#utility.yul\":24512:24521   */\n      dup4\n        /* \"#utility.yul\":24508:24525   */\n      add\n        /* \"#utility.yul\":24501:24548   */\n      mstore\n        /* \"#utility.yul\":24565:24696   */\n      tag_606\n        /* \"#utility.yul\":24691:24695   */\n      dup2\n        /* \"#utility.yul\":24565:24696   */\n      tag_524\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":24557:24696   */\n      swap1\n      pop\n        /* \"#utility.yul\":24284:24703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24709:25128   */\n    tag_74:\n        /* \"#utility.yul\":24875:24879   */\n      0x00\n        /* \"#utility.yul\":24913:24915   */\n      0x20\n        /* \"#utility.yul\":24902:24911   */\n      dup3\n        /* \"#utility.yul\":24898:24916   */\n      add\n        /* \"#utility.yul\":24890:24916   */\n      swap1\n      pop\n        /* \"#utility.yul\":24962:24971   */\n      dup2\n        /* \"#utility.yul\":24956:24960   */\n      dup2\n        /* \"#utility.yul\":24952:24972   */\n      sub\n        /* \"#utility.yul\":24948:24949   */\n      0x00\n        /* \"#utility.yul\":24937:24946   */\n      dup4\n        /* \"#utility.yul\":24933:24950   */\n      add\n        /* \"#utility.yul\":24926:24973   */\n      mstore\n        /* \"#utility.yul\":24990:25121   */\n      tag_608\n        /* \"#utility.yul\":25116:25120   */\n      dup2\n        /* \"#utility.yul\":24990:25121   */\n      tag_529\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":24982:25121   */\n      swap1\n      pop\n        /* \"#utility.yul\":24709:25128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25134:25553   */\n    tag_177:\n        /* \"#utility.yul\":25300:25304   */\n      0x00\n        /* \"#utility.yul\":25338:25340   */\n      0x20\n        /* \"#utility.yul\":25327:25336   */\n      dup3\n        /* \"#utility.yul\":25323:25341   */\n      add\n        /* \"#utility.yul\":25315:25341   */\n      swap1\n      pop\n        /* \"#utility.yul\":25387:25396   */\n      dup2\n        /* \"#utility.yul\":25381:25385   */\n      dup2\n        /* \"#utility.yul\":25377:25397   */\n      sub\n        /* \"#utility.yul\":25373:25374   */\n      0x00\n        /* \"#utility.yul\":25362:25371   */\n      dup4\n        /* \"#utility.yul\":25358:25375   */\n      add\n        /* \"#utility.yul\":25351:25398   */\n      mstore\n        /* \"#utility.yul\":25415:25546   */\n      tag_610\n        /* \"#utility.yul\":25541:25545   */\n      dup2\n        /* \"#utility.yul\":25415:25546   */\n      tag_534\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":25407:25546   */\n      swap1\n      pop\n        /* \"#utility.yul\":25134:25553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25559:25978   */\n    tag_235:\n        /* \"#utility.yul\":25725:25729   */\n      0x00\n        /* \"#utility.yul\":25763:25765   */\n      0x20\n        /* \"#utility.yul\":25752:25761   */\n      dup3\n        /* \"#utility.yul\":25748:25766   */\n      add\n        /* \"#utility.yul\":25740:25766   */\n      swap1\n      pop\n        /* \"#utility.yul\":25812:25821   */\n      dup2\n        /* \"#utility.yul\":25806:25810   */\n      dup2\n        /* \"#utility.yul\":25802:25822   */\n      sub\n        /* \"#utility.yul\":25798:25799   */\n      0x00\n        /* \"#utility.yul\":25787:25796   */\n      dup4\n        /* \"#utility.yul\":25783:25800   */\n      add\n        /* \"#utility.yul\":25776:25823   */\n      mstore\n        /* \"#utility.yul\":25840:25971   */\n      tag_612\n        /* \"#utility.yul\":25966:25970   */\n      dup2\n        /* \"#utility.yul\":25840:25971   */\n      tag_539\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":25832:25971   */\n      swap1\n      pop\n        /* \"#utility.yul\":25559:25978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25984:26403   */\n    tag_190:\n        /* \"#utility.yul\":26150:26154   */\n      0x00\n        /* \"#utility.yul\":26188:26190   */\n      0x20\n        /* \"#utility.yul\":26177:26186   */\n      dup3\n        /* \"#utility.yul\":26173:26191   */\n      add\n        /* \"#utility.yul\":26165:26191   */\n      swap1\n      pop\n        /* \"#utility.yul\":26237:26246   */\n      dup2\n        /* \"#utility.yul\":26231:26235   */\n      dup2\n        /* \"#utility.yul\":26227:26247   */\n      sub\n        /* \"#utility.yul\":26223:26224   */\n      0x00\n        /* \"#utility.yul\":26212:26221   */\n      dup4\n        /* \"#utility.yul\":26208:26225   */\n      add\n        /* \"#utility.yul\":26201:26248   */\n      mstore\n        /* \"#utility.yul\":26265:26396   */\n      tag_614\n        /* \"#utility.yul\":26391:26395   */\n      dup2\n        /* \"#utility.yul\":26265:26396   */\n      tag_544\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":26257:26396   */\n      swap1\n      pop\n        /* \"#utility.yul\":25984:26403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26409:26828   */\n    tag_217:\n        /* \"#utility.yul\":26575:26579   */\n      0x00\n        /* \"#utility.yul\":26613:26615   */\n      0x20\n        /* \"#utility.yul\":26602:26611   */\n      dup3\n        /* \"#utility.yul\":26598:26616   */\n      add\n        /* \"#utility.yul\":26590:26616   */\n      swap1\n      pop\n        /* \"#utility.yul\":26662:26671   */\n      dup2\n        /* \"#utility.yul\":26656:26660   */\n      dup2\n        /* \"#utility.yul\":26652:26672   */\n      sub\n        /* \"#utility.yul\":26648:26649   */\n      0x00\n        /* \"#utility.yul\":26637:26646   */\n      dup4\n        /* \"#utility.yul\":26633:26650   */\n      add\n        /* \"#utility.yul\":26626:26673   */\n      mstore\n        /* \"#utility.yul\":26690:26821   */\n      tag_616\n        /* \"#utility.yul\":26816:26820   */\n      dup2\n        /* \"#utility.yul\":26690:26821   */\n      tag_549\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":26682:26821   */\n      swap1\n      pop\n        /* \"#utility.yul\":26409:26828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26834:27253   */\n    tag_105:\n        /* \"#utility.yul\":27000:27004   */\n      0x00\n        /* \"#utility.yul\":27038:27040   */\n      0x20\n        /* \"#utility.yul\":27027:27036   */\n      dup3\n        /* \"#utility.yul\":27023:27041   */\n      add\n        /* \"#utility.yul\":27015:27041   */\n      swap1\n      pop\n        /* \"#utility.yul\":27087:27096   */\n      dup2\n        /* \"#utility.yul\":27081:27085   */\n      dup2\n        /* \"#utility.yul\":27077:27097   */\n      sub\n        /* \"#utility.yul\":27073:27074   */\n      0x00\n        /* \"#utility.yul\":27062:27071   */\n      dup4\n        /* \"#utility.yul\":27058:27075   */\n      add\n        /* \"#utility.yul\":27051:27098   */\n      mstore\n        /* \"#utility.yul\":27115:27246   */\n      tag_618\n        /* \"#utility.yul\":27241:27245   */\n      dup2\n        /* \"#utility.yul\":27115:27246   */\n      tag_554\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":27107:27246   */\n      swap1\n      pop\n        /* \"#utility.yul\":26834:27253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27259:27678   */\n    tag_174:\n        /* \"#utility.yul\":27425:27429   */\n      0x00\n        /* \"#utility.yul\":27463:27465   */\n      0x20\n        /* \"#utility.yul\":27452:27461   */\n      dup3\n        /* \"#utility.yul\":27448:27466   */\n      add\n        /* \"#utility.yul\":27440:27466   */\n      swap1\n      pop\n        /* \"#utility.yul\":27512:27521   */\n      dup2\n        /* \"#utility.yul\":27506:27510   */\n      dup2\n        /* \"#utility.yul\":27502:27522   */\n      sub\n        /* \"#utility.yul\":27498:27499   */\n      0x00\n        /* \"#utility.yul\":27487:27496   */\n      dup4\n        /* \"#utility.yul\":27483:27500   */\n      add\n        /* \"#utility.yul\":27476:27523   */\n      mstore\n        /* \"#utility.yul\":27540:27671   */\n      tag_620\n        /* \"#utility.yul\":27666:27670   */\n      dup2\n        /* \"#utility.yul\":27540:27671   */\n      tag_559\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":27532:27671   */\n      swap1\n      pop\n        /* \"#utility.yul\":27259:27678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27684:28103   */\n    tag_202:\n        /* \"#utility.yul\":27850:27854   */\n      0x00\n        /* \"#utility.yul\":27888:27890   */\n      0x20\n        /* \"#utility.yul\":27877:27886   */\n      dup3\n        /* \"#utility.yul\":27873:27891   */\n      add\n        /* \"#utility.yul\":27865:27891   */\n      swap1\n      pop\n        /* \"#utility.yul\":27937:27946   */\n      dup2\n        /* \"#utility.yul\":27931:27935   */\n      dup2\n        /* \"#utility.yul\":27927:27947   */\n      sub\n        /* \"#utility.yul\":27923:27924   */\n      0x00\n        /* \"#utility.yul\":27912:27921   */\n      dup4\n        /* \"#utility.yul\":27908:27925   */\n      add\n        /* \"#utility.yul\":27901:27948   */\n      mstore\n        /* \"#utility.yul\":27965:28096   */\n      tag_622\n        /* \"#utility.yul\":28091:28095   */\n      dup2\n        /* \"#utility.yul\":27965:28096   */\n      tag_564\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":27957:28096   */\n      swap1\n      pop\n        /* \"#utility.yul\":27684:28103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28109:28331   */\n    tag_21:\n        /* \"#utility.yul\":28202:28206   */\n      0x00\n        /* \"#utility.yul\":28240:28242   */\n      0x20\n        /* \"#utility.yul\":28229:28238   */\n      dup3\n        /* \"#utility.yul\":28225:28243   */\n      add\n        /* \"#utility.yul\":28217:28243   */\n      swap1\n      pop\n        /* \"#utility.yul\":28253:28324   */\n      tag_624\n        /* \"#utility.yul\":28321:28322   */\n      0x00\n        /* \"#utility.yul\":28310:28319   */\n      dup4\n        /* \"#utility.yul\":28306:28323   */\n      add\n        /* \"#utility.yul\":28297:28303   */\n      dup5\n        /* \"#utility.yul\":28253:28324   */\n      tag_572\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":28109:28331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28337:28669   */\n    tag_210:\n        /* \"#utility.yul\":28458:28462   */\n      0x00\n        /* \"#utility.yul\":28496:28498   */\n      0x40\n        /* \"#utility.yul\":28485:28494   */\n      dup3\n        /* \"#utility.yul\":28481:28499   */\n      add\n        /* \"#utility.yul\":28473:28499   */\n      swap1\n      pop\n        /* \"#utility.yul\":28509:28580   */\n      tag_626\n        /* \"#utility.yul\":28577:28578   */\n      0x00\n        /* \"#utility.yul\":28566:28575   */\n      dup4\n        /* \"#utility.yul\":28562:28579   */\n      add\n        /* \"#utility.yul\":28553:28559   */\n      dup6\n        /* \"#utility.yul\":28509:28580   */\n      tag_572\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":28590:28662   */\n      tag_627\n        /* \"#utility.yul\":28658:28660   */\n      0x20\n        /* \"#utility.yul\":28647:28656   */\n      dup4\n        /* \"#utility.yul\":28643:28661   */\n      add\n        /* \"#utility.yul\":28634:28640   */\n      dup5\n        /* \"#utility.yul\":28590:28662   */\n      tag_572\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":28337:28669   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28675:28804   */\n    tag_306:\n        /* \"#utility.yul\":28709:28715   */\n      0x00\n        /* \"#utility.yul\":28736:28756   */\n      tag_629\n      tag_630\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":28726:28756   */\n      swap1\n      pop\n        /* \"#utility.yul\":28765:28798   */\n      tag_631\n        /* \"#utility.yul\":28793:28797   */\n      dup3\n        /* \"#utility.yul\":28785:28791   */\n      dup3\n        /* \"#utility.yul\":28765:28798   */\n      tag_632\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":28675:28804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28810:28885   */\n    tag_630:\n        /* \"#utility.yul\":28843:28849   */\n      0x00\n        /* \"#utility.yul\":28876:28878   */\n      0x40\n        /* \"#utility.yul\":28870:28879   */\n      mload\n        /* \"#utility.yul\":28860:28879   */\n      swap1\n      pop\n        /* \"#utility.yul\":28810:28885   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":28891:29202   */\n    tag_305:\n        /* \"#utility.yul\":28968:28972   */\n      0x00\n        /* \"#utility.yul\":29058:29076   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29050:29056   */\n      dup3\n        /* \"#utility.yul\":29047:29077   */\n      gt\n        /* \"#utility.yul\":29044:29100   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":29080:29098   */\n      tag_636\n      tag_108\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":29044:29100   */\n    tag_635:\n        /* \"#utility.yul\":29130:29134   */\n      0x20\n        /* \"#utility.yul\":29122:29128   */\n      dup3\n        /* \"#utility.yul\":29118:29135   */\n      mul\n        /* \"#utility.yul\":29110:29135   */\n      swap1\n      pop\n        /* \"#utility.yul\":29190:29194   */\n      0x20\n        /* \"#utility.yul\":29184:29188   */\n      dup2\n        /* \"#utility.yul\":29180:29195   */\n      add\n        /* \"#utility.yul\":29172:29195   */\n      swap1\n      pop\n        /* \"#utility.yul\":28891:29202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29208:29519   */\n    tag_319:\n        /* \"#utility.yul\":29285:29289   */\n      0x00\n        /* \"#utility.yul\":29375:29393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29367:29373   */\n      dup3\n        /* \"#utility.yul\":29364:29394   */\n      gt\n        /* \"#utility.yul\":29361:29417   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":29397:29415   */\n      tag_639\n      tag_108\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":29361:29417   */\n    tag_638:\n        /* \"#utility.yul\":29447:29451   */\n      0x20\n        /* \"#utility.yul\":29439:29445   */\n      dup3\n        /* \"#utility.yul\":29435:29452   */\n      mul\n        /* \"#utility.yul\":29427:29452   */\n      swap1\n      pop\n        /* \"#utility.yul\":29507:29511   */\n      0x20\n        /* \"#utility.yul\":29501:29505   */\n      dup2\n        /* \"#utility.yul\":29497:29512   */\n      add\n        /* \"#utility.yul\":29489:29512   */\n      swap1\n      pop\n        /* \"#utility.yul\":29208:29519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29525:29832   */\n    tag_331:\n        /* \"#utility.yul\":29586:29590   */\n      0x00\n        /* \"#utility.yul\":29676:29694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29668:29674   */\n      dup3\n        /* \"#utility.yul\":29665:29695   */\n      gt\n        /* \"#utility.yul\":29662:29718   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":29698:29716   */\n      tag_642\n      tag_108\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":29662:29718   */\n    tag_641:\n        /* \"#utility.yul\":29736:29765   */\n      tag_643\n        /* \"#utility.yul\":29758:29764   */\n      dup3\n        /* \"#utility.yul\":29736:29765   */\n      tag_482\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":29728:29765   */\n      swap1\n      pop\n        /* \"#utility.yul\":29820:29824   */\n      0x20\n        /* \"#utility.yul\":29814:29818   */\n      dup2\n        /* \"#utility.yul\":29810:29825   */\n      add\n        /* \"#utility.yul\":29802:29825   */\n      swap1\n      pop\n        /* \"#utility.yul\":29525:29832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29838:29970   */\n    tag_462:\n        /* \"#utility.yul\":29905:29909   */\n      0x00\n        /* \"#utility.yul\":29928:29931   */\n      dup2\n        /* \"#utility.yul\":29920:29931   */\n      swap1\n      pop\n        /* \"#utility.yul\":29958:29962   */\n      0x20\n        /* \"#utility.yul\":29953:29956   */\n      dup3\n        /* \"#utility.yul\":29949:29963   */\n      add\n        /* \"#utility.yul\":29941:29963   */\n      swap1\n      pop\n        /* \"#utility.yul\":29838:29970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29976:30117   */\n    tag_505:\n        /* \"#utility.yul\":30025:30029   */\n      0x00\n        /* \"#utility.yul\":30048:30051   */\n      dup2\n        /* \"#utility.yul\":30040:30051   */\n      swap1\n      pop\n        /* \"#utility.yul\":30071:30074   */\n      dup2\n        /* \"#utility.yul\":30068:30069   */\n      0x00\n        /* \"#utility.yul\":30061:30075   */\n      mstore\n        /* \"#utility.yul\":30105:30109   */\n      0x20\n        /* \"#utility.yul\":30102:30103   */\n      0x00\n        /* \"#utility.yul\":30092:30110   */\n      keccak256\n        /* \"#utility.yul\":30084:30110   */\n      swap1\n      pop\n        /* \"#utility.yul\":29976:30117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30123:30237   */\n    tag_458:\n        /* \"#utility.yul\":30190:30196   */\n      0x00\n        /* \"#utility.yul\":30224:30229   */\n      dup2\n        /* \"#utility.yul\":30218:30230   */\n      mload\n        /* \"#utility.yul\":30208:30230   */\n      swap1\n      pop\n        /* \"#utility.yul\":30123:30237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30243:30341   */\n    tag_476:\n        /* \"#utility.yul\":30294:30300   */\n      0x00\n        /* \"#utility.yul\":30328:30333   */\n      dup2\n        /* \"#utility.yul\":30322:30334   */\n      mload\n        /* \"#utility.yul\":30312:30334   */\n      swap1\n      pop\n        /* \"#utility.yul\":30243:30341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30347:30446   */\n    tag_486:\n        /* \"#utility.yul\":30399:30405   */\n      0x00\n        /* \"#utility.yul\":30433:30438   */\n      dup2\n        /* \"#utility.yul\":30427:30439   */\n      mload\n        /* \"#utility.yul\":30417:30439   */\n      swap1\n      pop\n        /* \"#utility.yul\":30347:30446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30452:30565   */\n    tag_468:\n        /* \"#utility.yul\":30522:30526   */\n      0x00\n        /* \"#utility.yul\":30554:30558   */\n      0x20\n        /* \"#utility.yul\":30549:30552   */\n      dup3\n        /* \"#utility.yul\":30545:30559   */\n      add\n        /* \"#utility.yul\":30537:30559   */\n      swap1\n      pop\n        /* \"#utility.yul\":30452:30565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30571:30755   */\n    tag_460:\n        /* \"#utility.yul\":30670:30681   */\n      0x00\n        /* \"#utility.yul\":30704:30710   */\n      dup3\n        /* \"#utility.yul\":30699:30702   */\n      dup3\n        /* \"#utility.yul\":30692:30711   */\n      mstore\n        /* \"#utility.yul\":30744:30748   */\n      0x20\n        /* \"#utility.yul\":30739:30742   */\n      dup3\n        /* \"#utility.yul\":30735:30749   */\n      add\n        /* \"#utility.yul\":30720:30749   */\n      swap1\n      pop\n        /* \"#utility.yul\":30571:30755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30761:30929   */\n    tag_478:\n        /* \"#utility.yul\":30844:30855   */\n      0x00\n        /* \"#utility.yul\":30878:30884   */\n      dup3\n        /* \"#utility.yul\":30873:30876   */\n      dup3\n        /* \"#utility.yul\":30866:30885   */\n      mstore\n        /* \"#utility.yul\":30918:30922   */\n      0x20\n        /* \"#utility.yul\":30913:30916   */\n      dup3\n        /* \"#utility.yul\":30909:30923   */\n      add\n        /* \"#utility.yul\":30894:30923   */\n      swap1\n      pop\n        /* \"#utility.yul\":30761:30929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30935:31104   */\n    tag_488:\n        /* \"#utility.yul\":31019:31030   */\n      0x00\n        /* \"#utility.yul\":31053:31059   */\n      dup3\n        /* \"#utility.yul\":31048:31051   */\n      dup3\n        /* \"#utility.yul\":31041:31060   */\n      mstore\n        /* \"#utility.yul\":31093:31097   */\n      0x20\n        /* \"#utility.yul\":31088:31091   */\n      dup3\n        /* \"#utility.yul\":31084:31098   */\n      add\n        /* \"#utility.yul\":31069:31098   */\n      swap1\n      pop\n        /* \"#utility.yul\":30935:31104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31110:31258   */\n    tag_495:\n        /* \"#utility.yul\":31212:31223   */\n      0x00\n        /* \"#utility.yul\":31249:31252   */\n      dup2\n        /* \"#utility.yul\":31234:31252   */\n      swap1\n      pop\n        /* \"#utility.yul\":31110:31258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31264:31569   */\n    tag_166:\n        /* \"#utility.yul\":31304:31307   */\n      0x00\n        /* \"#utility.yul\":31323:31343   */\n      tag_655\n        /* \"#utility.yul\":31341:31342   */\n      dup3\n        /* \"#utility.yul\":31323:31343   */\n      tag_571\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":31318:31343   */\n      swap2\n      pop\n        /* \"#utility.yul\":31357:31377   */\n      tag_656\n        /* \"#utility.yul\":31375:31376   */\n      dup4\n        /* \"#utility.yul\":31357:31377   */\n      tag_571\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":31352:31377   */\n      swap3\n      pop\n        /* \"#utility.yul\":31511:31512   */\n      dup3\n        /* \"#utility.yul\":31443:31509   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":31439:31513   */\n      sub\n        /* \"#utility.yul\":31436:31437   */\n      dup3\n        /* \"#utility.yul\":31433:31514   */\n      gt\n        /* \"#utility.yul\":31430:31537   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":31517:31535   */\n      tag_658\n      tag_659\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":31430:31537   */\n    tag_657:\n        /* \"#utility.yul\":31561:31562   */\n      dup3\n        /* \"#utility.yul\":31558:31559   */\n      dup3\n        /* \"#utility.yul\":31554:31563   */\n      add\n        /* \"#utility.yul\":31547:31563   */\n      swap1\n      pop\n        /* \"#utility.yul\":31264:31569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31575:31760   */\n    tag_155:\n        /* \"#utility.yul\":31615:31616   */\n      0x00\n        /* \"#utility.yul\":31632:31652   */\n      tag_661\n        /* \"#utility.yul\":31650:31651   */\n      dup3\n        /* \"#utility.yul\":31632:31652   */\n      tag_571\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":31627:31652   */\n      swap2\n      pop\n        /* \"#utility.yul\":31666:31686   */\n      tag_662\n        /* \"#utility.yul\":31684:31685   */\n      dup4\n        /* \"#utility.yul\":31666:31686   */\n      tag_571\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":31661:31686   */\n      swap3\n      pop\n        /* \"#utility.yul\":31705:31706   */\n      dup3\n        /* \"#utility.yul\":31695:31730   */\n      tag_663\n      jumpi\n        /* \"#utility.yul\":31710:31728   */\n      tag_664\n      tag_665\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":31695:31730   */\n    tag_663:\n        /* \"#utility.yul\":31752:31753   */\n      dup3\n        /* \"#utility.yul\":31749:31750   */\n      dup3\n        /* \"#utility.yul\":31745:31754   */\n      div\n        /* \"#utility.yul\":31740:31754   */\n      swap1\n      pop\n        /* \"#utility.yul\":31575:31760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31766:31957   */\n    tag_162:\n        /* \"#utility.yul\":31806:31810   */\n      0x00\n        /* \"#utility.yul\":31826:31846   */\n      tag_667\n        /* \"#utility.yul\":31844:31845   */\n      dup3\n        /* \"#utility.yul\":31826:31846   */\n      tag_571\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":31821:31846   */\n      swap2\n      pop\n        /* \"#utility.yul\":31860:31880   */\n      tag_668\n        /* \"#utility.yul\":31878:31879   */\n      dup4\n        /* \"#utility.yul\":31860:31880   */\n      tag_571\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":31855:31880   */\n      swap3\n      pop\n        /* \"#utility.yul\":31899:31900   */\n      dup3\n        /* \"#utility.yul\":31896:31897   */\n      dup3\n        /* \"#utility.yul\":31893:31901   */\n      lt\n        /* \"#utility.yul\":31890:31924   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":31904:31922   */\n      tag_670\n      tag_659\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":31890:31924   */\n    tag_669:\n        /* \"#utility.yul\":31949:31950   */\n      dup3\n        /* \"#utility.yul\":31946:31947   */\n      dup3\n        /* \"#utility.yul\":31942:31951   */\n      sub\n        /* \"#utility.yul\":31934:31951   */\n      swap1\n      pop\n        /* \"#utility.yul\":31766:31957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31963:32059   */\n    tag_454:\n        /* \"#utility.yul\":32000:32007   */\n      0x00\n        /* \"#utility.yul\":32029:32053   */\n      tag_672\n        /* \"#utility.yul\":32047:32052   */\n      dup3\n        /* \"#utility.yul\":32029:32053   */\n      tag_673\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":32018:32053   */\n      swap1\n      pop\n        /* \"#utility.yul\":31963:32059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32065:32155   */\n    tag_472:\n        /* \"#utility.yul\":32099:32106   */\n      0x00\n        /* \"#utility.yul\":32142:32147   */\n      dup2\n        /* \"#utility.yul\":32135:32148   */\n      iszero\n        /* \"#utility.yul\":32128:32149   */\n      iszero\n        /* \"#utility.yul\":32117:32149   */\n      swap1\n      pop\n        /* \"#utility.yul\":32065:32155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32161:32310   */\n    tag_675:\n        /* \"#utility.yul\":32197:32204   */\n      0x00\n        /* \"#utility.yul\":32237:32303   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32230:32235   */\n      dup3\n        /* \"#utility.yul\":32226:32304   */\n      and\n        /* \"#utility.yul\":32215:32304   */\n      swap1\n      pop\n        /* \"#utility.yul\":32161:32310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32316:32442   */\n    tag_673:\n        /* \"#utility.yul\":32353:32360   */\n      0x00\n        /* \"#utility.yul\":32393:32435   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":32386:32391   */\n      dup3\n        /* \"#utility.yul\":32382:32436   */\n      and\n        /* \"#utility.yul\":32371:32436   */\n      swap1\n      pop\n        /* \"#utility.yul\":32316:32442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32448:32525   */\n    tag_571:\n        /* \"#utility.yul\":32485:32492   */\n      0x00\n        /* \"#utility.yul\":32514:32519   */\n      dup2\n        /* \"#utility.yul\":32503:32519   */\n      swap1\n      pop\n        /* \"#utility.yul\":32448:32525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32531:32685   */\n    tag_336:\n        /* \"#utility.yul\":32615:32621   */\n      dup3\n        /* \"#utility.yul\":32610:32613   */\n      dup2\n        /* \"#utility.yul\":32605:32608   */\n      dup4\n        /* \"#utility.yul\":32592:32622   */\n      calldatacopy\n        /* \"#utility.yul\":32677:32678   */\n      0x00\n        /* \"#utility.yul\":32668:32674   */\n      dup4\n        /* \"#utility.yul\":32663:32666   */\n      dup4\n        /* \"#utility.yul\":32659:32675   */\n      add\n        /* \"#utility.yul\":32652:32679   */\n      mstore\n        /* \"#utility.yul\":32531:32685   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32691:32998   */\n    tag_480:\n        /* \"#utility.yul\":32759:32760   */\n      0x00\n        /* \"#utility.yul\":32769:32882   */\n    tag_681:\n        /* \"#utility.yul\":32783:32789   */\n      dup4\n        /* \"#utility.yul\":32780:32781   */\n      dup2\n        /* \"#utility.yul\":32777:32790   */\n      lt\n        /* \"#utility.yul\":32769:32882   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":32868:32869   */\n      dup1\n        /* \"#utility.yul\":32863:32866   */\n      dup3\n        /* \"#utility.yul\":32859:32870   */\n      add\n        /* \"#utility.yul\":32853:32871   */\n      mload\n        /* \"#utility.yul\":32849:32850   */\n      dup2\n        /* \"#utility.yul\":32844:32847   */\n      dup5\n        /* \"#utility.yul\":32840:32851   */\n      add\n        /* \"#utility.yul\":32833:32872   */\n      mstore\n        /* \"#utility.yul\":32805:32807   */\n      0x20\n        /* \"#utility.yul\":32802:32803   */\n      dup2\n        /* \"#utility.yul\":32798:32808   */\n      add\n        /* \"#utility.yul\":32793:32808   */\n      swap1\n      pop\n        /* \"#utility.yul\":32769:32882   */\n      jump(tag_681)\n    tag_683:\n        /* \"#utility.yul\":32900:32906   */\n      dup4\n        /* \"#utility.yul\":32897:32898   */\n      dup2\n        /* \"#utility.yul\":32894:32907   */\n      gt\n        /* \"#utility.yul\":32891:32992   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":32980:32981   */\n      0x00\n        /* \"#utility.yul\":32971:32977   */\n      dup5\n        /* \"#utility.yul\":32966:32969   */\n      dup5\n        /* \"#utility.yul\":32962:32978   */\n      add\n        /* \"#utility.yul\":32955:32982   */\n      mstore\n        /* \"#utility.yul\":32891:32992   */\n    tag_684:\n        /* \"#utility.yul\":32740:32998   */\n      pop\n        /* \"#utility.yul\":32691:32998   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33004:33324   */\n    tag_81:\n        /* \"#utility.yul\":33048:33054   */\n      0x00\n        /* \"#utility.yul\":33085:33086   */\n      0x02\n        /* \"#utility.yul\":33079:33083   */\n      dup3\n        /* \"#utility.yul\":33075:33087   */\n      div\n        /* \"#utility.yul\":33065:33087   */\n      swap1\n      pop\n        /* \"#utility.yul\":33132:33133   */\n      0x01\n        /* \"#utility.yul\":33126:33130   */\n      dup3\n        /* \"#utility.yul\":33122:33134   */\n      and\n        /* \"#utility.yul\":33153:33171   */\n      dup1\n        /* \"#utility.yul\":33143:33224   */\n      tag_686\n      jumpi\n        /* \"#utility.yul\":33209:33213   */\n      0x7f\n        /* \"#utility.yul\":33201:33207   */\n      dup3\n        /* \"#utility.yul\":33197:33214   */\n      and\n        /* \"#utility.yul\":33187:33214   */\n      swap2\n      pop\n        /* \"#utility.yul\":33143:33224   */\n    tag_686:\n        /* \"#utility.yul\":33271:33273   */\n      0x20\n        /* \"#utility.yul\":33263:33269   */\n      dup3\n        /* \"#utility.yul\":33260:33274   */\n      lt\n        /* \"#utility.yul\":33240:33258   */\n      dup2\n        /* \"#utility.yul\":33237:33275   */\n      eq\n        /* \"#utility.yul\":33234:33318   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":33290:33308   */\n      tag_688\n      tag_689\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":33234:33318   */\n    tag_687:\n        /* \"#utility.yul\":33055:33324   */\n      pop\n        /* \"#utility.yul\":33004:33324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33330:33611   */\n    tag_632:\n        /* \"#utility.yul\":33413:33440   */\n      tag_691\n        /* \"#utility.yul\":33435:33439   */\n      dup3\n        /* \"#utility.yul\":33413:33440   */\n      tag_482\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":33405:33411   */\n      dup2\n        /* \"#utility.yul\":33401:33441   */\n      add\n        /* \"#utility.yul\":33543:33549   */\n      dup2\n        /* \"#utility.yul\":33531:33541   */\n      dup2\n        /* \"#utility.yul\":33528:33550   */\n      lt\n        /* \"#utility.yul\":33507:33525   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":33495:33505   */\n      dup3\n        /* \"#utility.yul\":33492:33526   */\n      gt\n        /* \"#utility.yul\":33489:33551   */\n      or\n        /* \"#utility.yul\":33486:33574   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":33554:33572   */\n      tag_693\n      tag_108\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":33486:33574   */\n    tag_692:\n        /* \"#utility.yul\":33594:33604   */\n      dup1\n        /* \"#utility.yul\":33590:33592   */\n      0x40\n        /* \"#utility.yul\":33583:33605   */\n      mstore\n        /* \"#utility.yul\":33373:33611   */\n      pop\n        /* \"#utility.yul\":33330:33611   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33617:33850   */\n    tag_122:\n        /* \"#utility.yul\":33656:33659   */\n      0x00\n        /* \"#utility.yul\":33679:33703   */\n      tag_695\n        /* \"#utility.yul\":33697:33702   */\n      dup3\n        /* \"#utility.yul\":33679:33703   */\n      tag_571\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":33670:33703   */\n      swap2\n      pop\n        /* \"#utility.yul\":33725:33791   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":33718:33723   */\n      dup3\n        /* \"#utility.yul\":33715:33792   */\n      eq\n        /* \"#utility.yul\":33712:33815   */\n      iszero\n      tag_696\n      jumpi\n        /* \"#utility.yul\":33795:33813   */\n      tag_697\n      tag_659\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":33712:33815   */\n    tag_696:\n        /* \"#utility.yul\":33842:33843   */\n      0x01\n        /* \"#utility.yul\":33835:33840   */\n      dup3\n        /* \"#utility.yul\":33831:33844   */\n      add\n        /* \"#utility.yul\":33824:33844   */\n      swap1\n      pop\n        /* \"#utility.yul\":33617:33850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33856:34032   */\n    tag_164:\n        /* \"#utility.yul\":33888:33889   */\n      0x00\n        /* \"#utility.yul\":33905:33925   */\n      tag_699\n        /* \"#utility.yul\":33923:33924   */\n      dup3\n        /* \"#utility.yul\":33905:33925   */\n      tag_571\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":33900:33925   */\n      swap2\n      pop\n        /* \"#utility.yul\":33939:33959   */\n      tag_700\n        /* \"#utility.yul\":33957:33958   */\n      dup4\n        /* \"#utility.yul\":33939:33959   */\n      tag_571\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":33934:33959   */\n      swap3\n      pop\n        /* \"#utility.yul\":33978:33979   */\n      dup3\n        /* \"#utility.yul\":33968:34003   */\n      tag_701\n      jumpi\n        /* \"#utility.yul\":33983:34001   */\n      tag_702\n      tag_665\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":33968:34003   */\n    tag_701:\n        /* \"#utility.yul\":34024:34025   */\n      dup3\n        /* \"#utility.yul\":34021:34022   */\n      dup3\n        /* \"#utility.yul\":34017:34026   */\n      mod\n        /* \"#utility.yul\":34012:34026   */\n      swap1\n      pop\n        /* \"#utility.yul\":33856:34032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34038:34218   */\n    tag_659:\n        /* \"#utility.yul\":34086:34163   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34083:34084   */\n      0x00\n        /* \"#utility.yul\":34076:34164   */\n      mstore\n        /* \"#utility.yul\":34183:34187   */\n      0x11\n        /* \"#utility.yul\":34180:34181   */\n      0x04\n        /* \"#utility.yul\":34173:34188   */\n      mstore\n        /* \"#utility.yul\":34207:34211   */\n      0x24\n        /* \"#utility.yul\":34204:34205   */\n      0x00\n        /* \"#utility.yul\":34197:34212   */\n      revert\n        /* \"#utility.yul\":34224:34404   */\n    tag_665:\n        /* \"#utility.yul\":34272:34349   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34269:34270   */\n      0x00\n        /* \"#utility.yul\":34262:34350   */\n      mstore\n        /* \"#utility.yul\":34369:34373   */\n      0x12\n        /* \"#utility.yul\":34366:34367   */\n      0x04\n        /* \"#utility.yul\":34359:34374   */\n      mstore\n        /* \"#utility.yul\":34393:34397   */\n      0x24\n        /* \"#utility.yul\":34390:34391   */\n      0x00\n        /* \"#utility.yul\":34383:34398   */\n      revert\n        /* \"#utility.yul\":34410:34590   */\n    tag_689:\n        /* \"#utility.yul\":34458:34535   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34455:34456   */\n      0x00\n        /* \"#utility.yul\":34448:34536   */\n      mstore\n        /* \"#utility.yul\":34555:34559   */\n      0x22\n        /* \"#utility.yul\":34552:34553   */\n      0x04\n        /* \"#utility.yul\":34545:34560   */\n      mstore\n        /* \"#utility.yul\":34579:34583   */\n      0x24\n        /* \"#utility.yul\":34576:34577   */\n      0x00\n        /* \"#utility.yul\":34569:34584   */\n      revert\n        /* \"#utility.yul\":34596:34776   */\n    tag_116:\n        /* \"#utility.yul\":34644:34721   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34641:34642   */\n      0x00\n        /* \"#utility.yul\":34634:34722   */\n      mstore\n        /* \"#utility.yul\":34741:34745   */\n      0x32\n        /* \"#utility.yul\":34738:34739   */\n      0x04\n        /* \"#utility.yul\":34731:34746   */\n      mstore\n        /* \"#utility.yul\":34765:34769   */\n      0x24\n        /* \"#utility.yul\":34762:34763   */\n      0x00\n        /* \"#utility.yul\":34755:34770   */\n      revert\n        /* \"#utility.yul\":34782:34962   */\n    tag_108:\n        /* \"#utility.yul\":34830:34907   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34827:34828   */\n      0x00\n        /* \"#utility.yul\":34820:34908   */\n      mstore\n        /* \"#utility.yul\":34927:34931   */\n      0x41\n        /* \"#utility.yul\":34924:34925   */\n      0x04\n        /* \"#utility.yul\":34917:34932   */\n      mstore\n        /* \"#utility.yul\":34951:34955   */\n      0x24\n        /* \"#utility.yul\":34948:34949   */\n      0x00\n        /* \"#utility.yul\":34941:34956   */\n      revert\n        /* \"#utility.yul\":34968:35151   */\n    tag_262:\n        /* \"#utility.yul\":35003:35006   */\n      0x00\n        /* \"#utility.yul\":35041:35042   */\n      0x03\n        /* \"#utility.yul\":35023:35039   */\n      returndatasize\n        /* \"#utility.yul\":35020:35043   */\n      gt\n        /* \"#utility.yul\":35017:35145   */\n      iszero\n      tag_709\n      jumpi\n        /* \"#utility.yul\":35079:35080   */\n      0x04\n        /* \"#utility.yul\":35076:35077   */\n      0x00\n        /* \"#utility.yul\":35073:35074   */\n      dup1\n        /* \"#utility.yul\":35058:35081   */\n      returndatacopy\n        /* \"#utility.yul\":35101:35135   */\n      tag_710\n        /* \"#utility.yul\":35132:35133   */\n      0x00\n        /* \"#utility.yul\":35126:35134   */\n      mload\n        /* \"#utility.yul\":35101:35135   */\n      tag_711\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":35094:35135   */\n      swap1\n      pop\n        /* \"#utility.yul\":35017:35145   */\n    tag_709:\n        /* \"#utility.yul\":34968:35151   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":35157:35274   */\n    tag_344:\n        /* \"#utility.yul\":35266:35267   */\n      0x00\n        /* \"#utility.yul\":35263:35264   */\n      dup1\n        /* \"#utility.yul\":35256:35268   */\n      revert\n        /* \"#utility.yul\":35280:35397   */\n    tag_309:\n        /* \"#utility.yul\":35389:35390   */\n      0x00\n        /* \"#utility.yul\":35386:35387   */\n      dup1\n        /* \"#utility.yul\":35379:35391   */\n      revert\n        /* \"#utility.yul\":35403:35520   */\n    tag_334:\n        /* \"#utility.yul\":35512:35513   */\n      0x00\n        /* \"#utility.yul\":35509:35510   */\n      dup1\n        /* \"#utility.yul\":35502:35514   */\n      revert\n        /* \"#utility.yul\":35526:35643   */\n    tag_383:\n        /* \"#utility.yul\":35635:35636   */\n      0x00\n        /* \"#utility.yul\":35632:35633   */\n      dup1\n        /* \"#utility.yul\":35625:35637   */\n      revert\n        /* \"#utility.yul\":35649:35766   */\n    tag_373:\n        /* \"#utility.yul\":35758:35759   */\n      0x00\n        /* \"#utility.yul\":35755:35756   */\n      dup1\n        /* \"#utility.yul\":35748:35760   */\n      revert\n        /* \"#utility.yul\":35772:35874   */\n    tag_482:\n        /* \"#utility.yul\":35813:35819   */\n      0x00\n        /* \"#utility.yul\":35864:35866   */\n      0x1f\n        /* \"#utility.yul\":35860:35867   */\n      not\n        /* \"#utility.yul\":35855:35857   */\n      0x1f\n        /* \"#utility.yul\":35848:35853   */\n      dup4\n        /* \"#utility.yul\":35844:35858   */\n      add\n        /* \"#utility.yul\":35840:35868   */\n      and\n        /* \"#utility.yul\":35830:35868   */\n      swap1\n      pop\n        /* \"#utility.yul\":35772:35874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35880:35986   */\n    tag_711:\n        /* \"#utility.yul\":35924:35932   */\n      0x00\n        /* \"#utility.yul\":35973:35978   */\n      dup2\n        /* \"#utility.yul\":35968:35971   */\n      0xe0\n        /* \"#utility.yul\":35964:35979   */\n      shr\n        /* \"#utility.yul\":35943:35979   */\n      swap1\n      pop\n        /* \"#utility.yul\":35880:35986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35992:36231   */\n    tag_513:\n        /* \"#utility.yul\":36132:36166   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":36128:36129   */\n      0x00\n        /* \"#utility.yul\":36120:36126   */\n      dup3\n        /* \"#utility.yul\":36116:36130   */\n      add\n        /* \"#utility.yul\":36109:36167   */\n      mstore\n        /* \"#utility.yul\":36201:36223   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":36196:36198   */\n      0x20\n        /* \"#utility.yul\":36188:36194   */\n      dup3\n        /* \"#utility.yul\":36184:36199   */\n      add\n        /* \"#utility.yul\":36177:36224   */\n      mstore\n        /* \"#utility.yul\":35992:36231   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36237:36471   */\n    tag_518:\n        /* \"#utility.yul\":36377:36411   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":36373:36374   */\n      0x00\n        /* \"#utility.yul\":36365:36371   */\n      dup3\n        /* \"#utility.yul\":36361:36375   */\n      add\n        /* \"#utility.yul\":36354:36412   */\n      mstore\n        /* \"#utility.yul\":36446:36463   */\n      0x6572206e6f7220617070726f7665640000000000000000000000000000000000\n        /* \"#utility.yul\":36441:36443   */\n      0x20\n        /* \"#utility.yul\":36433:36439   */\n      dup3\n        /* \"#utility.yul\":36429:36444   */\n      add\n        /* \"#utility.yul\":36422:36464   */\n      mstore\n        /* \"#utility.yul\":36237:36471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36477:36704   */\n    tag_523:\n        /* \"#utility.yul\":36617:36651   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":36613:36614   */\n      0x00\n        /* \"#utility.yul\":36605:36611   */\n      dup3\n        /* \"#utility.yul\":36601:36615   */\n      add\n        /* \"#utility.yul\":36594:36652   */\n      mstore\n        /* \"#utility.yul\":36686:36696   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":36681:36683   */\n      0x20\n        /* \"#utility.yul\":36673:36679   */\n      dup3\n        /* \"#utility.yul\":36669:36684   */\n      add\n        /* \"#utility.yul\":36662:36697   */\n      mstore\n        /* \"#utility.yul\":36477:36704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36710:36933   */\n    tag_528:\n        /* \"#utility.yul\":36850:36884   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":36846:36847   */\n      0x00\n        /* \"#utility.yul\":36838:36844   */\n      dup3\n        /* \"#utility.yul\":36834:36848   */\n      add\n        /* \"#utility.yul\":36827:36885   */\n      mstore\n        /* \"#utility.yul\":36919:36925   */\n      0x616e636500000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":36914:36916   */\n      0x20\n        /* \"#utility.yul\":36906:36912   */\n      dup3\n        /* \"#utility.yul\":36902:36917   */\n      add\n        /* \"#utility.yul\":36895:36926   */\n      mstore\n        /* \"#utility.yul\":36710:36933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36939:37168   */\n    tag_533:\n        /* \"#utility.yul\":37079:37113   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":37075:37076   */\n      0x00\n        /* \"#utility.yul\":37067:37073   */\n      dup3\n        /* \"#utility.yul\":37063:37077   */\n      add\n        /* \"#utility.yul\":37056:37114   */\n      mstore\n        /* \"#utility.yul\":37148:37160   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":37143:37145   */\n      0x20\n        /* \"#utility.yul\":37135:37141   */\n      dup3\n        /* \"#utility.yul\":37131:37146   */\n      add\n        /* \"#utility.yul\":37124:37161   */\n      mstore\n        /* \"#utility.yul\":36939:37168   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37174:37398   */\n    tag_538:\n        /* \"#utility.yul\":37314:37348   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":37310:37311   */\n      0x00\n        /* \"#utility.yul\":37302:37308   */\n      dup3\n        /* \"#utility.yul\":37298:37312   */\n      add\n        /* \"#utility.yul\":37291:37349   */\n      mstore\n        /* \"#utility.yul\":37383:37390   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":37378:37380   */\n      0x20\n        /* \"#utility.yul\":37370:37376   */\n      dup3\n        /* \"#utility.yul\":37366:37381   */\n      add\n        /* \"#utility.yul\":37359:37391   */\n      mstore\n        /* \"#utility.yul\":37174:37398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37404:37626   */\n    tag_543:\n        /* \"#utility.yul\":37544:37578   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":37540:37541   */\n      0x00\n        /* \"#utility.yul\":37532:37538   */\n      dup3\n        /* \"#utility.yul\":37528:37542   */\n      add\n        /* \"#utility.yul\":37521:37579   */\n      mstore\n        /* \"#utility.yul\":37613:37618   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":37608:37610   */\n      0x20\n        /* \"#utility.yul\":37600:37606   */\n      dup3\n        /* \"#utility.yul\":37596:37611   */\n      add\n        /* \"#utility.yul\":37589:37619   */\n      mstore\n        /* \"#utility.yul\":37404:37626   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37632:37861   */\n    tag_548:\n        /* \"#utility.yul\":37772:37806   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":37768:37769   */\n      0x00\n        /* \"#utility.yul\":37760:37766   */\n      dup3\n        /* \"#utility.yul\":37756:37770   */\n      add\n        /* \"#utility.yul\":37749:37807   */\n      mstore\n        /* \"#utility.yul\":37841:37853   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":37836:37838   */\n      0x20\n        /* \"#utility.yul\":37828:37834   */\n      dup3\n        /* \"#utility.yul\":37824:37839   */\n      add\n        /* \"#utility.yul\":37817:37854   */\n      mstore\n        /* \"#utility.yul\":37632:37861   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37867:38095   */\n    tag_553:\n        /* \"#utility.yul\":38007:38041   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":38003:38004   */\n      0x00\n        /* \"#utility.yul\":37995:38001   */\n      dup3\n        /* \"#utility.yul\":37991:38005   */\n      add\n        /* \"#utility.yul\":37984:38042   */\n      mstore\n        /* \"#utility.yul\":38076:38087   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":38071:38073   */\n      0x20\n        /* \"#utility.yul\":38063:38069   */\n      dup3\n        /* \"#utility.yul\":38059:38074   */\n      add\n        /* \"#utility.yul\":38052:38088   */\n      mstore\n        /* \"#utility.yul\":37867:38095   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38101:38329   */\n    tag_558:\n        /* \"#utility.yul\":38241:38275   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":38237:38238   */\n      0x00\n        /* \"#utility.yul\":38229:38235   */\n      dup3\n        /* \"#utility.yul\":38225:38239   */\n      add\n        /* \"#utility.yul\":38218:38276   */\n      mstore\n        /* \"#utility.yul\":38310:38321   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":38305:38307   */\n      0x20\n        /* \"#utility.yul\":38297:38303   */\n      dup3\n        /* \"#utility.yul\":38293:38308   */\n      add\n        /* \"#utility.yul\":38286:38322   */\n      mstore\n        /* \"#utility.yul\":38101:38329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38335:38562   */\n    tag_563:\n        /* \"#utility.yul\":38475:38509   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":38471:38472   */\n      0x00\n        /* \"#utility.yul\":38463:38469   */\n      dup3\n        /* \"#utility.yul\":38459:38473   */\n      add\n        /* \"#utility.yul\":38452:38510   */\n      mstore\n        /* \"#utility.yul\":38544:38554   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":38539:38541   */\n      0x20\n        /* \"#utility.yul\":38531:38537   */\n      dup3\n        /* \"#utility.yul\":38527:38542   */\n      add\n        /* \"#utility.yul\":38520:38555   */\n      mstore\n        /* \"#utility.yul\":38335:38562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38568:38788   */\n    tag_568:\n        /* \"#utility.yul\":38708:38742   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":38704:38705   */\n      0x00\n        /* \"#utility.yul\":38696:38702   */\n      dup3\n        /* \"#utility.yul\":38692:38706   */\n      add\n        /* \"#utility.yul\":38685:38743   */\n      mstore\n        /* \"#utility.yul\":38777:38780   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":38772:38774   */\n      0x20\n        /* \"#utility.yul\":38764:38770   */\n      dup3\n        /* \"#utility.yul\":38760:38775   */\n      add\n        /* \"#utility.yul\":38753:38781   */\n      mstore\n        /* \"#utility.yul\":38568:38788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38794:39505   */\n    tag_264:\n        /* \"#utility.yul\":38833:38836   */\n      0x00\n        /* \"#utility.yul\":38871:38875   */\n      0x44\n        /* \"#utility.yul\":38853:38869   */\n      returndatasize\n        /* \"#utility.yul\":38850:38876   */\n      lt\n        /* \"#utility.yul\":38847:38886   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":38879:38884   */\n      jump(tag_731)\n        /* \"#utility.yul\":38847:38886   */\n    tag_732:\n        /* \"#utility.yul\":38908:38928   */\n      tag_733\n      tag_630\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":38983:38984   */\n      0x04\n        /* \"#utility.yul\":38965:38981   */\n      returndatasize\n        /* \"#utility.yul\":38961:38985   */\n      sub\n        /* \"#utility.yul\":38958:38959   */\n      0x04\n        /* \"#utility.yul\":38952:38956   */\n      dup3\n        /* \"#utility.yul\":38937:38986   */\n      returndatacopy\n        /* \"#utility.yul\":39016:39020   */\n      dup1\n        /* \"#utility.yul\":39010:39021   */\n      mload\n        /* \"#utility.yul\":39115:39131   */\n      returndatasize\n        /* \"#utility.yul\":39108:39112   */\n      0x24\n        /* \"#utility.yul\":39100:39106   */\n      dup3\n        /* \"#utility.yul\":39096:39113   */\n      add\n        /* \"#utility.yul\":39093:39132   */\n      gt\n        /* \"#utility.yul\":39060:39078   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":39052:39058   */\n      dup3\n        /* \"#utility.yul\":39049:39079   */\n      gt\n        /* \"#utility.yul\":39033:39146   */\n      or\n        /* \"#utility.yul\":39030:39176   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":39161:39166   */\n      pop\n      pop\n      jump(tag_731)\n        /* \"#utility.yul\":39030:39176   */\n    tag_734:\n        /* \"#utility.yul\":39207:39213   */\n      dup1\n        /* \"#utility.yul\":39201:39205   */\n      dup3\n        /* \"#utility.yul\":39197:39214   */\n      add\n        /* \"#utility.yul\":39243:39246   */\n      dup1\n        /* \"#utility.yul\":39237:39247   */\n      mload\n        /* \"#utility.yul\":39270:39288   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":39262:39268   */\n      dup2\n        /* \"#utility.yul\":39259:39289   */\n      gt\n        /* \"#utility.yul\":39256:39299   */\n      iszero\n      tag_735\n      jumpi\n        /* \"#utility.yul\":39292:39297   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_731)\n        /* \"#utility.yul\":39256:39299   */\n    tag_735:\n        /* \"#utility.yul\":39340:39346   */\n      dup1\n        /* \"#utility.yul\":39333:39337   */\n      0x20\n        /* \"#utility.yul\":39328:39331   */\n      dup4\n        /* \"#utility.yul\":39324:39338   */\n      add\n        /* \"#utility.yul\":39320:39347   */\n      add\n        /* \"#utility.yul\":39399:39400   */\n      0x04\n        /* \"#utility.yul\":39381:39397   */\n      returndatasize\n        /* \"#utility.yul\":39377:39401   */\n      sub\n        /* \"#utility.yul\":39371:39375   */\n      dup6\n        /* \"#utility.yul\":39367:39402   */\n      add\n        /* \"#utility.yul\":39362:39365   */\n      dup2\n        /* \"#utility.yul\":39359:39403   */\n      gt\n        /* \"#utility.yul\":39356:39413   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":39406:39411   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_731)\n        /* \"#utility.yul\":39356:39413   */\n    tag_736:\n        /* \"#utility.yul\":39423:39480   */\n      tag_737\n        /* \"#utility.yul\":39471:39477   */\n      dup3\n        /* \"#utility.yul\":39465:39469   */\n      0x20\n        /* \"#utility.yul\":39461:39478   */\n      add\n        /* \"#utility.yul\":39453:39459   */\n      dup6\n        /* \"#utility.yul\":39449:39479   */\n      add\n        /* \"#utility.yul\":39443:39447   */\n      dup7\n        /* \"#utility.yul\":39423:39480   */\n      tag_632\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":39496:39499   */\n      dup3\n        /* \"#utility.yul\":39489:39499   */\n      swap6\n      pop\n        /* \"#utility.yul\":38837:39505   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":38794:39505   */\n    tag_731:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":39511:39633   */\n    tag_339:\n        /* \"#utility.yul\":39584:39608   */\n      tag_739\n        /* \"#utility.yul\":39602:39607   */\n      dup2\n        /* \"#utility.yul\":39584:39608   */\n      tag_454\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":39577:39582   */\n      dup2\n        /* \"#utility.yul\":39574:39609   */\n      eq\n        /* \"#utility.yul\":39564:39627   */\n      tag_740\n      jumpi\n        /* \"#utility.yul\":39623:39624   */\n      0x00\n        /* \"#utility.yul\":39620:39621   */\n      dup1\n        /* \"#utility.yul\":39613:39625   */\n      revert\n        /* \"#utility.yul\":39564:39627   */\n    tag_740:\n        /* \"#utility.yul\":39511:39633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39639:39755   */\n    tag_354:\n        /* \"#utility.yul\":39709:39730   */\n      tag_742\n        /* \"#utility.yul\":39724:39729   */\n      dup2\n        /* \"#utility.yul\":39709:39730   */\n      tag_472\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":39702:39707   */\n      dup2\n        /* \"#utility.yul\":39699:39731   */\n      eq\n        /* \"#utility.yul\":39689:39749   */\n      tag_743\n      jumpi\n        /* \"#utility.yul\":39745:39746   */\n      0x00\n        /* \"#utility.yul\":39742:39743   */\n      dup1\n        /* \"#utility.yul\":39735:39747   */\n      revert\n        /* \"#utility.yul\":39689:39749   */\n    tag_743:\n        /* \"#utility.yul\":39639:39755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39761:39881   */\n    tag_358:\n        /* \"#utility.yul\":39833:39856   */\n      tag_745\n        /* \"#utility.yul\":39850:39855   */\n      dup2\n        /* \"#utility.yul\":39833:39856   */\n      tag_675\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":39826:39831   */\n      dup2\n        /* \"#utility.yul\":39823:39857   */\n      eq\n        /* \"#utility.yul\":39813:39875   */\n      tag_746\n      jumpi\n        /* \"#utility.yul\":39871:39872   */\n      0x00\n        /* \"#utility.yul\":39868:39869   */\n      dup1\n        /* \"#utility.yul\":39861:39873   */\n      revert\n        /* \"#utility.yul\":39813:39875   */\n    tag_746:\n        /* \"#utility.yul\":39761:39881   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":39887:40009   */\n    tag_369:\n        /* \"#utility.yul\":39960:39984   */\n      tag_748\n        /* \"#utility.yul\":39978:39983   */\n      dup2\n        /* \"#utility.yul\":39960:39984   */\n      tag_571\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":39953:39958   */\n      dup2\n        /* \"#utility.yul\":39950:39985   */\n      eq\n        /* \"#utility.yul\":39940:40003   */\n      tag_749\n      jumpi\n        /* \"#utility.yul\":39999:40000   */\n      0x00\n        /* \"#utility.yul\":39996:39997   */\n      dup1\n        /* \"#utility.yul\":39989:40001   */\n      revert\n        /* \"#utility.yul\":39940:40003   */\n    tag_749:\n        /* \"#utility.yul\":39887:40009   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6dd8c36bf90343f0f2efffb61736f4723baf1311bdd6bfa7e10e502843d563764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_413": {
									"entryPoint": null,
									"id": 413,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_969": {
									"entryPoint": 131,
									"id": 969,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4422:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:9"
															},
															"nodeType": "YulIf",
															"src": "262:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:9",
														"type": ""
													}
												],
												"src": "7:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:9"
															},
															"nodeType": "YulIf",
															"src": "531:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:9",
														"type": ""
													}
												],
												"src": "448:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "950:1041:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "996:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "998:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "998:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "998:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "971:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "992:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "963:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:32:9"
															},
															"nodeType": "YulIf",
															"src": "960:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1089:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1104:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1128:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1139:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1124:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1124:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1118:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1108:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1189:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1191:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1191:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1191:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1169:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1158:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1155:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1286:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1296:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1296:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1390:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1429:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1440:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1425:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1425:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1419:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1491:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1493:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1493:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1493:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1460:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1457:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1588:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1644:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1655:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1664:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1598:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1588:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1692:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1707:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1731:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1742:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1727:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1727:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1721:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1721:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1711:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1793:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1795:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1795:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1795:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1773:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1762:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1762:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1759:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1890:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1946:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1957:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1942:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1942:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1966:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1900:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1900:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1890:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "904:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "915:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "927:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "935:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "943:6:9",
														"type": ""
													}
												],
												"src": "809:1182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2048:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2058:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2107:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2115:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2087:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2022:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2031:6:9",
														"type": ""
													}
												],
												"src": "1997:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2172:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2182:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2192:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2165:6:9",
														"type": ""
													}
												],
												"src": "2132:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2280:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2385:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2387:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2387:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2387:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2357:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2354:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:30:9"
															},
															"nodeType": "YulIf",
															"src": "2351:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2417:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2447:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2425:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2417:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2491:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2503:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2491:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2264:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2275:4:9",
														"type": ""
													}
												],
												"src": "2213:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2586:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2595:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2590:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2655:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2680:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2685:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2676:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2676:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2699:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2704:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2695:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2689:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2669:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2669:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2669:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2616:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2627:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2629:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2638:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2641:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2634:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2634:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2629:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2609:3:9",
																"statements": []
															},
															"src": "2605:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2752:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2802:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2807:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2798:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2798:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2791:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2791:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2791:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2733:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2730:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:13:9"
															},
															"nodeType": "YulIf",
															"src": "2727:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2558:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2563:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2568:6:9",
														"type": ""
													}
												],
												"src": "2527:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2891:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2901:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2915:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2911:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2932:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2962:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2968:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2936:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3023:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3037:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3045:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3033:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3033:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2989:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:26:9"
															},
															"nodeType": "YulIf",
															"src": "2979:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3126:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3126:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3126:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3076:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3099:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3107:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3096:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:38:9"
															},
															"nodeType": "YulIf",
															"src": "3070:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2875:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2884:6:9",
														"type": ""
													}
												],
												"src": "2840:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3209:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3219:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3241:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3271:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3249:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3223:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3388:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3390:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3390:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3390:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3331:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3343:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3328:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3367:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3364:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3325:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:62:9"
															},
															"nodeType": "YulIf",
															"src": "3322:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3430:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3195:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3203:4:9",
														"type": ""
													}
												],
												"src": "3166:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3481:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3501:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3491:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3491:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3491:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3622:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3612:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3453:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3667:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3687:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3677:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3677:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3677:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3805:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3639:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3914:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3931:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3934:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3924:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3825:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3948:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4160:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4177:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4071:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4283:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4300:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4194:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4393:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4400:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4375:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4348:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4358:6:9",
														"type": ""
													}
												],
												"src": "4317:102:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200349c3803806200349c8339818101604052810190620000379190620001cd565b62000048836200008360201b60201c565b8160009080519060200190620000609291906200009f565b508060019080519060200190620000799291906200009f565b505050506200040a565b80600490805190602001906200009b9291906200009f565b5050565b828054620000ad906200031b565b90600052602060002090601f016020900481019282620000d157600085556200011d565b82601f10620000ec57805160ff19168380011785556200011d565b828001600101855582156200011d579182015b828111156200011c578251825591602001919060010190620000ff565b5b5090506200012c919062000130565b5090565b5b808211156200014b57600081600090555060010162000131565b5090565b6000620001666200016084620002af565b62000286565b905082815260208101848484011115620001855762000184620003ea565b5b62000192848285620002e5565b509392505050565b600082601f830112620001b257620001b1620003e5565b5b8151620001c48482602086016200014f565b91505092915050565b600080600060608486031215620001e957620001e8620003f4565b5b600084015167ffffffffffffffff8111156200020a5762000209620003ef565b5b62000218868287016200019a565b935050602084015167ffffffffffffffff8111156200023c576200023b620003ef565b5b6200024a868287016200019a565b925050604084015167ffffffffffffffff8111156200026e576200026d620003ef565b5b6200027c868287016200019a565b9150509250925092565b600062000292620002a5565b9050620002a0828262000351565b919050565b6000604051905090565b600067ffffffffffffffff821115620002cd57620002cc620003b6565b5b620002d882620003f9565b9050602081019050919050565b60005b8381101562000305578082015181840152602081019050620002e8565b8381111562000315576000848401525b50505050565b600060028204905060018216806200033457607f821691505b602082108114156200034b576200034a62000387565b5b50919050565b6200035c82620003f9565b810181811067ffffffffffffffff821117156200037e576200037d620003b6565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b613082806200041a6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063731133e911610071578063731133e9146101b257806395d89b41146101ce578063a22cb465146101ec578063e985e9c514610208578063f242432a14610238578063f5298aca14610254576100b3565b8062fdd58e146100b857806301ffc9a7146100e857806306fdde03146101185780630e89341c146101365780632eb2c2d6146101665780634e1273f414610182575b600080fd5b6100d260048036038101906100cd9190611e08565b610270565b6040516100df9190612691565b60405180910390f35b61010260048036038101906100fd9190611f96565b61033a565b60405161010f91906124d4565b60405180910390f35b61012061041c565b60405161012d91906124ef565b60405180910390f35b610150600480360381019061014b9190611ff0565b6104aa565b60405161015d91906124ef565b60405180910390f35b610180600480360381019061017b9190611c62565b6104de565b005b61019c60048036038101906101979190611f1e565b61057f565b6040516101a9919061247b565b60405180910390f35b6101cc60048036038101906101c79190611e9b565b610698565b005b6101d66106aa565b6040516101e391906124ef565b60405180910390f35b61020660048036038101906102019190611dc8565b610738565b005b610222600480360381019061021d9190611c22565b61074e565b60405161022f91906124d4565b60405180910390f35b610252600480360381019061024d9190611d31565b6107e2565b005b61026e60048036038101906102699190611e48565b610883565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d890612591565b60405180910390fd5b6002600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040557507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610415575061041482610893565b5b9050919050565b6000805461042990612985565b80601f016020809104026020016040519081016040528092919081815260200182805461045590612985565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b505050505081565b606060046104b7836108fd565b6040516020016104c8929190612395565b6040516020818303038152906040529050919050565b6104e6610a5e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061052c575061052b85610526610a5e565b61074e565b5b61056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290612531565b60405180910390fd5b6105788585858585610a66565b5050505050565b606081518351146105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90612631565b60405180910390fd5b6000835167ffffffffffffffff8111156105e2576105e1612b1e565b5b6040519080825280602002602001820160405280156106105781602001602082028036833780820191505090505b50905060005b845181101561068d5761065d85828151811061063557610634612aef565b5b60200260200101518583815181106106505761064f612aef565b5b6020026020010151610270565b8282815181106106705761066f612aef565b5b60200260200101818152505080610686906129e8565b9050610616565b508091505092915050565b6106a484848484610d8b565b50505050565b600180546106b790612985565b80601f01602080910402602001604051908101604052809291908181526020018280546106e390612985565b80156107305780601f1061070557610100808354040283529160200191610730565b820191906000526020600020905b81548152906001019060200180831161071357829003601f168201915b505050505081565b61074a610743610a5e565b8383610f3d565b5050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6107ea610a5e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610830575061082f8561082a610a5e565b61074e565b5b61086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690612531565b60405180910390fd5b61087c85858585856110aa565b5050505050565b61088e838383611349565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000821415610945576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610a59565b600082905060005b60008214610977578080610960906129e8565b915050600a82610970919061286a565b915061094d565b60008167ffffffffffffffff81111561099357610992612b1e565b5b6040519080825280601f01601f1916602001820160405280156109c55781602001600182028036833780820191505090505b5090505b60008514610a52576001826109de919061289b565b9150600a856109ed9190612a31565b60306109f99190612814565b60f81b818381518110610a0f57610a0e612aef565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610a4b919061286a565b94506109c9565b8093505050505b919050565b600033905090565b8151835114610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa190612651565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b11906125b1565b60405180910390fd5b6000610b24610a5e565b9050610b34818787878787611592565b60005b8451811015610ce8576000858281518110610b5557610b54612aef565b5b602002602001015190506000858381518110610b7457610b73612aef565b5b6020026020010151905060006002600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d906125f1565b60405180910390fd5b8181036002600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ccd9190612814565b9250508190555050505080610ce1906129e8565b9050610b37565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d5f92919061249d565b60405180910390a4610d7581878787878761159a565b610d838187878787876115a2565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290612671565b60405180910390fd5b6000610e05610a5e565b90506000610e1285611789565b90506000610e1f85611789565b9050610e3083600089858589611592565b846002600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e909190612814565b925050819055508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628989604051610f0e9291906126ac565b60405180910390a4610f258360008985858961159a565b610f3483600089898989611803565b50505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa390612611565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161109d91906124d4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561111a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611111906125b1565b60405180910390fd5b6000611124610a5e565b9050600061113185611789565b9050600061113e85611789565b905061114e838989858589611592565b60006002600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050858110156111e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111dd906125f1565b60405180910390fd5b8581036002600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856002600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461129d9190612814565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a60405161131a9291906126ac565b60405180910390a4611330848a8a86868a61159a565b61133e848a8a8a8a8a611803565b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b0906125d1565b60405180910390fd5b60006113c3610a5e565b905060006113d084611789565b905060006113dd84611789565b90506113fd83876000858560405180602001604052806000815250611592565b60006002600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811015611495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148c90612571565b60405180910390fd5b8481036002600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516115639291906126ac565b60405180910390a46115898488600086866040518060200160405280600081525061159a565b50505050505050565b505050505050565b505050505050565b6115c18473ffffffffffffffffffffffffffffffffffffffff166119ea565b15611781578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016116079594939291906123b9565b602060405180830381600087803b15801561162157600080fd5b505af192505050801561165257506040513d601f19601f8201168201806040525081019061164f9190611fc3565b60015b6116f85761165e612b4d565b806308c379a014156116bb5750611673612f5a565b8061167e57506116bd565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b291906124ef565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ef90612511565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461177f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177690612551565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156117a8576117a7612b1e565b5b6040519080825280602002602001820160405280156117d65781602001602082028036833780820191505090505b50905082816000815181106117ee576117ed612aef565b5b60200260200101818152505080915050919050565b6118228473ffffffffffffffffffffffffffffffffffffffff166119ea565b156119e2578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611868959493929190612421565b602060405180830381600087803b15801561188257600080fd5b505af19250505080156118b357506040513d601f19601f820116820180604052508101906118b09190611fc3565b60015b611959576118bf612b4d565b806308c379a0141561191c57506118d4612f5a565b806118df575061191e565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191391906124ef565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195090612511565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d790612551565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611a20611a1b846126fa565b6126d5565b90508083825260208201905082856020860282011115611a4357611a42612b74565b5b60005b85811015611a735781611a598882611b2f565b845260208401935060208301925050600181019050611a46565b5050509392505050565b6000611a90611a8b84612726565b6126d5565b90508083825260208201905082856020860282011115611ab357611ab2612b74565b5b60005b85811015611ae35781611ac98882611c0d565b845260208401935060208301925050600181019050611ab6565b5050509392505050565b6000611b00611afb84612752565b6126d5565b905082815260208101848484011115611b1c57611b1b612b79565b5b611b27848285612943565b509392505050565b600081359050611b3e81612ff0565b92915050565b600082601f830112611b5957611b58612b6f565b5b8135611b69848260208601611a0d565b91505092915050565b600082601f830112611b8757611b86612b6f565b5b8135611b97848260208601611a7d565b91505092915050565b600081359050611baf81613007565b92915050565b600081359050611bc48161301e565b92915050565b600081519050611bd98161301e565b92915050565b600082601f830112611bf457611bf3612b6f565b5b8135611c04848260208601611aed565b91505092915050565b600081359050611c1c81613035565b92915050565b60008060408385031215611c3957611c38612b83565b5b6000611c4785828601611b2f565b9250506020611c5885828601611b2f565b9150509250929050565b600080600080600060a08688031215611c7e57611c7d612b83565b5b6000611c8c88828901611b2f565b9550506020611c9d88828901611b2f565b945050604086013567ffffffffffffffff811115611cbe57611cbd612b7e565b5b611cca88828901611b72565b935050606086013567ffffffffffffffff811115611ceb57611cea612b7e565b5b611cf788828901611b72565b925050608086013567ffffffffffffffff811115611d1857611d17612b7e565b5b611d2488828901611bdf565b9150509295509295909350565b600080600080600060a08688031215611d4d57611d4c612b83565b5b6000611d5b88828901611b2f565b9550506020611d6c88828901611b2f565b9450506040611d7d88828901611c0d565b9350506060611d8e88828901611c0d565b925050608086013567ffffffffffffffff811115611daf57611dae612b7e565b5b611dbb88828901611bdf565b9150509295509295909350565b60008060408385031215611ddf57611dde612b83565b5b6000611ded85828601611b2f565b9250506020611dfe85828601611ba0565b9150509250929050565b60008060408385031215611e1f57611e1e612b83565b5b6000611e2d85828601611b2f565b9250506020611e3e85828601611c0d565b9150509250929050565b600080600060608486031215611e6157611e60612b83565b5b6000611e6f86828701611b2f565b9350506020611e8086828701611c0d565b9250506040611e9186828701611c0d565b9150509250925092565b60008060008060808587031215611eb557611eb4612b83565b5b6000611ec387828801611b2f565b9450506020611ed487828801611c0d565b9350506040611ee587828801611c0d565b925050606085013567ffffffffffffffff811115611f0657611f05612b7e565b5b611f1287828801611bdf565b91505092959194509250565b60008060408385031215611f3557611f34612b83565b5b600083013567ffffffffffffffff811115611f5357611f52612b7e565b5b611f5f85828601611b44565b925050602083013567ffffffffffffffff811115611f8057611f7f612b7e565b5b611f8c85828601611b72565b9150509250929050565b600060208284031215611fac57611fab612b83565b5b6000611fba84828501611bb5565b91505092915050565b600060208284031215611fd957611fd8612b83565b5b6000611fe784828501611bca565b91505092915050565b60006020828403121561200657612005612b83565b5b600061201484828501611c0d565b91505092915050565b60006120298383612377565b60208301905092915050565b61203e816128cf565b82525050565b600061204f826127a8565b61205981856127d6565b935061206483612783565b8060005b8381101561209557815161207c888261201d565b9750612087836127c9565b925050600181019050612068565b5085935050505092915050565b6120ab816128e1565b82525050565b60006120bc826127b3565b6120c681856127e7565b93506120d6818560208601612952565b6120df81612b88565b840191505092915050565b60006120f5826127be565b6120ff81856127f8565b935061210f818560208601612952565b61211881612b88565b840191505092915050565b600061212e826127be565b6121388185612809565b9350612148818560208601612952565b80840191505092915050565b6000815461216181612985565b61216b8186612809565b945060018216600081146121865760018114612197576121ca565b60ff198316865281860193506121ca565b6121a085612793565b60005b838110156121c2578154818901526001820191506020810190506121a3565b838801955050505b50505092915050565b60006121e06034836127f8565b91506121eb82612ba6565b604082019050919050565b6000612203602f836127f8565b915061220e82612bf5565b604082019050919050565b60006122266028836127f8565b915061223182612c44565b604082019050919050565b60006122496024836127f8565b915061225482612c93565b604082019050919050565b600061226c602a836127f8565b915061227782612ce2565b604082019050919050565b600061228f6025836127f8565b915061229a82612d31565b604082019050919050565b60006122b26023836127f8565b91506122bd82612d80565b604082019050919050565b60006122d5602a836127f8565b91506122e082612dcf565b604082019050919050565b60006122f86029836127f8565b915061230382612e1e565b604082019050919050565b600061231b6029836127f8565b915061232682612e6d565b604082019050919050565b600061233e6028836127f8565b915061234982612ebc565b604082019050919050565b60006123616021836127f8565b915061236c82612f0b565b604082019050919050565b61238081612939565b82525050565b61238f81612939565b82525050565b60006123a18285612154565b91506123ad8284612123565b91508190509392505050565b600060a0820190506123ce6000830188612035565b6123db6020830187612035565b81810360408301526123ed8186612044565b905081810360608301526124018185612044565b9050818103608083015261241581846120b1565b90509695505050505050565b600060a0820190506124366000830188612035565b6124436020830187612035565b6124506040830186612386565b61245d6060830185612386565b818103608083015261246f81846120b1565b90509695505050505050565b600060208201905081810360008301526124958184612044565b905092915050565b600060408201905081810360008301526124b78185612044565b905081810360208301526124cb8184612044565b90509392505050565b60006020820190506124e960008301846120a2565b92915050565b6000602082019050818103600083015261250981846120ea565b905092915050565b6000602082019050818103600083015261252a816121d3565b9050919050565b6000602082019050818103600083015261254a816121f6565b9050919050565b6000602082019050818103600083015261256a81612219565b9050919050565b6000602082019050818103600083015261258a8161223c565b9050919050565b600060208201905081810360008301526125aa8161225f565b9050919050565b600060208201905081810360008301526125ca81612282565b9050919050565b600060208201905081810360008301526125ea816122a5565b9050919050565b6000602082019050818103600083015261260a816122c8565b9050919050565b6000602082019050818103600083015261262a816122eb565b9050919050565b6000602082019050818103600083015261264a8161230e565b9050919050565b6000602082019050818103600083015261266a81612331565b9050919050565b6000602082019050818103600083015261268a81612354565b9050919050565b60006020820190506126a66000830184612386565b92915050565b60006040820190506126c16000830185612386565b6126ce6020830184612386565b9392505050565b60006126df6126f0565b90506126eb82826129b7565b919050565b6000604051905090565b600067ffffffffffffffff82111561271557612714612b1e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561274157612740612b1e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561276d5761276c612b1e565b5b61277682612b88565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061281f82612939565b915061282a83612939565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561285f5761285e612a62565b5b828201905092915050565b600061287582612939565b915061288083612939565b9250826128905761288f612a91565b5b828204905092915050565b60006128a682612939565b91506128b183612939565b9250828210156128c4576128c3612a62565b5b828203905092915050565b60006128da82612919565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612970578082015181840152602081019050612955565b8381111561297f576000848401525b50505050565b6000600282049050600182168061299d57607f821691505b602082108114156129b1576129b0612ac0565b5b50919050565b6129c082612b88565b810181811067ffffffffffffffff821117156129df576129de612b1e565b5b80604052505050565b60006129f382612939565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a2657612a25612a62565b5b600182019050919050565b6000612a3c82612939565b9150612a4783612939565b925082612a5757612a56612a91565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d1115612b6c5760046000803e612b69600051612b99565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d1015612f6a57612fed565b612f726126f0565b60043d036004823e80513d602482011167ffffffffffffffff82111715612f9a575050612fed565b808201805167ffffffffffffffff811115612fb85750505050612fed565b80602083010160043d038501811115612fd5575050505050612fed565b612fe4826020018501866129b7565b82955050505050505b90565b612ff9816128cf565b811461300457600080fd5b50565b613010816128e1565b811461301b57600080fd5b50565b613027816128ed565b811461303257600080fd5b50565b61303e81612939565b811461304957600080fd5b5056fea2646970667358221220d6dd8c36bf90343f0f2efffb61736f4723baf1311bdd6bfa7e10e502843d563764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x349C CODESIZE SUB DUP1 PUSH3 0x349C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1CD JUMP JUMPDEST PUSH3 0x48 DUP4 PUSH3 0x83 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x60 SWAP3 SWAP2 SWAP1 PUSH3 0x9F JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x79 SWAP3 SWAP2 SWAP1 PUSH3 0x9F JUMP JUMPDEST POP POP POP POP PUSH3 0x40A JUMP JUMPDEST DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9B SWAP3 SWAP2 SWAP1 PUSH3 0x9F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xAD SWAP1 PUSH3 0x31B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xD1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x11D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xEC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x11D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x11D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x11C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xFF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x12C SWAP2 SWAP1 PUSH3 0x130 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x131 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x166 PUSH3 0x160 DUP5 PUSH3 0x2AF JUMP JUMPDEST PUSH3 0x286 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x185 JUMPI PUSH3 0x184 PUSH3 0x3EA JUMP JUMPDEST JUMPDEST PUSH3 0x192 DUP5 DUP3 DUP6 PUSH3 0x2E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x3E5 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1C4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x14F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1E9 JUMPI PUSH3 0x1E8 PUSH3 0x3F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20A JUMPI PUSH3 0x209 PUSH3 0x3EF JUMP JUMPDEST JUMPDEST PUSH3 0x218 DUP7 DUP3 DUP8 ADD PUSH3 0x19A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x23C JUMPI PUSH3 0x23B PUSH3 0x3EF JUMP JUMPDEST JUMPDEST PUSH3 0x24A DUP7 DUP3 DUP8 ADD PUSH3 0x19A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x26E JUMPI PUSH3 0x26D PUSH3 0x3EF JUMP JUMPDEST JUMPDEST PUSH3 0x27C DUP7 DUP3 DUP8 ADD PUSH3 0x19A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x292 PUSH3 0x2A5 JUMP JUMPDEST SWAP1 POP PUSH3 0x2A0 DUP3 DUP3 PUSH3 0x351 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2CD JUMPI PUSH3 0x2CC PUSH3 0x3B6 JUMP JUMPDEST JUMPDEST PUSH3 0x2D8 DUP3 PUSH3 0x3F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x305 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2E8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x315 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x334 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x34B JUMPI PUSH3 0x34A PUSH3 0x387 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x35C DUP3 PUSH3 0x3F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x37E JUMPI PUSH3 0x37D PUSH3 0x3B6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3082 DUP1 PUSH3 0x41A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x254 JUMPI PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x405 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x415 JUMPI POP PUSH2 0x414 DUP3 PUSH2 0x893 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x455 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH2 0x4B7 DUP4 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0xA5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH2 0x52B DUP6 PUSH2 0x526 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST JUMPDEST PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x562 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x578 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA66 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E2 JUMPI PUSH2 0x5E1 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x610 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x68D JUMPI PUSH2 0x65D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x635 JUMPI PUSH2 0x634 PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x270 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x686 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x616 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD8B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x6B7 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E3 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x730 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x705 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x730 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x713 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x74A PUSH2 0x743 PUSH2 0xA5E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7EA PUSH2 0xA5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x830 JUMPI POP PUSH2 0x82F DUP6 PUSH2 0x82A PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST JUMPDEST PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10AA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x88E DUP4 DUP4 DUP4 PUSH2 0x1349 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x977 JUMPI DUP1 DUP1 PUSH2 0x960 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x286A JUMP JUMPDEST SWAP2 POP PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xA52 JUMPI PUSH1 0x1 DUP3 PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA0F JUMPI PUSH2 0xA0E PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x286A JUMP JUMPDEST SWAP5 POP PUSH2 0x9C9 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x2651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB24 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH2 0xB34 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB55 JUMPI PUSH2 0xB54 PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xCE1 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB37 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD5F SWAP3 SWAP2 SWAP1 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xD75 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x159A JUMP JUMPDEST PUSH2 0xD83 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x15A2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE05 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE1F DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH2 0xE30 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1592 JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xF0E SWAP3 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF25 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x159A JUMP JUMPDEST PUSH2 0xF34 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1803 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA3 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1111 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1124 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1131 DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x113E DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH2 0x114E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x131A SWAP3 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1330 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x133E DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1803 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C3 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13D0 DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13DD DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH2 0x13FD DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x1495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1563 SWAP3 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1589 DUP5 DUP9 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x159A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15C1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19EA JUMP JUMPDEST ISZERO PUSH2 0x1781 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1607 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1652 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16F8 JUMPI PUSH2 0x165E PUSH2 0x2B4D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x16BB JUMPI POP PUSH2 0x1673 PUSH2 0x2F5A JUMP JUMPDEST DUP1 PUSH2 0x167E JUMPI POP PUSH2 0x16BD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B2 SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EF SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x177F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1776 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A7 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19EA JUMP JUMPDEST ISZERO PUSH2 0x19E2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1868 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18B3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B0 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1959 JUMPI PUSH2 0x18BF PUSH2 0x2B4D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x191C JUMPI POP PUSH2 0x18D4 PUSH2 0x2F5A JUMP JUMPDEST DUP1 PUSH2 0x18DF JUMPI POP PUSH2 0x191E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1950 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D7 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 PUSH2 0x1A1B DUP5 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x2B74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A73 JUMPI DUP2 PUSH2 0x1A59 DUP9 DUP3 PUSH2 0x1B2F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A46 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH2 0x1A8B DUP5 PUSH2 0x2726 JUMP JUMPDEST PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x2B74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1AE3 JUMPI DUP2 PUSH2 0x1AC9 DUP9 DUP3 PUSH2 0x1C0D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AB6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH2 0x1AFB DUP5 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x2B79 JUMP JUMPDEST JUMPDEST PUSH2 0x1B27 DUP5 DUP3 DUP6 PUSH2 0x2943 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3E DUP2 PUSH2 0x2FF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B59 JUMPI PUSH2 0x1B58 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B69 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B87 JUMPI PUSH2 0x1B86 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B97 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAF DUP2 PUSH2 0x3007 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC4 DUP2 PUSH2 0x301E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BD9 DUP2 PUSH2 0x301E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C04 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C1C DUP2 PUSH2 0x3035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C47 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C58 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8C DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C9D DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CBE JUMPI PUSH2 0x1CBD PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1CCA DUP9 DUP3 DUP10 ADD PUSH2 0x1B72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CEB JUMPI PUSH2 0x1CEA PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1CF7 DUP9 DUP3 DUP10 ADD PUSH2 0x1B72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D18 JUMPI PUSH2 0x1D17 PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1D24 DUP9 DUP3 DUP10 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D4D JUMPI PUSH2 0x1D4C PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5B DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D6C DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D7D DUP9 DUP3 DUP10 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D8E DUP9 DUP3 DUP10 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAE PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1DBB DUP9 DUP3 DUP10 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DED DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DFE DUP6 DUP3 DUP7 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1E PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E2D DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3E DUP6 DUP3 DUP7 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E61 JUMPI PUSH2 0x1E60 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6F DUP7 DUP3 DUP8 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E80 DUP7 DUP3 DUP8 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E91 DUP7 DUP3 DUP8 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB5 JUMPI PUSH2 0x1EB4 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC3 DUP8 DUP3 DUP9 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED4 DUP8 DUP3 DUP9 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE5 DUP8 DUP3 DUP9 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1F12 DUP8 DUP3 DUP9 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F35 JUMPI PUSH2 0x1F34 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1F5F DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F80 JUMPI PUSH2 0x1F7F PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1F8C DUP6 DUP3 DUP7 ADD PUSH2 0x1B72 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP5 DUP3 DUP6 ADD PUSH2 0x1BB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD9 JUMPI PUSH2 0x1FD8 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE7 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2014 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2029 DUP4 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203E DUP2 PUSH2 0x28CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204F DUP3 PUSH2 0x27A8 JUMP JUMPDEST PUSH2 0x2059 DUP2 DUP6 PUSH2 0x27D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2064 DUP4 PUSH2 0x2783 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2095 JUMPI DUP2 MLOAD PUSH2 0x207C DUP9 DUP3 PUSH2 0x201D JUMP JUMPDEST SWAP8 POP PUSH2 0x2087 DUP4 PUSH2 0x27C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2068 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20AB DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BC DUP3 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x20C6 DUP2 DUP6 PUSH2 0x27E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x20D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2952 JUMP JUMPDEST PUSH2 0x20DF DUP2 PUSH2 0x2B88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F5 DUP3 PUSH2 0x27BE JUMP JUMPDEST PUSH2 0x20FF DUP2 DUP6 PUSH2 0x27F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x210F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2952 JUMP JUMPDEST PUSH2 0x2118 DUP2 PUSH2 0x2B88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212E DUP3 PUSH2 0x27BE JUMP JUMPDEST PUSH2 0x2138 DUP2 DUP6 PUSH2 0x2809 JUMP JUMPDEST SWAP4 POP PUSH2 0x2148 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2952 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2161 DUP2 PUSH2 0x2985 JUMP JUMPDEST PUSH2 0x216B DUP2 DUP7 PUSH2 0x2809 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2186 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2197 JUMPI PUSH2 0x21CA JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x21A0 DUP6 PUSH2 0x2793 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C2 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21A3 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E0 PUSH1 0x34 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EB DUP3 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2203 PUSH1 0x2F DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x220E DUP3 PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2226 PUSH1 0x28 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2231 DUP3 PUSH2 0x2C44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2249 PUSH1 0x24 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2254 DUP3 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226C PUSH1 0x2A DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2277 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228F PUSH1 0x25 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x229A DUP3 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B2 PUSH1 0x23 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22BD DUP3 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 PUSH1 0x2A DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 PUSH2 0x2DCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 PUSH1 0x29 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2303 DUP3 PUSH2 0x2E1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B PUSH1 0x29 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2326 DUP3 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233E PUSH1 0x28 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2349 DUP3 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2361 PUSH1 0x21 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x236C DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2380 DUP2 PUSH2 0x2939 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x238F DUP2 PUSH2 0x2939 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A1 DUP3 DUP6 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x23AD DUP3 DUP5 PUSH2 0x2123 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x23CE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x23DB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2035 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23ED DUP2 DUP7 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2401 DUP2 DUP6 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2415 DUP2 DUP5 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x2443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x2450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x245D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2386 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x246F DUP2 DUP5 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2495 DUP2 DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B7 DUP2 DUP6 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24CB DUP2 DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252A DUP2 PUSH2 0x21D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254A DUP2 PUSH2 0x21F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x256A DUP2 PUSH2 0x2219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x258A DUP2 PUSH2 0x223C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25AA DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25CA DUP2 PUSH2 0x2282 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25EA DUP2 PUSH2 0x22A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x260A DUP2 PUSH2 0x22C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x262A DUP2 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264A DUP2 PUSH2 0x230E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x266A DUP2 PUSH2 0x2331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x268A DUP2 PUSH2 0x2354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2386 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x26CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2386 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DF PUSH2 0x26F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EB DUP3 DUP3 PUSH2 0x29B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2740 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x276D JUMPI PUSH2 0x276C PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH2 0x2776 DUP3 PUSH2 0x2B88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281F DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x282A DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x285F JUMPI PUSH2 0x285E PUSH2 0x2A62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2875 DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x2880 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2890 JUMPI PUSH2 0x288F PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A6 DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B1 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x28C4 JUMPI PUSH2 0x28C3 PUSH2 0x2A62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28DA DUP3 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2970 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2955 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x297F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x299D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x29B0 PUSH2 0x2AC0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C0 DUP3 PUSH2 0x2B88 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x29DF JUMPI PUSH2 0x29DE PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F3 DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x2A62 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3C DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A47 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A57 JUMPI PUSH2 0x2A56 PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2B6C JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2B69 PUSH1 0x0 MLOAD PUSH2 0x2B99 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2F6A JUMPI PUSH2 0x2FED JUMP JUMPDEST PUSH2 0x2F72 PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2F9A JUMPI POP POP PUSH2 0x2FED JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FB8 JUMPI POP POP POP POP PUSH2 0x2FED JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2FD5 JUMPI POP POP POP POP POP PUSH2 0x2FED JUMP JUMPDEST PUSH2 0x2FE4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x29B7 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2FF9 DUP2 PUSH2 0x28CF JUMP JUMPDEST DUP2 EQ PUSH2 0x3004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3010 DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x301B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3027 DUP2 PUSH2 0x28ED JUMP JUMPDEST DUP2 EQ PUSH2 0x3032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x303E DUP2 PUSH2 0x2939 JUMP JUMPDEST DUP2 EQ PUSH2 0x3049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDD DUP13 CALLDATASIZE 0xBF SWAP1 CALLVALUE EXTCODEHASH 0xF 0x2E SELFDESTRUCT 0xFB PUSH2 0x736F SELFBALANCE 0x23 0xBA CALL BALANCE SHL 0xDD PUSH12 0xFA7E10E502843D563764736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "559:17711:2:-:0;;;1163:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1250:13;1258:4;1250:7;;;:13;;:::i;:::-;1281:5;1274:4;:12;;;;;;;;;;;;:::i;:::-;;1306:7;1297:6;:16;;;;;;;;;;;;:::i;:::-;;1163:158;;;559:17711;;8910:88;8984:6;8977:4;:13;;;;;;;;;;;;:::i;:::-;;8910:88;:::o;559:17711::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:9:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:1182::-;927:6;935;943;992:2;980:9;971:7;967:23;963:32;960:119;;;998:79;;:::i;:::-;960:119;1139:1;1128:9;1124:17;1118:24;1169:18;1161:6;1158:30;1155:117;;;1191:79;;:::i;:::-;1155:117;1296:74;1362:7;1353:6;1342:9;1338:22;1296:74;:::i;:::-;1286:84;;1089:291;1440:2;1429:9;1425:18;1419:25;1471:18;1463:6;1460:30;1457:117;;;1493:79;;:::i;:::-;1457:117;1598:74;1664:7;1655:6;1644:9;1640:22;1598:74;:::i;:::-;1588:84;;1390:292;1742:2;1731:9;1727:18;1721:25;1773:18;1765:6;1762:30;1759:117;;;1795:79;;:::i;:::-;1759:117;1900:74;1966:7;1957:6;1946:9;1942:22;1900:74;:::i;:::-;1890:84;;1692:292;809:1182;;;;;:::o;1997:129::-;2031:6;2058:20;;:::i;:::-;2048:30;;2087:33;2115:4;2107:6;2087:33;:::i;:::-;1997:129;;;:::o;2132:75::-;2165:6;2198:2;2192:9;2182:19;;2132:75;:::o;2213:308::-;2275:4;2365:18;2357:6;2354:30;2351:56;;;2387:18;;:::i;:::-;2351:56;2425:29;2447:6;2425:29;:::i;:::-;2417:37;;2509:4;2503;2499:15;2491:23;;2213:308;;;:::o;2527:307::-;2595:1;2605:113;2619:6;2616:1;2613:13;2605:113;;;2704:1;2699:3;2695:11;2689:18;2685:1;2680:3;2676:11;2669:39;2641:2;2638:1;2634:10;2629:15;;2605:113;;;2736:6;2733:1;2730:13;2727:101;;;2816:1;2807:6;2802:3;2798:16;2791:27;2727:101;2576:258;2527:307;;;:::o;2840:320::-;2884:6;2921:1;2915:4;2911:12;2901:22;;2968:1;2962:4;2958:12;2989:18;2979:81;;3045:4;3037:6;3033:17;3023:27;;2979:81;3107:2;3099:6;3096:14;3076:18;3073:38;3070:84;;;3126:18;;:::i;:::-;3070:84;2891:269;2840:320;;;:::o;3166:281::-;3249:27;3271:4;3249:27;:::i;:::-;3241:6;3237:40;3379:6;3367:10;3364:22;3343:18;3331:10;3328:34;3325:62;3322:88;;;3390:18;;:::i;:::-;3322:88;3430:10;3426:2;3419:22;3209:238;3166:281;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;3639:180;3687:77;3684:1;3677:88;3784:4;3781:1;3774:15;3808:4;3805:1;3798:15;3825:117;3934:1;3931;3924:12;3948:117;4057:1;4054;4047:12;4071:117;4180:1;4177;4170:12;4194:117;4303:1;4300;4293:12;4317:102;4358:6;4409:2;4405:7;4400:2;4393:5;4389:14;4385:28;4375:38;;4317:102;;;:::o;559:17711:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1479": {
									"entryPoint": 5530,
									"id": 1479,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1635": {
									"entryPoint": 6025,
									"id": 1635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1460": {
									"entryPoint": 5522,
									"id": 1460,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burn_1286": {
									"entryPoint": 4937,
									"id": 1286,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1607": {
									"entryPoint": 5538,
									"id": 1607,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1542": {
									"entryPoint": 6147,
									"id": 1542,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1070": {
									"entryPoint": 3467,
									"id": 1070,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_341": {
									"entryPoint": 2654,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_958": {
									"entryPoint": 2662,
									"id": 958,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_823": {
									"entryPoint": 4266,
									"id": 823,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1441": {
									"entryPoint": 3901,
									"id": 1441,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_558": {
									"entryPoint": 1407,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_494": {
									"entryPoint": 624,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burn_706": {
									"entryPoint": 2179,
									"id": 706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_593": {
									"entryPoint": 1870,
									"id": 593,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": 6634,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_690": {
									"entryPoint": 1688,
									"id": 690,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@name_374": {
									"entryPoint": 1052,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_671": {
									"entryPoint": 1246,
									"id": 671,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_631": {
									"entryPoint": 2018,
									"id": 631,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_575": {
									"entryPoint": 1848,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1659": {
									"entryPoint": 2195,
									"id": 1659,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_444": {
									"entryPoint": 826,
									"id": 444,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_376": {
									"entryPoint": 1706,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_1938": {
									"entryPoint": 2301,
									"id": 1938,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_466": {
									"entryPoint": 1194,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9109,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9249,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9900,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 10563,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 10578,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 10679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 10801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 11085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 11134,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 11139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 11161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 11174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370": {
									"entryPoint": 11253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 11332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685": {
									"entryPoint": 11411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 11490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 11569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a": {
									"entryPoint": 11648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 11727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 11806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 11885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 11964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2": {
									"entryPoint": 12043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 12122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 12272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 12318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 12341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:40012:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:9"
															},
															"nodeType": "YulIf",
															"src": "350:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:9",
														"type": ""
													}
												],
												"src": "24:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:620:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "906:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "890:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "881:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "991:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1006:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1036:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1047:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1043:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1080:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1073:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1149:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1149:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1149:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1105:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1114:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1110:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1110:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:36:9"
															},
															"nodeType": "YulIf",
															"src": "1095:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1307:178:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1322:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1326:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1364:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1390:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1369:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1369:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1357:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1357:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1420:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1427:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1454:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1461:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1454:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1269:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1266:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1280:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1282:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1291:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1294:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1287:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1287:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1282:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1251:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1253:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1262:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1257:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1247:238:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "841:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "849:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "857:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "865:5:9",
														"type": ""
													}
												],
												"src": "769:722:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1656:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1615:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1599:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1590:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1687:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1703:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1718:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1714:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1707:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1770:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1749:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1754:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1763:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1742:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:25:9"
															},
															"nodeType": "YulIf",
															"src": "1739:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1884:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1860:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1860:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1553:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1558:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1566:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1574:5:9",
														"type": ""
													}
												],
												"src": "1497:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1984:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2040:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2013:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1943:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1951:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1959:5:9",
														"type": ""
													}
												],
												"src": "1913:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2203:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2180:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2188:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2176:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2195:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:35:9"
															},
															"nodeType": "YulIf",
															"src": "2162:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2297:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2336:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2412:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2420:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2435:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2345:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2336:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2146:5:9",
														"type": ""
													}
												],
												"src": "2075:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2594:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2596:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2596:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2569:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2569:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:35:9"
															},
															"nodeType": "YulIf",
															"src": "2555:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2686:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2700:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2690:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2729:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2805:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2801:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2738:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2729:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2523:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2531:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2539:5:9",
														"type": ""
													}
												],
												"src": "2468:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2903:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2925:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2912:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2903:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2965:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2941:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2871:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:9",
														"type": ""
													}
												],
												"src": "2844:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3044:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3053:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3044:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3082:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3012:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3028:5:9",
														"type": ""
													}
												],
												"src": "2983:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3207:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3207:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3255:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3229:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3166:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3174:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3182:5:9",
														"type": ""
													}
												],
												"src": "3126:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3347:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3396:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3398:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3398:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3383:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:35:9"
															},
															"nodeType": "YulIf",
															"src": "3357:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3488:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3515:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3502:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3492:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3531:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3591:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3599:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3587:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3606:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3614:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3540:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3531:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3325:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3333:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3341:5:9",
														"type": ""
													}
												],
												"src": "3286:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3701:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3692:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3730:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3660:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3668:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3676:5:9",
														"type": ""
													}
												],
												"src": "3630:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3858:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3904:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3906:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3906:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3879:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:32:9"
															},
															"nodeType": "YulIf",
															"src": "3868:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3997:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4012:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4016:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4041:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4076:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4087:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4072:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4072:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4096:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4051:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4051:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4041:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4124:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4139:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4143:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4204:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4215:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4200:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4224:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4179:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3820:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3831:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3843:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3851:6:9",
														"type": ""
													}
												],
												"src": "3775:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4495:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4497:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4469:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:33:9"
															},
															"nodeType": "YulIf",
															"src": "4458:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4588:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4603:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4617:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4607:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4632:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4667:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4678:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4663:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4663:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4687:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4642:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4632:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4715:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4730:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4734:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4760:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4795:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4806:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4791:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4770:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4760:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4843:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4858:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4889:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4900:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4885:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4885:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4872:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4862:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4951:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4953:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4953:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4953:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4920:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4920:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4917:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5048:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5108:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5119:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5104:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5104:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5128:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5058:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5048:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5156:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5171:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5202:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5213:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5198:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5198:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5185:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5185:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5175:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5264:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5266:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5266:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5266:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5233:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5233:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5230:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5361:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5421:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5432:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5417:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5441:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5371:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5371:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5361:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5469:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5484:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5515:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5526:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5511:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5511:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5498:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5488:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5578:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5580:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5580:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5580:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5550:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5558:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5544:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5675:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5719:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5730:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5715:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5739:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5685:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5675:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4386:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4397:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4417:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4425:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4433:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4441:6:9",
														"type": ""
													}
												],
												"src": "4255:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5962:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:9"
															},
															"nodeType": "YulIf",
															"src": "5923:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "6053:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6068:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6072:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6097:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6143:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6128:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6128:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6152:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6107:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6107:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6097:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6180:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6195:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6199:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6225:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6260:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6271:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6256:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6256:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6280:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6235:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6225:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6308:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6323:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6327:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6353:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6436:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6451:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6465:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6455:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6481:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6516:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6527:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6512:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6512:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6536:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6491:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6491:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6481:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6564:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6579:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6610:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6621:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6606:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6606:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6593:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6593:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6583:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6673:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6675:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6675:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6675:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6645:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6653:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6642:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6642:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "6639:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6770:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6814:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6825:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6810:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6780:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6780:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6770:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5851:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5862:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5874:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5890:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5898:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5906:6:9",
														"type": ""
													}
												],
												"src": "5770:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6945:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6991:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:32:9"
															},
															"nodeType": "YulIf",
															"src": "6955:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7084:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7128:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7211:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7256:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7288:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7299:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7284:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7284:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7266:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7266:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7256:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6907:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6918:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6930:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6938:6:9",
														"type": ""
													}
												],
												"src": "6865:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7468:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7470:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7439:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7464:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:32:9"
															},
															"nodeType": "YulIf",
															"src": "7432:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7561:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7576:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7580:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7605:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7640:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7651:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7636:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7636:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7660:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7615:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7605:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7688:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7733:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7768:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7779:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7764:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7764:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7788:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7743:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7733:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7384:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7395:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7407:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7415:6:9",
														"type": ""
													}
												],
												"src": "7339:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7919:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7965:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7967:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7967:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7967:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7940:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7949:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7936:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7936:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7961:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7932:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:32:9"
															},
															"nodeType": "YulIf",
															"src": "7929:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8058:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8073:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8087:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8077:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8137:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8133:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8112:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8185:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8200:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8214:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8265:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8261:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8240:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8230:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8313:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8328:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8342:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8332:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8358:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8393:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8404:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8389:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8389:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8413:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8368:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8368:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8358:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7873:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7884:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7896:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7904:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7912:6:9",
														"type": ""
													}
												],
												"src": "7819:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8570:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8617:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8619:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8619:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8619:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8591:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8600:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8587:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8612:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8583:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8583:33:9"
															},
															"nodeType": "YulIf",
															"src": "8580:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8710:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8725:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8739:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8729:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8754:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8789:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8800:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8785:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8785:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8809:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8764:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8764:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8754:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8837:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8852:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8866:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8856:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8882:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8917:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8928:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8913:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8913:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8937:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8892:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8882:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8965:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8980:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8994:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8984:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9010:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9045:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9056:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9041:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9041:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9065:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9020:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9010:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9093:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9108:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9139:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9150:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9135:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9135:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9122:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9122:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9112:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9201:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9203:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9203:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9203:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9173:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9181:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9170:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9170:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9167:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9298:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9342:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9353:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9338:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9338:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9362:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9308:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9308:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9298:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8516:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8527:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8539:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8547:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8555:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8563:6:9",
														"type": ""
													}
												],
												"src": "8444:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9526:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9572:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9574:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9574:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9574:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9547:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9556:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9543:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9543:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9568:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9539:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:32:9"
															},
															"nodeType": "YulIf",
															"src": "9536:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9665:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9680:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9711:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9722:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9707:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9707:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9694:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9694:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9684:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9772:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9774:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9774:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9774:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9744:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9752:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9741:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9741:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9738:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9869:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9929:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9940:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9925:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9925:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9949:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9879:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9879:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9869:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9977:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9992:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10023:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10034:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10019:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10019:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10006:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10006:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9996:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10085:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10087:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10087:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10087:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10057:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10065:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10054:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10054:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "10051:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10182:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10242:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10253:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10238:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10238:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10262:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10192:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10192:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10182:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9488:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9499:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9511:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9519:6:9",
														"type": ""
													}
												],
												"src": "9393:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10358:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10404:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10406:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10406:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10406:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10379:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10388:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10375:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10400:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10371:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10371:32:9"
															},
															"nodeType": "YulIf",
															"src": "10368:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "10497:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10512:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10526:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10516:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10541:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10575:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10586:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10571:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10571:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10595:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "10551:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10551:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10541:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10328:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10339:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10351:6:9",
														"type": ""
													}
												],
												"src": "10293:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10702:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10748:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10750:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10750:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10750:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10723:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10732:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10719:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10744:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10715:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10715:32:9"
															},
															"nodeType": "YulIf",
															"src": "10712:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "10841:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10856:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10870:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10860:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10885:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10930:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10941:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10926:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10926:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10950:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10895:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10895:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10885:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10672:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10683:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10695:6:9",
														"type": ""
													}
												],
												"src": "10626:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11093:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11095:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11095:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11095:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11068:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11077:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11064:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11064:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11089:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11060:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11060:32:9"
															},
															"nodeType": "YulIf",
															"src": "11057:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "11186:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11201:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11215:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11205:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11265:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11261:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11240:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11017:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11028:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11040:6:9",
														"type": ""
													}
												],
												"src": "10981:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11396:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11440:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11448:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11406:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11406:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11461:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11479:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11484:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11475:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11475:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "11461:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11369:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11377:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "11385:10:9",
														"type": ""
													}
												],
												"src": "11316:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11566:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11583:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11606:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11588:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11588:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11576:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11576:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11554:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11561:3:9",
														"type": ""
													}
												],
												"src": "11501:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11779:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11789:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11851:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11803:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11793:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11866:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11947:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11952:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11873:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11873:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11866:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11968:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12033:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11983:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11983:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "11972:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12048:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "12062:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12052:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12138:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12152:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12179:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12173:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12173:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "12156:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12199:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "12250:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12265:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "12206:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12206:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12199:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12282:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12345:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "12292:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12292:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12282:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12100:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12103:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12097:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12097:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12111:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12113:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12122:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12125:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12118:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12118:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12113:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12082:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12084:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12093:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "12088:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12078:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12371:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12378:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12371:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11758:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11765:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11774:3:9",
														"type": ""
													}
												],
												"src": "11655:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12452:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12469:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12489:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "12474:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12474:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12462:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12462:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12462:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12440:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12447:3:9",
														"type": ""
													}
												],
												"src": "12393:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12598:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12608:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12654:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12622:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12622:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12612:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12669:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12734:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12739:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12676:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12676:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12669:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12781:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12788:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12777:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12795:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12800:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12755:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12755:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12755:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12816:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12827:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12854:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12832:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12832:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12823:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12816:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12579:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12586:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12594:3:9",
														"type": ""
													}
												],
												"src": "12508:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12966:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12976:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13023:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12990:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12990:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12980:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13038:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13104:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13109:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13045:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13045:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13038:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13151:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13158:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13147:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13165:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13170:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13125:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13125:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13125:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13186:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13197:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13224:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13202:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13202:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13193:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13193:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13186:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12947:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12954:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12962:3:9",
														"type": ""
													}
												],
												"src": "12874:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13354:267:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13364:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13411:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13378:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13378:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13368:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13426:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13510:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13515:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13433:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13433:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13426:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13557:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13564:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13571:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13576:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13531:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13531:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13531:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13592:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13603:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13608:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13599:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13599:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13592:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13335:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13342:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13350:3:9",
														"type": ""
													}
												],
												"src": "13244:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13758:738:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13768:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13791:5:9"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "13785:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13785:12:9"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "13772:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13806:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "13846:9:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "13820:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13820:36:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13810:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13865:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13949:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13954:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13872:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13872:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13865:3:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14010:130:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "14063:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "14072:9:9"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "14087:4:9",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "14083:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14083:9:9"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "14068:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14068:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "14056:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14056:38:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14056:38:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "14107:23:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "14118:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14123:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14114:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14114:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "14107:3:9"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14003:137:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14008:1:9",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14156:334:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "14201:53:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "14248:5:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "14216:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14216:38:9"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "14205:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "14267:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14276:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "14271:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "14334:110:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "14363:3:9"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "14368:1:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "14359:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "14359:11:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "14378:7:9"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "14372:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "14372:14:9"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "14352:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14352:35:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "14352:35:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "14404:26:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "14419:7:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14428:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14415:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14415:15:9"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "14404:7:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14301:1:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14304:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "14298:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14298:13:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "14312:21:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "14314:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "14323:1:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14326:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14319:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14319:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14314:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "14294:3:9",
																					"statements": []
																				},
																				"src": "14290:154:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "14457:23:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "14468:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14473:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14464:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14464:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "14457:3:9"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14149:341:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14154:1:9",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "13981:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13992:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13977:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13977:17:9"
															},
															"nodeType": "YulSwitch",
															"src": "13970:520:9"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13739:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13746:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13754:3:9",
														"type": ""
													}
												],
												"src": "13651:845:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14648:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14658:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14724:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14729:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14665:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14658:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14830:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "14741:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14741:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14741:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14843:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14854:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14859:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14850:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14850:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14843:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14636:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14644:3:9",
														"type": ""
													}
												],
												"src": "14502:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15020:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15030:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15096:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15101:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15037:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15037:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15030:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15202:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																	"nodeType": "YulIdentifier",
																	"src": "15113:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15113:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15113:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15215:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15226:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15231:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15222:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15222:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15215:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15008:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15016:3:9",
														"type": ""
													}
												],
												"src": "14874:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15392:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15402:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15468:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15473:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15409:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15409:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15402:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15574:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "15485:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15485:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15485:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15587:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15598:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15603:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15594:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15594:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15587:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15380:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15388:3:9",
														"type": ""
													}
												],
												"src": "15246:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15764:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15774:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15840:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15845:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15781:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15781:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15774:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15946:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"nodeType": "YulIdentifier",
																	"src": "15857:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15857:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15857:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15959:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15970:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15975:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15966:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15966:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15959:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15752:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15760:3:9",
														"type": ""
													}
												],
												"src": "15618:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16136:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16146:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16212:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16217:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16153:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16153:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16146:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16318:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "16229:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16229:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16229:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16331:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16342:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16347:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16338:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16338:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16331:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16124:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16132:3:9",
														"type": ""
													}
												],
												"src": "15990:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16508:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16518:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16584:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16589:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16525:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16525:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16518:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16690:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "16601:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16601:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16601:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16703:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16714:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16719:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16710:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16710:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16703:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16496:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16504:3:9",
														"type": ""
													}
												],
												"src": "16362:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16880:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16890:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16956:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16961:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16897:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16897:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16890:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17062:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																	"nodeType": "YulIdentifier",
																	"src": "16973:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16973:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16973:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17075:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17086:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17091:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17082:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17082:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17075:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16868:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16876:3:9",
														"type": ""
													}
												],
												"src": "16734:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17252:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17262:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17328:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17333:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17269:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17269:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17262:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17434:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "17345:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17345:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17345:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17447:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17458:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17463:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17454:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17454:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17447:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17240:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17248:3:9",
														"type": ""
													}
												],
												"src": "17106:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17624:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17634:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17700:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17705:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17641:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17641:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17634:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17806:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "17717:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17717:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17717:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17819:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17830:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17835:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17826:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17819:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17612:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17620:3:9",
														"type": ""
													}
												],
												"src": "17478:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17996:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18006:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18072:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18077:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18013:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18013:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18006:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18178:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "18089:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18089:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18089:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18191:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18202:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18207:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18198:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18198:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18191:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17984:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17992:3:9",
														"type": ""
													}
												],
												"src": "17850:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18368:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18378:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18444:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18449:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18385:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18385:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18378:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18550:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "18461:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18461:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18461:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18563:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18574:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18579:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18570:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18570:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18563:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18356:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18364:3:9",
														"type": ""
													}
												],
												"src": "18222:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18740:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18750:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18816:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18821:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18757:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18757:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18750:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18922:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																	"nodeType": "YulIdentifier",
																	"src": "18833:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18833:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18833:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18935:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18946:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18951:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18942:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18942:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18935:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18728:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18736:3:9",
														"type": ""
													}
												],
												"src": "18594:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19021:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19038:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19061:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19043:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19043:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19031:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19031:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19031:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19009:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19016:3:9",
														"type": ""
													}
												],
												"src": "18966:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19145:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19162:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19185:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19167:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19167:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19155:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19155:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19133:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19140:3:9",
														"type": ""
													}
												],
												"src": "19080:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19385:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19396:99:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19482:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19491:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19403:78:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19403:92:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19396:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19505:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19594:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19603:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19512:81:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19512:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19505:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19617:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19624:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19617:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19356:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19362:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19370:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19381:3:9",
														"type": ""
													}
												],
												"src": "19204:429:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19967:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19977:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19989:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20000:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19985:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19985:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19977:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20058:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20071:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20082:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20067:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20067:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20014:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20014:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20014:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20139:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20152:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20163:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20148:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20148:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20095:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20095:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20095:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20188:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20199:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20184:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20208:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20214:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20204:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20204:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20177:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20177:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20177:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20234:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20336:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20345:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20242:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20242:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20234:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20371:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20382:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20367:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20391:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20397:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20387:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20387:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20360:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20360:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20417:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20519:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20528:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20425:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20425:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20417:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20554:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20565:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20550:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20550:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20575:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20581:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20571:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20543:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20543:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20543:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20601:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "20671:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20680:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20609:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20609:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20601:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19907:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19919:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19927:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19935:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19943:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19951:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19962:4:9",
														"type": ""
													}
												],
												"src": "19639:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20926:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20936:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20948:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20959:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20944:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20944:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20936:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21017:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21030:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21041:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21026:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20973:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20973:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20973:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21098:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21111:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21122:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21107:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21107:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21054:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21054:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21054:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21180:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21204:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21189:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21136:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21136:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21136:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21262:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21275:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21286:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21271:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21271:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21218:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21218:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21218:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21311:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21322:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21307:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21307:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21332:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21338:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21328:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21328:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21300:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21300:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21300:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21358:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "21428:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21437:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21366:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21366:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21358:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20866:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20878:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20886:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20894:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20902:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20910:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20921:4:9",
														"type": ""
													}
												],
												"src": "20698:751:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21603:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21613:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21625:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21636:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21621:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21621:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21613:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21660:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21671:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21656:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21656:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21679:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21685:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21675:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21675:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21649:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21649:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21649:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21705:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21807:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21816:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21713:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21713:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21705:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21575:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21587:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21598:4:9",
														"type": ""
													}
												],
												"src": "21455:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22060:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22070:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22082:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22093:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22078:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22070:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22117:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22128:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22113:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22113:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22136:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22142:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22132:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22132:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22106:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22106:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22106:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22162:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22264:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22273:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22170:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22170:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22162:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22299:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22310:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22295:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22295:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22319:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22325:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22315:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22315:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22288:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22288:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22288:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22345:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22447:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22456:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22353:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22353:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22345:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22024:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22036:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22044:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22055:4:9",
														"type": ""
													}
												],
												"src": "21834:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22566:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22576:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22588:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22599:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22584:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22576:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22650:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22663:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22674:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22659:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22612:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22612:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22612:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22538:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22550:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22561:4:9",
														"type": ""
													}
												],
												"src": "22474:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22808:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22818:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22830:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22826:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22818:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22865:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22876:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22861:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22861:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22884:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22890:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22880:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22880:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22854:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22854:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22854:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22910:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22982:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22991:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22918:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22918:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22910:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22780:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22792:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22803:4:9",
														"type": ""
													}
												],
												"src": "22690:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23180:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23190:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23202:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23213:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23198:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23198:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23190:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23237:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23248:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23233:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23256:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23262:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23252:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23252:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23226:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23226:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23282:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23416:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23290:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23290:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23282:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23160:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23175:4:9",
														"type": ""
													}
												],
												"src": "23009:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23605:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23615:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23627:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23638:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23623:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23623:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23615:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23662:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23673:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23658:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23658:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23681:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23687:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23677:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23677:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23651:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23651:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23651:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23707:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23841:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23715:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23715:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23707:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23585:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23600:4:9",
														"type": ""
													}
												],
												"src": "23434:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24030:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24040:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24052:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24063:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24048:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24048:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24040:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24087:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24098:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24083:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24083:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24106:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24112:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24102:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24102:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24076:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24076:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24076:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24132:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24266:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24140:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24140:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24132:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24010:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24025:4:9",
														"type": ""
													}
												],
												"src": "23859:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24455:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24465:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24477:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24488:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24473:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24473:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24465:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24512:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24523:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24508:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24508:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24531:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24537:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24527:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24501:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24501:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24501:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24557:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24691:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24565:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24565:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24557:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24435:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24450:4:9",
														"type": ""
													}
												],
												"src": "24284:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24880:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24890:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24902:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24913:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24898:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24890:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24937:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24948:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24933:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24933:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24956:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24952:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24926:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24926:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24982:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25116:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24990:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24990:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24982:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24860:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24875:4:9",
														"type": ""
													}
												],
												"src": "24709:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25305:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25315:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25327:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25338:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25323:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25323:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25315:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25362:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25373:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25358:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25381:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25387:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25377:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25377:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25351:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25351:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25351:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25407:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25541:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25415:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25415:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25407:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25285:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25300:4:9",
														"type": ""
													}
												],
												"src": "25134:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25730:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25740:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25752:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25763:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25748:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25748:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25740:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25787:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25798:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25783:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25783:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25806:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25812:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25802:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25802:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25776:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25776:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25832:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25966:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25840:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25840:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25832:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25710:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25725:4:9",
														"type": ""
													}
												],
												"src": "25559:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26155:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26165:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26177:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26188:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26173:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26173:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26165:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26212:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26223:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26208:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26231:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26237:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26227:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26227:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26201:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26201:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26201:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26257:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26391:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26265:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26265:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26257:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26135:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26150:4:9",
														"type": ""
													}
												],
												"src": "25984:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26580:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26590:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26602:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26613:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26598:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26598:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26590:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26637:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26648:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26633:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26633:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26656:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26662:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26652:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26626:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26626:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26626:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26682:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26816:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26690:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26690:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26682:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26560:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26575:4:9",
														"type": ""
													}
												],
												"src": "26409:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27005:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27015:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27027:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27038:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27023:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27023:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27015:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27062:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27073:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27058:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27058:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27081:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27087:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27077:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27051:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27051:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27051:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27107:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27241:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27115:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27115:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27107:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26985:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27000:4:9",
														"type": ""
													}
												],
												"src": "26834:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27430:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27440:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27452:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27463:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27448:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27448:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27440:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27487:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27498:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27483:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27483:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27506:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27512:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27502:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27502:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27476:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27476:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27476:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27532:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27666:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27540:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27540:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27532:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27410:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27425:4:9",
														"type": ""
													}
												],
												"src": "27259:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27855:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27865:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27877:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27888:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27873:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27873:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27865:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27912:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27923:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27908:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27931:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27937:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27927:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27927:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27901:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27901:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27957:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28091:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27965:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27965:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27957:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27835:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27850:4:9",
														"type": ""
													}
												],
												"src": "27684:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28207:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28217:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28229:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28240:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28225:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28225:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28217:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28297:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28310:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28321:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28306:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28306:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28253:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28253:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28253:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28179:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28191:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28202:4:9",
														"type": ""
													}
												],
												"src": "28109:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28463:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28473:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28485:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28496:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28481:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28481:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28473:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28553:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28566:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28577:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28562:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28509:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28509:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28509:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28634:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28647:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28658:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28643:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28590:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28590:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28590:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28427:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28439:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28447:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28458:4:9",
														"type": ""
													}
												],
												"src": "28337:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28716:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28726:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "28736:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28736:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "28726:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "28785:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "28793:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "28765:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28765:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28765:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "28700:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28709:6:9",
														"type": ""
													}
												],
												"src": "28675:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28850:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28860:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28876:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28870:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28870:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "28860:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28843:6:9",
														"type": ""
													}
												],
												"src": "28810:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28973:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29078:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "29080:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29080:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29080:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29050:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29058:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29047:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29047:30:9"
															},
															"nodeType": "YulIf",
															"src": "29044:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29110:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29122:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29130:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "29118:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29118:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "29110:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29172:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "29184:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29190:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29180:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29180:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "29172:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28957:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "28968:4:9",
														"type": ""
													}
												],
												"src": "28891:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29290:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29395:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "29397:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29397:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29397:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29367:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29375:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29364:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29364:30:9"
															},
															"nodeType": "YulIf",
															"src": "29361:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29427:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29439:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29447:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "29435:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29435:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "29427:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29489:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "29501:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29507:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29497:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29497:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "29489:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29274:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "29285:4:9",
														"type": ""
													}
												],
												"src": "29208:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29591:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29696:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "29698:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29698:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29698:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29668:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29676:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29665:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29665:30:9"
															},
															"nodeType": "YulIf",
															"src": "29662:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29728:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29758:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "29736:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29736:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "29728:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29802:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "29814:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29820:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29810:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29810:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "29802:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29575:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "29586:4:9",
														"type": ""
													}
												],
												"src": "29525:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29910:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29920:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "29928:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "29920:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29941:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "29953:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29958:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29949:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29949:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "29941:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "29897:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "29905:4:9",
														"type": ""
													}
												],
												"src": "29838:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30030:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30040:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "30048:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "30040:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30068:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "30071:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30061:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30061:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30061:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30084:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30102:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30105:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "30092:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30092:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "30084:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "30017:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "30025:4:9",
														"type": ""
													}
												],
												"src": "29976:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30197:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30208:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30224:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30218:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30218:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30208:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30180:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30190:6:9",
														"type": ""
													}
												],
												"src": "30123:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30301:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30312:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30328:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30322:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30322:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30312:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30284:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30294:6:9",
														"type": ""
													}
												],
												"src": "30243:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30406:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30417:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30433:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30427:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30427:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30417:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30389:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30399:6:9",
														"type": ""
													}
												],
												"src": "30347:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30527:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30537:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "30549:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30554:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30545:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30545:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "30537:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "30514:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "30522:4:9",
														"type": ""
													}
												],
												"src": "30452:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30682:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30699:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30704:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30692:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30692:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30692:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30720:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30739:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30744:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30735:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30735:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "30720:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30654:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30659:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "30670:11:9",
														"type": ""
													}
												],
												"src": "30571:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30856:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30873:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30878:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30866:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30866:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30866:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30894:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30913:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30918:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30909:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30909:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "30894:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30828:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30833:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "30844:11:9",
														"type": ""
													}
												],
												"src": "30761:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31031:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31048:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31053:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31041:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31041:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31041:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31069:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31088:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31093:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31084:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31084:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "31069:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31003:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31008:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "31019:11:9",
														"type": ""
													}
												],
												"src": "30935:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31224:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31234:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "31249:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "31234:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31196:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31201:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "31212:11:9",
														"type": ""
													}
												],
												"src": "31110:148:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31308:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31318:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31341:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31323:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31323:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "31318:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31352:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31375:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31357:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31357:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "31352:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31515:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "31517:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31517:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31517:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31436:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31443:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "31511:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31439:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31433:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31433:81:9"
															},
															"nodeType": "YulIf",
															"src": "31430:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31547:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31558:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31561:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31554:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31554:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "31547:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "31295:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "31298:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "31304:3:9",
														"type": ""
													}
												],
												"src": "31264:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31617:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31627:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31650:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31632:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31632:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "31627:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31661:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31684:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31666:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31666:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "31661:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31708:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "31710:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31710:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31710:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31705:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31698:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31698:9:9"
															},
															"nodeType": "YulIf",
															"src": "31695:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31740:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31749:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31752:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "31745:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31745:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "31740:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "31606:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "31609:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "31615:1:9",
														"type": ""
													}
												],
												"src": "31575:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31811:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31821:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31844:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31826:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31826:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "31821:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31855:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31878:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "31860:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31860:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "31855:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31902:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "31904:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31904:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31904:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31896:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31899:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "31893:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31893:8:9"
															},
															"nodeType": "YulIf",
															"src": "31890:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31934:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "31946:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "31949:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "31942:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31942:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "31934:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "31797:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "31800:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "31806:4:9",
														"type": ""
													}
												],
												"src": "31766:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32008:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32018:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32047:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "32029:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32029:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "32018:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31990:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "32000:7:9",
														"type": ""
													}
												],
												"src": "31963:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32107:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32117:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32142:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "32135:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32135:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "32128:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32128:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "32117:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32089:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "32099:7:9",
														"type": ""
													}
												],
												"src": "32065:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32205:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32215:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32230:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32237:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "32226:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32226:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "32215:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32187:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "32197:7:9",
														"type": ""
													}
												],
												"src": "32161:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32361:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32371:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32386:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32393:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "32382:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32382:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "32371:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32343:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "32353:7:9",
														"type": ""
													}
												],
												"src": "32316:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32493:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32503:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "32514:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "32503:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32475:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "32485:7:9",
														"type": ""
													}
												],
												"src": "32448:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32582:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "32605:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "32610:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32615:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "32592:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32592:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32592:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "32663:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "32668:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32659:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32659:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32677:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32652:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32652:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32652:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "32564:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "32569:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32574:6:9",
														"type": ""
													}
												],
												"src": "32531:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32740:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32750:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "32759:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "32754:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32819:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "32844:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "32849:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "32840:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32840:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "32863:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "32868:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "32859:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "32859:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "32853:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32853:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "32833:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32833:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32833:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "32780:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32783:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "32777:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32777:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "32791:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "32793:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "32802:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32805:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "32798:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32798:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "32793:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "32773:3:9",
																"statements": []
															},
															"src": "32769:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32916:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "32966:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "32971:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "32962:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32962:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32980:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "32955:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32955:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32955:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "32897:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32900:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32894:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32894:13:9"
															},
															"nodeType": "YulIf",
															"src": "32891:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "32722:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "32727:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32732:6:9",
														"type": ""
													}
												],
												"src": "32691:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33055:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33065:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "33079:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33085:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "33075:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33075:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "33065:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33096:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "33126:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33132:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "33122:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33122:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "33100:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33173:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "33187:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "33201:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33209:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "33197:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33197:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "33187:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "33153:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33146:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33146:26:9"
															},
															"nodeType": "YulIf",
															"src": "33143:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33276:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "33290:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33290:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33290:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "33240:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "33263:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33271:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "33260:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33260:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "33237:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33237:38:9"
															},
															"nodeType": "YulIf",
															"src": "33234:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "33039:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "33048:6:9",
														"type": ""
													}
												],
												"src": "33004:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33373:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33383:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "33405:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "33435:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "33413:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33413:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33401:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33401:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "33387:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33552:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "33554:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33554:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33554:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "33495:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33507:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "33492:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33492:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "33531:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "33543:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "33528:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33528:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "33489:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33489:62:9"
															},
															"nodeType": "YulIf",
															"src": "33486:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33590:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "33594:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33583:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33583:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "33359:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "33367:4:9",
														"type": ""
													}
												],
												"src": "33330:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33660:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33670:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33697:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33679:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33679:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "33670:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33793:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "33795:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33795:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33795:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33718:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33725:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "33715:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33715:77:9"
															},
															"nodeType": "YulIf",
															"src": "33712:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33824:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "33835:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33842:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33831:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33831:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "33824:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33646:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "33656:3:9",
														"type": ""
													}
												],
												"src": "33617:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33890:142:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33900:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "33923:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33905:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33905:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "33900:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "33934:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "33957:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33939:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33939:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "33934:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33981:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "33983:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33983:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33983:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "33978:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33971:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "33971:9:9"
															},
															"nodeType": "YulIf",
															"src": "33968:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "34012:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "34021:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "34024:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "34017:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34017:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "34012:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "33879:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "33882:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "33888:1:9",
														"type": ""
													}
												],
												"src": "33856:176:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34066:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34083:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34086:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34076:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34076:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34076:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34180:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34183:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34173:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34173:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34173:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34204:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34207:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "34197:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34197:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34197:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "34038:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34252:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34269:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34272:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34262:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34262:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34262:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34366:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34369:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34359:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34359:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34359:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34390:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34393:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "34383:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34383:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34383:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "34224:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34438:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34455:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34458:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34448:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34448:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34448:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34552:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34555:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34545:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34545:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34576:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34579:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "34569:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34569:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34569:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "34410:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34624:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34641:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34644:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34634:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34634:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34634:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34738:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34741:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34731:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34731:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34731:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34762:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34765:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "34755:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34755:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34755:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "34596:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34810:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34827:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34830:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34820:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34820:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34924:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34927:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "34917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34917:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34917:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34948:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34951:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "34941:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "34941:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34941:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "34782:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35007:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35044:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35073:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35076:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35079:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "35058:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35058:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35058:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "35094:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "35132:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "35126:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35126:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "35101:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35101:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "35094:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "35023:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35023:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35041:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "35020:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35020:23:9"
															},
															"nodeType": "YulIf",
															"src": "35017:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "35003:3:9",
														"type": ""
													}
												],
												"src": "34968:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35246:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35263:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35266:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "35256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35256:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35256:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "35157:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35369:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35386:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35389:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "35379:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35379:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35379:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "35280:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35492:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35509:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35512:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "35502:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35502:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35502:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "35403:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35615:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35632:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35635:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "35625:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35625:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35625:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "35526:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35738:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35755:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35758:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "35748:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35748:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35748:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "35649:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35820:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35830:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "35848:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35855:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "35844:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35844:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "35864:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "35860:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "35860:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "35840:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35840:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "35830:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35803:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "35813:6:9",
														"type": ""
													}
												],
												"src": "35772:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35933:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35943:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35968:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "35973:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "35964:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "35964:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "35943:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "35914:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "35924:8:9",
														"type": ""
													}
												],
												"src": "35880:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36098:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36120:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36128:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36116:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36116:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36132:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36109:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36109:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36109:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36188:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36196:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36184:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36201:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36177:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36177:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36177:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "36090:6:9",
														"type": ""
													}
												],
												"src": "35992:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36343:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36365:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36373:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36361:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36361:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36377:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36354:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36354:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36354:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36433:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36441:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36429:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36429:15:9"
																	},
																	{
																		"hexValue": "6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36446:17:9",
																		"type": "",
																		"value": "er nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36422:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36422:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36422:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "36335:6:9",
														"type": ""
													}
												],
												"src": "36237:234:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36583:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36605:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36613:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36601:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36617:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36594:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36594:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36594:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36673:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36681:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36669:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36669:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36686:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36662:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36662:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36662:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "36575:6:9",
														"type": ""
													}
												],
												"src": "36477:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36816:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36838:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36846:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36834:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36834:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36850:34:9",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36827:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36827:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36827:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "36906:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "36914:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "36902:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36902:15:9"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "36919:6:9",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36895:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "36895:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36895:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "36808:6:9",
														"type": ""
													}
												],
												"src": "36710:223:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37045:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37067:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37075:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37063:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37063:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37079:34:9",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37056:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37056:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37056:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37135:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37143:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37131:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37131:15:9"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37148:12:9",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37124:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37124:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37124:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "37037:6:9",
														"type": ""
													}
												],
												"src": "36939:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37280:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37302:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37310:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37298:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37298:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37314:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37291:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37291:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37291:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37370:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37378:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37366:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37366:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37383:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37359:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37359:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37359:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "37272:6:9",
														"type": ""
													}
												],
												"src": "37174:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37510:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37532:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37540:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37528:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37528:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37544:34:9",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37521:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37521:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37600:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37608:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37596:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37596:15:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37613:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37589:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37589:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37589:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "37502:6:9",
														"type": ""
													}
												],
												"src": "37404:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37738:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37760:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37768:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37756:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37756:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37772:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37749:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37749:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37749:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37828:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "37836:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37824:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37824:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "37841:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37817:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37817:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37817:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "37730:6:9",
														"type": ""
													}
												],
												"src": "37632:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "37973:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "37995:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38003:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "37991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "37991:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38007:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "37984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "37984:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "37984:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38063:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38071:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38059:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38059:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38076:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38052:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38052:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38052:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "37965:6:9",
														"type": ""
													}
												],
												"src": "37867:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38207:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38229:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38237:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38225:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38225:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38241:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38218:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38218:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38218:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38297:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38305:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38293:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38293:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38310:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38286:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38286:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38286:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "38199:6:9",
														"type": ""
													}
												],
												"src": "38101:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38441:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38463:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38471:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38459:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38459:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38475:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38452:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38452:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38452:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38531:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38539:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38527:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38527:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38544:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38520:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38520:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "38433:6:9",
														"type": ""
													}
												],
												"src": "38335:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38674:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38696:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38704:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38692:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38708:34:9",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38685:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38685:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "38764:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38772:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "38760:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38760:15:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "38777:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "38753:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38753:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38753:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "38666:6:9",
														"type": ""
													}
												],
												"src": "38568:220:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "38837:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "38877:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "38879:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "38853:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38853:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "38871:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "38850:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38850:26:9"
															},
															"nodeType": "YulIf",
															"src": "38847:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "38896:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "38908:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38908:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "38900:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "38952:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "38958:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "38965:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "38965:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "38983:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "38961:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "38961:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "38937:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "38937:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "38937:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "38996:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "39016:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "39010:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39010:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "39000:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39147:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "39161:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "39052:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "39060:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "39049:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39049:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "39100:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "39108:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "39096:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39096:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "39115:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39115:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "39093:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39093:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "39033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39033:113:9"
															},
															"nodeType": "YulIf",
															"src": "39030:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "39186:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "39201:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "39207:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "39197:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39197:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "39190:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "39223:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "39243:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "39237:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39237:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "39227:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39290:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "39292:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "39262:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "39270:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "39259:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39259:30:9"
															},
															"nodeType": "YulIf",
															"src": "39256:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "39309:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "39328:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "39333:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "39324:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39324:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "39340:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "39320:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39320:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "39313:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39404:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "39406:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "39362:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "39371:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "39381:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "39381:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "39399:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "39377:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39377:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "39367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39367:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "39359:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39359:44:9"
															},
															"nodeType": "YulIf",
															"src": "39356:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "39443:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "39453:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "39465:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "39471:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "39461:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39461:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "39449:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39449:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "39423:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39423:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "39423:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "39489:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "39496:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "39489:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "38833:3:9",
														"type": ""
													}
												],
												"src": "38794:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39554:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39611:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39620:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39623:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "39613:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "39613:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "39613:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "39577:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "39602:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "39584:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39584:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "39574:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39574:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "39567:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39567:43:9"
															},
															"nodeType": "YulIf",
															"src": "39564:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39547:5:9",
														"type": ""
													}
												],
												"src": "39511:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39679:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39733:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39742:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39745:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "39735:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "39735:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "39735:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "39702:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "39724:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "39709:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39709:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "39699:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39699:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "39692:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39692:40:9"
															},
															"nodeType": "YulIf",
															"src": "39689:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39672:5:9",
														"type": ""
													}
												],
												"src": "39639:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39803:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39859:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39868:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39871:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "39861:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "39861:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "39861:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "39826:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "39850:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "39833:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39833:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "39823:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39823:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "39816:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39816:42:9"
															},
															"nodeType": "YulIf",
															"src": "39813:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39796:5:9",
														"type": ""
													}
												],
												"src": "39761:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "39930:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "39987:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39996:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "39999:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "39989:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "39989:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "39989:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "39953:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "39978:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "39960:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "39960:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "39950:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "39950:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "39943:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "39943:43:9"
															},
															"nodeType": "YulIf",
															"src": "39940:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "39923:5:9",
														"type": ""
													}
												],
												"src": "39887:122:9"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er nor approved\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: burn amount exceeds bal\")\n\n        mstore(add(memPtr, 32), \"ance\")\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: burn from the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: mint to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b35760003560e01c8063731133e911610071578063731133e9146101b257806395d89b41146101ce578063a22cb465146101ec578063e985e9c514610208578063f242432a14610238578063f5298aca14610254576100b3565b8062fdd58e146100b857806301ffc9a7146100e857806306fdde03146101185780630e89341c146101365780632eb2c2d6146101665780634e1273f414610182575b600080fd5b6100d260048036038101906100cd9190611e08565b610270565b6040516100df9190612691565b60405180910390f35b61010260048036038101906100fd9190611f96565b61033a565b60405161010f91906124d4565b60405180910390f35b61012061041c565b60405161012d91906124ef565b60405180910390f35b610150600480360381019061014b9190611ff0565b6104aa565b60405161015d91906124ef565b60405180910390f35b610180600480360381019061017b9190611c62565b6104de565b005b61019c60048036038101906101979190611f1e565b61057f565b6040516101a9919061247b565b60405180910390f35b6101cc60048036038101906101c79190611e9b565b610698565b005b6101d66106aa565b6040516101e391906124ef565b60405180910390f35b61020660048036038101906102019190611dc8565b610738565b005b610222600480360381019061021d9190611c22565b61074e565b60405161022f91906124d4565b60405180910390f35b610252600480360381019061024d9190611d31565b6107e2565b005b61026e60048036038101906102699190611e48565b610883565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d890612591565b60405180910390fd5b6002600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040557507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610415575061041482610893565b5b9050919050565b6000805461042990612985565b80601f016020809104026020016040519081016040528092919081815260200182805461045590612985565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b505050505081565b606060046104b7836108fd565b6040516020016104c8929190612395565b6040516020818303038152906040529050919050565b6104e6610a5e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061052c575061052b85610526610a5e565b61074e565b5b61056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056290612531565b60405180910390fd5b6105788585858585610a66565b5050505050565b606081518351146105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90612631565b60405180910390fd5b6000835167ffffffffffffffff8111156105e2576105e1612b1e565b5b6040519080825280602002602001820160405280156106105781602001602082028036833780820191505090505b50905060005b845181101561068d5761065d85828151811061063557610634612aef565b5b60200260200101518583815181106106505761064f612aef565b5b6020026020010151610270565b8282815181106106705761066f612aef565b5b60200260200101818152505080610686906129e8565b9050610616565b508091505092915050565b6106a484848484610d8b565b50505050565b600180546106b790612985565b80601f01602080910402602001604051908101604052809291908181526020018280546106e390612985565b80156107305780601f1061070557610100808354040283529160200191610730565b820191906000526020600020905b81548152906001019060200180831161071357829003601f168201915b505050505081565b61074a610743610a5e565b8383610f3d565b5050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6107ea610a5e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610830575061082f8561082a610a5e565b61074e565b5b61086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690612531565b60405180910390fd5b61087c85858585856110aa565b5050505050565b61088e838383611349565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60606000821415610945576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610a59565b600082905060005b60008214610977578080610960906129e8565b915050600a82610970919061286a565b915061094d565b60008167ffffffffffffffff81111561099357610992612b1e565b5b6040519080825280601f01601f1916602001820160405280156109c55781602001600182028036833780820191505090505b5090505b60008514610a52576001826109de919061289b565b9150600a856109ed9190612a31565b60306109f99190612814565b60f81b818381518110610a0f57610a0e612aef565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610a4b919061286a565b94506109c9565b8093505050505b919050565b600033905090565b8151835114610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa190612651565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b11906125b1565b60405180910390fd5b6000610b24610a5e565b9050610b34818787878787611592565b60005b8451811015610ce8576000858281518110610b5557610b54612aef565b5b602002602001015190506000858381518110610b7457610b73612aef565b5b6020026020010151905060006002600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d906125f1565b60405180910390fd5b8181036002600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ccd9190612814565b9250508190555050505080610ce1906129e8565b9050610b37565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d5f92919061249d565b60405180910390a4610d7581878787878761159a565b610d838187878787876115a2565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290612671565b60405180910390fd5b6000610e05610a5e565b90506000610e1285611789565b90506000610e1f85611789565b9050610e3083600089858589611592565b846002600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e909190612814565b925050819055508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628989604051610f0e9291906126ac565b60405180910390a4610f258360008985858961159a565b610f3483600089898989611803565b50505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa390612611565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161109d91906124d4565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561111a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611111906125b1565b60405180910390fd5b6000611124610a5e565b9050600061113185611789565b9050600061113e85611789565b905061114e838989858589611592565b60006002600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050858110156111e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111dd906125f1565b60405180910390fd5b8581036002600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550856002600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461129d9190612814565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a60405161131a9291906126ac565b60405180910390a4611330848a8a86868a61159a565b61133e848a8a8a8a8a611803565b505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b0906125d1565b60405180910390fd5b60006113c3610a5e565b905060006113d084611789565b905060006113dd84611789565b90506113fd83876000858560405180602001604052806000815250611592565b60006002600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811015611495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148c90612571565b60405180910390fd5b8481036002600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516115639291906126ac565b60405180910390a46115898488600086866040518060200160405280600081525061159a565b50505050505050565b505050505050565b505050505050565b6115c18473ffffffffffffffffffffffffffffffffffffffff166119ea565b15611781578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016116079594939291906123b9565b602060405180830381600087803b15801561162157600080fd5b505af192505050801561165257506040513d601f19601f8201168201806040525081019061164f9190611fc3565b60015b6116f85761165e612b4d565b806308c379a014156116bb5750611673612f5a565b8061167e57506116bd565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b291906124ef565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ef90612511565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461177f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177690612551565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156117a8576117a7612b1e565b5b6040519080825280602002602001820160405280156117d65781602001602082028036833780820191505090505b50905082816000815181106117ee576117ed612aef565b5b60200260200101818152505080915050919050565b6118228473ffffffffffffffffffffffffffffffffffffffff166119ea565b156119e2578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611868959493929190612421565b602060405180830381600087803b15801561188257600080fd5b505af19250505080156118b357506040513d601f19601f820116820180604052508101906118b09190611fc3565b60015b611959576118bf612b4d565b806308c379a0141561191c57506118d4612f5a565b806118df575061191e565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191391906124ef565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195090612511565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d790612551565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000611a20611a1b846126fa565b6126d5565b90508083825260208201905082856020860282011115611a4357611a42612b74565b5b60005b85811015611a735781611a598882611b2f565b845260208401935060208301925050600181019050611a46565b5050509392505050565b6000611a90611a8b84612726565b6126d5565b90508083825260208201905082856020860282011115611ab357611ab2612b74565b5b60005b85811015611ae35781611ac98882611c0d565b845260208401935060208301925050600181019050611ab6565b5050509392505050565b6000611b00611afb84612752565b6126d5565b905082815260208101848484011115611b1c57611b1b612b79565b5b611b27848285612943565b509392505050565b600081359050611b3e81612ff0565b92915050565b600082601f830112611b5957611b58612b6f565b5b8135611b69848260208601611a0d565b91505092915050565b600082601f830112611b8757611b86612b6f565b5b8135611b97848260208601611a7d565b91505092915050565b600081359050611baf81613007565b92915050565b600081359050611bc48161301e565b92915050565b600081519050611bd98161301e565b92915050565b600082601f830112611bf457611bf3612b6f565b5b8135611c04848260208601611aed565b91505092915050565b600081359050611c1c81613035565b92915050565b60008060408385031215611c3957611c38612b83565b5b6000611c4785828601611b2f565b9250506020611c5885828601611b2f565b9150509250929050565b600080600080600060a08688031215611c7e57611c7d612b83565b5b6000611c8c88828901611b2f565b9550506020611c9d88828901611b2f565b945050604086013567ffffffffffffffff811115611cbe57611cbd612b7e565b5b611cca88828901611b72565b935050606086013567ffffffffffffffff811115611ceb57611cea612b7e565b5b611cf788828901611b72565b925050608086013567ffffffffffffffff811115611d1857611d17612b7e565b5b611d2488828901611bdf565b9150509295509295909350565b600080600080600060a08688031215611d4d57611d4c612b83565b5b6000611d5b88828901611b2f565b9550506020611d6c88828901611b2f565b9450506040611d7d88828901611c0d565b9350506060611d8e88828901611c0d565b925050608086013567ffffffffffffffff811115611daf57611dae612b7e565b5b611dbb88828901611bdf565b9150509295509295909350565b60008060408385031215611ddf57611dde612b83565b5b6000611ded85828601611b2f565b9250506020611dfe85828601611ba0565b9150509250929050565b60008060408385031215611e1f57611e1e612b83565b5b6000611e2d85828601611b2f565b9250506020611e3e85828601611c0d565b9150509250929050565b600080600060608486031215611e6157611e60612b83565b5b6000611e6f86828701611b2f565b9350506020611e8086828701611c0d565b9250506040611e9186828701611c0d565b9150509250925092565b60008060008060808587031215611eb557611eb4612b83565b5b6000611ec387828801611b2f565b9450506020611ed487828801611c0d565b9350506040611ee587828801611c0d565b925050606085013567ffffffffffffffff811115611f0657611f05612b7e565b5b611f1287828801611bdf565b91505092959194509250565b60008060408385031215611f3557611f34612b83565b5b600083013567ffffffffffffffff811115611f5357611f52612b7e565b5b611f5f85828601611b44565b925050602083013567ffffffffffffffff811115611f8057611f7f612b7e565b5b611f8c85828601611b72565b9150509250929050565b600060208284031215611fac57611fab612b83565b5b6000611fba84828501611bb5565b91505092915050565b600060208284031215611fd957611fd8612b83565b5b6000611fe784828501611bca565b91505092915050565b60006020828403121561200657612005612b83565b5b600061201484828501611c0d565b91505092915050565b60006120298383612377565b60208301905092915050565b61203e816128cf565b82525050565b600061204f826127a8565b61205981856127d6565b935061206483612783565b8060005b8381101561209557815161207c888261201d565b9750612087836127c9565b925050600181019050612068565b5085935050505092915050565b6120ab816128e1565b82525050565b60006120bc826127b3565b6120c681856127e7565b93506120d6818560208601612952565b6120df81612b88565b840191505092915050565b60006120f5826127be565b6120ff81856127f8565b935061210f818560208601612952565b61211881612b88565b840191505092915050565b600061212e826127be565b6121388185612809565b9350612148818560208601612952565b80840191505092915050565b6000815461216181612985565b61216b8186612809565b945060018216600081146121865760018114612197576121ca565b60ff198316865281860193506121ca565b6121a085612793565b60005b838110156121c2578154818901526001820191506020810190506121a3565b838801955050505b50505092915050565b60006121e06034836127f8565b91506121eb82612ba6565b604082019050919050565b6000612203602f836127f8565b915061220e82612bf5565b604082019050919050565b60006122266028836127f8565b915061223182612c44565b604082019050919050565b60006122496024836127f8565b915061225482612c93565b604082019050919050565b600061226c602a836127f8565b915061227782612ce2565b604082019050919050565b600061228f6025836127f8565b915061229a82612d31565b604082019050919050565b60006122b26023836127f8565b91506122bd82612d80565b604082019050919050565b60006122d5602a836127f8565b91506122e082612dcf565b604082019050919050565b60006122f86029836127f8565b915061230382612e1e565b604082019050919050565b600061231b6029836127f8565b915061232682612e6d565b604082019050919050565b600061233e6028836127f8565b915061234982612ebc565b604082019050919050565b60006123616021836127f8565b915061236c82612f0b565b604082019050919050565b61238081612939565b82525050565b61238f81612939565b82525050565b60006123a18285612154565b91506123ad8284612123565b91508190509392505050565b600060a0820190506123ce6000830188612035565b6123db6020830187612035565b81810360408301526123ed8186612044565b905081810360608301526124018185612044565b9050818103608083015261241581846120b1565b90509695505050505050565b600060a0820190506124366000830188612035565b6124436020830187612035565b6124506040830186612386565b61245d6060830185612386565b818103608083015261246f81846120b1565b90509695505050505050565b600060208201905081810360008301526124958184612044565b905092915050565b600060408201905081810360008301526124b78185612044565b905081810360208301526124cb8184612044565b90509392505050565b60006020820190506124e960008301846120a2565b92915050565b6000602082019050818103600083015261250981846120ea565b905092915050565b6000602082019050818103600083015261252a816121d3565b9050919050565b6000602082019050818103600083015261254a816121f6565b9050919050565b6000602082019050818103600083015261256a81612219565b9050919050565b6000602082019050818103600083015261258a8161223c565b9050919050565b600060208201905081810360008301526125aa8161225f565b9050919050565b600060208201905081810360008301526125ca81612282565b9050919050565b600060208201905081810360008301526125ea816122a5565b9050919050565b6000602082019050818103600083015261260a816122c8565b9050919050565b6000602082019050818103600083015261262a816122eb565b9050919050565b6000602082019050818103600083015261264a8161230e565b9050919050565b6000602082019050818103600083015261266a81612331565b9050919050565b6000602082019050818103600083015261268a81612354565b9050919050565b60006020820190506126a66000830184612386565b92915050565b60006040820190506126c16000830185612386565b6126ce6020830184612386565b9392505050565b60006126df6126f0565b90506126eb82826129b7565b919050565b6000604051905090565b600067ffffffffffffffff82111561271557612714612b1e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561274157612740612b1e565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561276d5761276c612b1e565b5b61277682612b88565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061281f82612939565b915061282a83612939565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561285f5761285e612a62565b5b828201905092915050565b600061287582612939565b915061288083612939565b9250826128905761288f612a91565b5b828204905092915050565b60006128a682612939565b91506128b183612939565b9250828210156128c4576128c3612a62565b5b828203905092915050565b60006128da82612919565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612970578082015181840152602081019050612955565b8381111561297f576000848401525b50505050565b6000600282049050600182168061299d57607f821691505b602082108114156129b1576129b0612ac0565b5b50919050565b6129c082612b88565b810181811067ffffffffffffffff821117156129df576129de612b1e565b5b80604052505050565b60006129f382612939565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a2657612a25612a62565b5b600182019050919050565b6000612a3c82612939565b9150612a4783612939565b925082612a5757612a56612a91565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d1115612b6c5760046000803e612b69600051612b99565b90505b90565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d1015612f6a57612fed565b612f726126f0565b60043d036004823e80513d602482011167ffffffffffffffff82111715612f9a575050612fed565b808201805167ffffffffffffffff811115612fb85750505050612fed565b80602083010160043d038501811115612fd5575050505050612fed565b612fe4826020018501866129b7565b82955050505050505b90565b612ff9816128cf565b811461300457600080fd5b50565b613010816128e1565b811461301b57600080fd5b50565b613027816128ed565b811461303257600080fd5b50565b61303e81612939565b811461304957600080fd5b5056fea2646970667358221220d6dd8c36bf90343f0f2efffb61736f4723baf1311bdd6bfa7e10e502843d563764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x254 JUMPI PUSH2 0xB3 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x182 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1C22 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x405 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x415 JUMPI POP PUSH2 0x414 DUP3 PUSH2 0x893 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x455 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH2 0x4B7 DUP4 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0xA5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH2 0x52B DUP6 PUSH2 0x526 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST JUMPDEST PUSH2 0x56B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x562 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x578 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA66 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E2 JUMPI PUSH2 0x5E1 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x610 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x68D JUMPI PUSH2 0x65D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x635 JUMPI PUSH2 0x634 PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x270 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x686 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x616 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD8B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x6B7 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E3 SWAP1 PUSH2 0x2985 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x730 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x705 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x730 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x713 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x74A PUSH2 0x743 PUSH2 0xA5E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7EA PUSH2 0xA5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x830 JUMPI POP PUSH2 0x82F DUP6 PUSH2 0x82A PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST JUMPDEST PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10AA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x88E DUP4 DUP4 DUP4 PUSH2 0x1349 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x977 JUMPI DUP1 DUP1 PUSH2 0x960 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x970 SWAP2 SWAP1 PUSH2 0x286A JUMP JUMPDEST SWAP2 POP PUSH2 0x94D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xA52 JUMPI PUSH1 0x1 DUP3 PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA0F JUMPI PUSH2 0xA0E PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xA4B SWAP2 SWAP1 PUSH2 0x286A JUMP JUMPDEST SWAP5 POP PUSH2 0x9C9 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x2651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB24 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH2 0xB34 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB55 JUMPI PUSH2 0xB54 PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB74 JUMPI PUSH2 0xB73 PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0D SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xCE1 SWAP1 PUSH2 0x29E8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB37 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD5F SWAP3 SWAP2 SWAP1 PUSH2 0x249D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xD75 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x159A JUMP JUMPDEST PUSH2 0xD83 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x15A2 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE05 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE1F DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH2 0xE30 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1592 JUMP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xF0E SWAP3 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF25 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x159A JUMP JUMPDEST PUSH2 0xF34 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1803 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA3 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1111 SWAP1 PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1124 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1131 DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x113E DUP6 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH2 0x114E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DD SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x131A SWAP3 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1330 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x133E DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1803 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B0 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C3 PUSH2 0xA5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13D0 DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13DD DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP1 POP PUSH2 0x13FD DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x1495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP2 SUB PUSH1 0x2 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x1563 SWAP3 SWAP2 SWAP1 PUSH2 0x26AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1589 DUP5 DUP9 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x159A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15C1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19EA JUMP JUMPDEST ISZERO PUSH2 0x1781 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1607 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1652 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16F8 JUMPI PUSH2 0x165E PUSH2 0x2B4D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x16BB JUMPI POP PUSH2 0x1673 PUSH2 0x2F5A JUMP JUMPDEST DUP1 PUSH2 0x167E JUMPI POP PUSH2 0x16BD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B2 SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EF SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x177F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1776 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A7 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x2AEF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19EA JUMP JUMPDEST ISZERO PUSH2 0x19E2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1868 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2421 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18B3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B0 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1959 JUMPI PUSH2 0x18BF PUSH2 0x2B4D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x191C JUMPI POP PUSH2 0x18D4 PUSH2 0x2F5A JUMP JUMPDEST DUP1 PUSH2 0x18DF JUMPI POP PUSH2 0x191E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1913 SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1950 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D7 SWAP1 PUSH2 0x2551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 PUSH2 0x1A1B DUP5 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x2B74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A73 JUMPI DUP2 PUSH2 0x1A59 DUP9 DUP3 PUSH2 0x1B2F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A46 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A90 PUSH2 0x1A8B DUP5 PUSH2 0x2726 JUMP JUMPDEST PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x2B74 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1AE3 JUMPI DUP2 PUSH2 0x1AC9 DUP9 DUP3 PUSH2 0x1C0D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AB6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B00 PUSH2 0x1AFB DUP5 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x26D5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x2B79 JUMP JUMPDEST JUMPDEST PUSH2 0x1B27 DUP5 DUP3 DUP6 PUSH2 0x2943 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3E DUP2 PUSH2 0x2FF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B59 JUMPI PUSH2 0x1B58 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B69 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B87 JUMPI PUSH2 0x1B86 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B97 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BAF DUP2 PUSH2 0x3007 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC4 DUP2 PUSH2 0x301E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BD9 DUP2 PUSH2 0x301E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C04 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C1C DUP2 PUSH2 0x3035 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C47 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C58 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8C DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C9D DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CBE JUMPI PUSH2 0x1CBD PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1CCA DUP9 DUP3 DUP10 ADD PUSH2 0x1B72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CEB JUMPI PUSH2 0x1CEA PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1CF7 DUP9 DUP3 DUP10 ADD PUSH2 0x1B72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D18 JUMPI PUSH2 0x1D17 PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1D24 DUP9 DUP3 DUP10 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D4D JUMPI PUSH2 0x1D4C PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5B DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D6C DUP9 DUP3 DUP10 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D7D DUP9 DUP3 DUP10 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D8E DUP9 DUP3 DUP10 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAE PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1DBB DUP9 DUP3 DUP10 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DED DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DFE DUP6 DUP3 DUP7 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1E PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E2D DUP6 DUP3 DUP7 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3E DUP6 DUP3 DUP7 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E61 JUMPI PUSH2 0x1E60 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E6F DUP7 DUP3 DUP8 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E80 DUP7 DUP3 DUP8 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E91 DUP7 DUP3 DUP8 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB5 JUMPI PUSH2 0x1EB4 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EC3 DUP8 DUP3 DUP9 ADD PUSH2 0x1B2F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED4 DUP8 DUP3 DUP9 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE5 DUP8 DUP3 DUP9 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1F12 DUP8 DUP3 DUP9 ADD PUSH2 0x1BDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F35 JUMPI PUSH2 0x1F34 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1F5F DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F80 JUMPI PUSH2 0x1F7F PUSH2 0x2B7E JUMP JUMPDEST JUMPDEST PUSH2 0x1F8C DUP6 DUP3 DUP7 ADD PUSH2 0x1B72 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP5 DUP3 DUP6 ADD PUSH2 0x1BB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD9 JUMPI PUSH2 0x1FD8 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE7 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2006 JUMPI PUSH2 0x2005 PUSH2 0x2B83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2014 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2029 DUP4 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203E DUP2 PUSH2 0x28CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204F DUP3 PUSH2 0x27A8 JUMP JUMPDEST PUSH2 0x2059 DUP2 DUP6 PUSH2 0x27D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2064 DUP4 PUSH2 0x2783 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2095 JUMPI DUP2 MLOAD PUSH2 0x207C DUP9 DUP3 PUSH2 0x201D JUMP JUMPDEST SWAP8 POP PUSH2 0x2087 DUP4 PUSH2 0x27C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2068 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20AB DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BC DUP3 PUSH2 0x27B3 JUMP JUMPDEST PUSH2 0x20C6 DUP2 DUP6 PUSH2 0x27E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x20D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2952 JUMP JUMPDEST PUSH2 0x20DF DUP2 PUSH2 0x2B88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F5 DUP3 PUSH2 0x27BE JUMP JUMPDEST PUSH2 0x20FF DUP2 DUP6 PUSH2 0x27F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x210F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2952 JUMP JUMPDEST PUSH2 0x2118 DUP2 PUSH2 0x2B88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212E DUP3 PUSH2 0x27BE JUMP JUMPDEST PUSH2 0x2138 DUP2 DUP6 PUSH2 0x2809 JUMP JUMPDEST SWAP4 POP PUSH2 0x2148 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2952 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2161 DUP2 PUSH2 0x2985 JUMP JUMPDEST PUSH2 0x216B DUP2 DUP7 PUSH2 0x2809 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2186 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2197 JUMPI PUSH2 0x21CA JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x21A0 DUP6 PUSH2 0x2793 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C2 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21A3 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E0 PUSH1 0x34 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EB DUP3 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2203 PUSH1 0x2F DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x220E DUP3 PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2226 PUSH1 0x28 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2231 DUP3 PUSH2 0x2C44 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2249 PUSH1 0x24 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2254 DUP3 PUSH2 0x2C93 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226C PUSH1 0x2A DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2277 DUP3 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228F PUSH1 0x25 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x229A DUP3 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B2 PUSH1 0x23 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22BD DUP3 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 PUSH1 0x2A DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 PUSH2 0x2DCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 PUSH1 0x29 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2303 DUP3 PUSH2 0x2E1E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B PUSH1 0x29 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2326 DUP3 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233E PUSH1 0x28 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2349 DUP3 PUSH2 0x2EBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2361 PUSH1 0x21 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x236C DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2380 DUP2 PUSH2 0x2939 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x238F DUP2 PUSH2 0x2939 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A1 DUP3 DUP6 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x23AD DUP3 DUP5 PUSH2 0x2123 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x23CE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x23DB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2035 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23ED DUP2 DUP7 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2401 DUP2 DUP6 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2415 DUP2 DUP5 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2436 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x2443 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x2450 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x245D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2386 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x246F DUP2 DUP5 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2495 DUP2 DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24B7 DUP2 DUP6 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24CB DUP2 DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252A DUP2 PUSH2 0x21D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x254A DUP2 PUSH2 0x21F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x256A DUP2 PUSH2 0x2219 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x258A DUP2 PUSH2 0x223C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25AA DUP2 PUSH2 0x225F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25CA DUP2 PUSH2 0x2282 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25EA DUP2 PUSH2 0x22A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x260A DUP2 PUSH2 0x22C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x262A DUP2 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264A DUP2 PUSH2 0x230E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x266A DUP2 PUSH2 0x2331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x268A DUP2 PUSH2 0x2354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2386 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2386 JUMP JUMPDEST PUSH2 0x26CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2386 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DF PUSH2 0x26F0 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EB DUP3 DUP3 PUSH2 0x29B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2740 PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x276D JUMPI PUSH2 0x276C PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST PUSH2 0x2776 DUP3 PUSH2 0x2B88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281F DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x282A DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x285F JUMPI PUSH2 0x285E PUSH2 0x2A62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2875 DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x2880 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2890 JUMPI PUSH2 0x288F PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A6 DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B1 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x28C4 JUMPI PUSH2 0x28C3 PUSH2 0x2A62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28DA DUP3 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2970 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2955 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x297F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x299D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x29B0 PUSH2 0x2AC0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C0 DUP3 PUSH2 0x2B88 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x29DF JUMPI PUSH2 0x29DE PUSH2 0x2B1E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F3 DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x2A62 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3C DUP3 PUSH2 0x2939 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A47 DUP4 PUSH2 0x2939 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A57 JUMPI PUSH2 0x2A56 PUSH2 0x2A91 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2B6C JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2B69 PUSH1 0x0 MLOAD PUSH2 0x2B99 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E636500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2F6A JUMPI PUSH2 0x2FED JUMP JUMPDEST PUSH2 0x2F72 PUSH2 0x26F0 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2F9A JUMPI POP POP PUSH2 0x2FED JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FB8 JUMPI POP POP POP POP PUSH2 0x2FED JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2FD5 JUMPI POP POP POP POP POP PUSH2 0x2FED JUMP JUMPDEST PUSH2 0x2FE4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x29B7 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2FF9 DUP2 PUSH2 0x28CF JUMP JUMPDEST DUP2 EQ PUSH2 0x3004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3010 DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x301B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3027 DUP2 PUSH2 0x28ED JUMP JUMPDEST DUP2 EQ PUSH2 0x3032 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x303E DUP2 PUSH2 0x2939 JUMP JUMPDEST DUP2 EQ PUSH2 0x3049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDD DUP13 CALLDATASIZE 0xBF SWAP1 CALLVALUE EXTCODEHASH 0xF 0x2E SELFDESTRUCT 0xFB PUSH2 0x736F SELFBALANCE 0x23 0xBA CALL BALANCE SHL 0xDD PUSH12 0xFA7E10E502843D563764736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "559:17711:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1393:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;665:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2114:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4365:439;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2817:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4812:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;690:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3414:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3641:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3881:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4989:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2421:230;2507:7;2554:1;2535:21;;:7;:21;;;;2527:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2621:9;:13;2631:2;2621:13;;;;;;;;;;;:22;2635:7;2621:22;;;;;;;;;;;;;;;;2614:29;;2421:230;;;;:::o;1393:310::-;1495:4;1547:26;1532:41;;;:11;:41;;;;:110;;;;1605:37;1590:52;;;:11;:52;;;;1532:110;:163;;;;1659:36;1683:11;1659:23;:36::i;:::-;1532:163;1512:183;;1393:310;;;:::o;665:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2114:156::-;2177:13;2234:4;2240:20;2257:2;2240:16;:20::i;:::-;2217:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2203:59;;2114:156;;;:::o;4365:439::-;4606:12;:10;:12::i;:::-;4598:20;;:4;:20;;;:60;;;;4622:36;4639:4;4645:12;:10;:12::i;:::-;4622:16;:36::i;:::-;4598:60;4576:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4744:52;4767:4;4773:2;4777:3;4782:7;4791:4;4744:22;:52::i;:::-;4365:439;;;;;:::o;2817:524::-;2973:16;3034:3;:10;3015:8;:15;:29;3007:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3103:30;3150:8;:15;3136:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3103:63;;3184:9;3179:122;3203:8;:15;3199:1;:19;3179:122;;;3259:30;3269:8;3278:1;3269:11;;;;;;;;:::i;:::-;;;;;;;;3282:3;3286:1;3282:6;;;;;;;;:::i;:::-;;;;;;;;3259:9;:30::i;:::-;3240:13;3254:1;3240:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;3220:3;;;;:::i;:::-;;;3179:122;;;;3320:13;3313:20;;;2817:524;;;;:::o;4812:169::-;4946:27;4952:2;4956;4960:6;4968:4;4946:5;:27::i;:::-;4812:169;;;;:::o;690:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3414:155::-;3509:52;3528:12;:10;:12::i;:::-;3542:8;3552;3509:18;:52::i;:::-;3414:155;;:::o;3641:168::-;3740:4;3764:18;:27;3783:7;3764:27;;;;;;;;;;;;;;;:37;3792:8;3764:37;;;;;;;;;;;;;;;;;;;;;;;;;3757:44;;3641:168;;;;:::o;3881:407::-;4097:12;:10;:12::i;:::-;4089:20;;:4;:20;;;:60;;;;4113:36;4130:4;4136:12;:10;:12::i;:::-;4113:16;:36::i;:::-;4089:60;4067:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4235:45;4253:4;4259:2;4263;4267:6;4275:4;4235:17;:45::i;:::-;3881:407;;;;;:::o;4989:135::-;5095:21;5101:2;5105;5109:6;5095:5;:21::i;:::-;4989:135;;;:::o;854:157:3:-;939:4;978:25;963:40;;;:11;:40;;;;956:47;;854:157;;;:::o;407:723:8:-;463:13;693:1;684:5;:10;680:53;;;711:10;;;;;;;;;;;;;;;;;;;;;680:53;743:12;758:5;743:20;;774:14;799:78;814:1;806:4;:9;799:78;;832:8;;;;;:::i;:::-;;;;863:2;855:10;;;;;:::i;:::-;;;799:78;;;887:19;919:6;909:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:39;;937:154;953:1;944:5;:10;937:154;;981:1;971:11;;;;;:::i;:::-;;;1048:2;1040:5;:10;;;;:::i;:::-;1027:2;:24;;;;:::i;:::-;1014:39;;997:6;1004;997:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1077:2;1068:11;;;;;:::i;:::-;;;937:154;;;1115:6;1101:21;;;;;407:723;;;;:::o;656:98:1:-;709:7;736:10;729:17;;656:98;:::o;6920:1146:2:-;7147:7;:14;7133:3;:10;:28;7125:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;7239:1;7225:16;;:2;:16;;;;7217:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7296:16;7315:12;:10;:12::i;:::-;7296:31;;7340:60;7361:8;7371:4;7377:2;7381:3;7386:7;7395:4;7340:20;:60::i;:::-;7418:9;7413:421;7437:3;:10;7433:1;:14;7413:421;;;7469:10;7482:3;7486:1;7482:6;;;;;;;;:::i;:::-;;;;;;;;7469:19;;7503:14;7520:7;7528:1;7520:10;;;;;;;;:::i;:::-;;;;;;;;7503:27;;7547:19;7569:9;:13;7579:2;7569:13;;;;;;;;;;;:19;7583:4;7569:19;;;;;;;;;;;;;;;;7547:41;;7626:6;7611:11;:21;;7603:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7759:6;7745:11;:20;7723:9;:13;7733:2;7723:13;;;;;;;;;;;:19;7737:4;7723:19;;;;;;;;;;;;;;;:42;;;;7816:6;7795:9;:13;7805:2;7795:13;;;;;;;;;;;:17;7809:2;7795:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;7454:380;;;7449:3;;;;:::i;:::-;;;7413:421;;;;7881:2;7851:47;;7875:4;7851:47;;7865:8;7851:47;;;7885:3;7890:7;7851:47;;;;;;;:::i;:::-;;;;;;;;7911:59;7931:8;7941:4;7947:2;7951:3;7956:7;7965:4;7911:19;:59::i;:::-;7983:75;8019:8;8029:4;8035:2;8039:3;8044:7;8053:4;7983:35;:75::i;:::-;7114:952;6920:1146;;;;;:::o;9390:729::-;9557:1;9543:16;;:2;:16;;;;9535:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;9610:16;9629:12;:10;:12::i;:::-;9610:31;;9652:20;9675:21;9693:2;9675:17;:21::i;:::-;9652:44;;9707:24;9734:25;9752:6;9734:17;:25::i;:::-;9707:52;;9772:66;9793:8;9811:1;9815:2;9819:3;9824:7;9833:4;9772:20;:66::i;:::-;9872:6;9851:9;:13;9861:2;9851:13;;;;;;;;;;;:17;9865:2;9851:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;9931:2;9894:52;;9927:1;9894:52;;9909:8;9894:52;;;9935:2;9939:6;9894:52;;;;;;;:::i;:::-;;;;;;;;9959:65;9979:8;9997:1;10001:2;10005:3;10010:7;10019:4;9959:19;:65::i;:::-;10037:74;10068:8;10086:1;10090:2;10094;10098:6;10106:4;10037:30;:74::i;:::-;9524:595;;;9390:729;;;;:::o;13803:331::-;13958:8;13949:17;;:5;:17;;;;13941:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;14061:8;14023:18;:25;14042:5;14023:25;;;;;;;;;;;;;;;:35;14049:8;14023:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;14107:8;14085:41;;14100:5;14085:41;;;14117:8;14085:41;;;;;;:::i;:::-;;;;;;;;13803:331;;;:::o;5588:974::-;5790:1;5776:16;;:2;:16;;;;5768:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5847:16;5866:12;:10;:12::i;:::-;5847:31;;5889:20;5912:21;5930:2;5912:17;:21::i;:::-;5889:44;;5944:24;5971:25;5989:6;5971:17;:25::i;:::-;5944:52;;6009:60;6030:8;6040:4;6046:2;6050:3;6055:7;6064:4;6009:20;:60::i;:::-;6082:19;6104:9;:13;6114:2;6104:13;;;;;;;;;;;:19;6118:4;6104:19;;;;;;;;;;;;;;;;6082:41;;6157:6;6142:11;:21;;6134:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6282:6;6268:11;:20;6246:9;:13;6256:2;6246:13;;;;;;;;;;;:19;6260:4;6246:19;;;;;;;;;;;;;;;:42;;;;6331:6;6310:9;:13;6320:2;6310:13;;;;;;;;;;;:17;6324:2;6310:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6386:2;6355:46;;6380:4;6355:46;;6370:8;6355:46;;;6390:2;6394:6;6355:46;;;;;;;:::i;:::-;;;;;;;;6414:59;6434:8;6444:4;6450:2;6454:3;6459:7;6468:4;6414:19;:59::i;:::-;6486:68;6517:8;6527:4;6533:2;6537;6541:6;6549:4;6486:30;:68::i;:::-;5757:805;;;;5588:974;;;;;:::o;11633:808::-;11776:1;11760:18;;:4;:18;;;;11752:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;11831:16;11850:12;:10;:12::i;:::-;11831:31;;11873:20;11896:21;11914:2;11896:17;:21::i;:::-;11873:44;;11928:24;11955:25;11973:6;11955:17;:25::i;:::-;11928:52;;11993:66;12014:8;12024:4;12038:1;12042:3;12047:7;11993:66;;;;;;;;;;;;:20;:66::i;:::-;12072:19;12094:9;:13;12104:2;12094:13;;;;;;;;;;;:19;12108:4;12094:19;;;;;;;;;;;;;;;;12072:41;;12147:6;12132:11;:21;;12124:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;12266:6;12252:11;:20;12230:9;:13;12240:2;12230:13;;;;;;;;;;;:19;12244:4;12230:19;;;;;;;;;;;;;;;:42;;;;12340:1;12301:54;;12326:4;12301:54;;12316:8;12301:54;;;12344:2;12348:6;12301:54;;;;;;;:::i;:::-;;;;;;;;12368:65;12388:8;12398:4;12412:1;12416:3;12421:7;12368:65;;;;;;;;;;;;:19;:65::i;:::-;11741:700;;;;11633:808;;;:::o;15092:221::-;;;;;;;:::o;16268:220::-;;;;;;;:::o;17248:813::-;17488:15;:2;:13;;;:15::i;:::-;17484:570;;;17541:2;17524:43;;;17568:8;17578:4;17584:3;17589:7;17598:4;17524:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17520:523;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17916:6;17909:14;;;;;;;;;;;:::i;:::-;;;;;;;;17520:523;;;17965:62;;;;;;;;;;:::i;:::-;;;;;;;;17520:523;17697:48;;;17685:60;;;:8;:60;;;;17681:159;;17770:50;;;;;;;;;;:::i;:::-;;;;;;;;17681:159;17604:251;17484:570;17248:813;;;;;;:::o;18069:198::-;18135:16;18164:22;18203:1;18189:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18164:41;;18227:7;18216:5;18222:1;18216:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;18254:5;18247:12;;;18069:198;;;:::o;16496:744::-;16711:15;:2;:13;;;:15::i;:::-;16707:526;;;16764:2;16747:38;;;16786:8;16796:4;16802:2;16806:6;16814:4;16747:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16743:479;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17095:6;17088:14;;;;;;;;;;;:::i;:::-;;;;;;;;16743:479;;;17144:62;;;;;;;;;;:::i;:::-;;;;;;;;16743:479;16881:43;;;16869:55;;;:8;:55;;;;16865:154;;16949:50;;;;;;;;;;:::i;:::-;;;;;;;;16865:154;16820:214;16707:526;16496:744;;;;;;:::o;1210:326:0:-;1270:4;1527:1;1505:7;:19;;;:23;1498:30;;1210:326;;;:::o;24:722:9:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;769:::-;865:5;890:81;906:64;963:6;906:64;:::i;:::-;890:81;:::i;:::-;881:90;;991:5;1020:6;1013:5;1006:21;1054:4;1047:5;1043:16;1036:23;;1080:6;1130:3;1122:4;1114:6;1110:17;1105:3;1101:27;1098:36;1095:143;;;1149:79;;:::i;:::-;1095:143;1262:1;1247:238;1272:6;1269:1;1266:13;1247:238;;;1340:3;1369:37;1402:3;1390:10;1369:37;:::i;:::-;1364:3;1357:50;1436:4;1431:3;1427:14;1420:21;;1470:4;1465:3;1461:14;1454:21;;1307:178;1294:1;1291;1287:9;1282:14;;1247:238;;;1251:14;871:620;;769:722;;;;;:::o;1497:410::-;1574:5;1599:65;1615:48;1656:6;1615:48;:::i;:::-;1599:65;:::i;:::-;1590:74;;1687:6;1680:5;1673:21;1725:4;1718:5;1714:16;1763:3;1754:6;1749:3;1745:16;1742:25;1739:112;;;1770:79;;:::i;:::-;1739:112;1860:41;1894:6;1889:3;1884;1860:41;:::i;:::-;1580:327;1497:410;;;;;:::o;1913:139::-;1959:5;1997:6;1984:20;1975:29;;2013:33;2040:5;2013:33;:::i;:::-;1913:139;;;;:::o;2075:370::-;2146:5;2195:3;2188:4;2180:6;2176:17;2172:27;2162:122;;2203:79;;:::i;:::-;2162:122;2320:6;2307:20;2345:94;2435:3;2427:6;2420:4;2412:6;2408:17;2345:94;:::i;:::-;2336:103;;2152:293;2075:370;;;;:::o;2468:::-;2539:5;2588:3;2581:4;2573:6;2569:17;2565:27;2555:122;;2596:79;;:::i;:::-;2555:122;2713:6;2700:20;2738:94;2828:3;2820:6;2813:4;2805:6;2801:17;2738:94;:::i;:::-;2729:103;;2545:293;2468:370;;;;:::o;2844:133::-;2887:5;2925:6;2912:20;2903:29;;2941:30;2965:5;2941:30;:::i;:::-;2844:133;;;;:::o;2983:137::-;3028:5;3066:6;3053:20;3044:29;;3082:32;3108:5;3082:32;:::i;:::-;2983:137;;;;:::o;3126:141::-;3182:5;3213:6;3207:13;3198:22;;3229:32;3255:5;3229:32;:::i;:::-;3126:141;;;;:::o;3286:338::-;3341:5;3390:3;3383:4;3375:6;3371:17;3367:27;3357:122;;3398:79;;:::i;:::-;3357:122;3515:6;3502:20;3540:78;3614:3;3606:6;3599:4;3591:6;3587:17;3540:78;:::i;:::-;3531:87;;3347:277;3286:338;;;;:::o;3630:139::-;3676:5;3714:6;3701:20;3692:29;;3730:33;3757:5;3730:33;:::i;:::-;3630:139;;;;:::o;3775:474::-;3843:6;3851;3900:2;3888:9;3879:7;3875:23;3871:32;3868:119;;;3906:79;;:::i;:::-;3868:119;4026:1;4051:53;4096:7;4087:6;4076:9;4072:22;4051:53;:::i;:::-;4041:63;;3997:117;4153:2;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4124:118;3775:474;;;;;:::o;4255:1509::-;4409:6;4417;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4900:2;4889:9;4885:18;4872:32;4931:18;4923:6;4920:30;4917:117;;;4953:79;;:::i;:::-;4917:117;5058:78;5128:7;5119:6;5108:9;5104:22;5058:78;:::i;:::-;5048:88;;4843:303;5213:2;5202:9;5198:18;5185:32;5244:18;5236:6;5233:30;5230:117;;;5266:79;;:::i;:::-;5230:117;5371:78;5441:7;5432:6;5421:9;5417:22;5371:78;:::i;:::-;5361:88;;5156:303;5526:3;5515:9;5511:19;5498:33;5558:18;5550:6;5547:30;5544:117;;;5580:79;;:::i;:::-;5544:117;5685:62;5739:7;5730:6;5719:9;5715:22;5685:62;:::i;:::-;5675:72;;5469:288;4255:1509;;;;;;;;:::o;5770:1089::-;5874:6;5882;5890;5898;5906;5955:3;5943:9;5934:7;5930:23;5926:33;5923:120;;;5962:79;;:::i;:::-;5923:120;6082:1;6107:53;6152:7;6143:6;6132:9;6128:22;6107:53;:::i;:::-;6097:63;;6053:117;6209:2;6235:53;6280:7;6271:6;6260:9;6256:22;6235:53;:::i;:::-;6225:63;;6180:118;6337:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6308:118;6465:2;6491:53;6536:7;6527:6;6516:9;6512:22;6491:53;:::i;:::-;6481:63;;6436:118;6621:3;6610:9;6606:19;6593:33;6653:18;6645:6;6642:30;6639:117;;;6675:79;;:::i;:::-;6639:117;6780:62;6834:7;6825:6;6814:9;6810:22;6780:62;:::i;:::-;6770:72;;6564:288;5770:1089;;;;;;;;:::o;6865:468::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7240:2;7266:50;7308:7;7299:6;7288:9;7284:22;7266:50;:::i;:::-;7256:60;;7211:115;6865:468;;;;;:::o;7339:474::-;7407:6;7415;7464:2;7452:9;7443:7;7439:23;7435:32;7432:119;;;7470:79;;:::i;:::-;7432:119;7590:1;7615:53;7660:7;7651:6;7640:9;7636:22;7615:53;:::i;:::-;7605:63;;7561:117;7717:2;7743:53;7788:7;7779:6;7768:9;7764:22;7743:53;:::i;:::-;7733:63;;7688:118;7339:474;;;;;:::o;7819:619::-;7896:6;7904;7912;7961:2;7949:9;7940:7;7936:23;7932:32;7929:119;;;7967:79;;:::i;:::-;7929:119;8087:1;8112:53;8157:7;8148:6;8137:9;8133:22;8112:53;:::i;:::-;8102:63;;8058:117;8214:2;8240:53;8285:7;8276:6;8265:9;8261:22;8240:53;:::i;:::-;8230:63;;8185:118;8342:2;8368:53;8413:7;8404:6;8393:9;8389:22;8368:53;:::i;:::-;8358:63;;8313:118;7819:619;;;;;:::o;8444:943::-;8539:6;8547;8555;8563;8612:3;8600:9;8591:7;8587:23;8583:33;8580:120;;;8619:79;;:::i;:::-;8580:120;8739:1;8764:53;8809:7;8800:6;8789:9;8785:22;8764:53;:::i;:::-;8754:63;;8710:117;8866:2;8892:53;8937:7;8928:6;8917:9;8913:22;8892:53;:::i;:::-;8882:63;;8837:118;8994:2;9020:53;9065:7;9056:6;9045:9;9041:22;9020:53;:::i;:::-;9010:63;;8965:118;9150:2;9139:9;9135:18;9122:32;9181:18;9173:6;9170:30;9167:117;;;9203:79;;:::i;:::-;9167:117;9308:62;9362:7;9353:6;9342:9;9338:22;9308:62;:::i;:::-;9298:72;;9093:287;8444:943;;;;;;;:::o;9393:894::-;9511:6;9519;9568:2;9556:9;9547:7;9543:23;9539:32;9536:119;;;9574:79;;:::i;:::-;9536:119;9722:1;9711:9;9707:17;9694:31;9752:18;9744:6;9741:30;9738:117;;;9774:79;;:::i;:::-;9738:117;9879:78;9949:7;9940:6;9929:9;9925:22;9879:78;:::i;:::-;9869:88;;9665:302;10034:2;10023:9;10019:18;10006:32;10065:18;10057:6;10054:30;10051:117;;;10087:79;;:::i;:::-;10051:117;10192:78;10262:7;10253:6;10242:9;10238:22;10192:78;:::i;:::-;10182:88;;9977:303;9393:894;;;;;:::o;10293:327::-;10351:6;10400:2;10388:9;10379:7;10375:23;10371:32;10368:119;;;10406:79;;:::i;:::-;10368:119;10526:1;10551:52;10595:7;10586:6;10575:9;10571:22;10551:52;:::i;:::-;10541:62;;10497:116;10293:327;;;;:::o;10626:349::-;10695:6;10744:2;10732:9;10723:7;10719:23;10715:32;10712:119;;;10750:79;;:::i;:::-;10712:119;10870:1;10895:63;10950:7;10941:6;10930:9;10926:22;10895:63;:::i;:::-;10885:73;;10841:127;10626:349;;;;:::o;10981:329::-;11040:6;11089:2;11077:9;11068:7;11064:23;11060:32;11057:119;;;11095:79;;:::i;:::-;11057:119;11215:1;11240:53;11285:7;11276:6;11265:9;11261:22;11240:53;:::i;:::-;11230:63;;11186:117;10981:329;;;;:::o;11316:179::-;11385:10;11406:46;11448:3;11440:6;11406:46;:::i;:::-;11484:4;11479:3;11475:14;11461:28;;11316:179;;;;:::o;11501:118::-;11588:24;11606:5;11588:24;:::i;:::-;11583:3;11576:37;11501:118;;:::o;11655:732::-;11774:3;11803:54;11851:5;11803:54;:::i;:::-;11873:86;11952:6;11947:3;11873:86;:::i;:::-;11866:93;;11983:56;12033:5;11983:56;:::i;:::-;12062:7;12093:1;12078:284;12103:6;12100:1;12097:13;12078:284;;;12179:6;12173:13;12206:63;12265:3;12250:13;12206:63;:::i;:::-;12199:70;;12292:60;12345:6;12292:60;:::i;:::-;12282:70;;12138:224;12125:1;12122;12118:9;12113:14;;12078:284;;;12082:14;12378:3;12371:10;;11779:608;;;11655:732;;;;:::o;12393:109::-;12474:21;12489:5;12474:21;:::i;:::-;12469:3;12462:34;12393:109;;:::o;12508:360::-;12594:3;12622:38;12654:5;12622:38;:::i;:::-;12676:70;12739:6;12734:3;12676:70;:::i;:::-;12669:77;;12755:52;12800:6;12795:3;12788:4;12781:5;12777:16;12755:52;:::i;:::-;12832:29;12854:6;12832:29;:::i;:::-;12827:3;12823:39;12816:46;;12598:270;12508:360;;;;:::o;12874:364::-;12962:3;12990:39;13023:5;12990:39;:::i;:::-;13045:71;13109:6;13104:3;13045:71;:::i;:::-;13038:78;;13125:52;13170:6;13165:3;13158:4;13151:5;13147:16;13125:52;:::i;:::-;13202:29;13224:6;13202:29;:::i;:::-;13197:3;13193:39;13186:46;;12966:272;12874:364;;;;:::o;13244:377::-;13350:3;13378:39;13411:5;13378:39;:::i;:::-;13433:89;13515:6;13510:3;13433:89;:::i;:::-;13426:96;;13531:52;13576:6;13571:3;13564:4;13557:5;13553:16;13531:52;:::i;:::-;13608:6;13603:3;13599:16;13592:23;;13354:267;13244:377;;;;:::o;13651:845::-;13754:3;13791:5;13785:12;13820:36;13846:9;13820:36;:::i;:::-;13872:89;13954:6;13949:3;13872:89;:::i;:::-;13865:96;;13992:1;13981:9;13977:17;14008:1;14003:137;;;;14154:1;14149:341;;;;13970:520;;14003:137;14087:4;14083:9;14072;14068:25;14063:3;14056:38;14123:6;14118:3;14114:16;14107:23;;14003:137;;14149:341;14216:38;14248:5;14216:38;:::i;:::-;14276:1;14290:154;14304:6;14301:1;14298:13;14290:154;;;14378:7;14372:14;14368:1;14363:3;14359:11;14352:35;14428:1;14419:7;14415:15;14404:26;;14326:4;14323:1;14319:12;14314:17;;14290:154;;;14473:6;14468:3;14464:16;14457:23;;14156:334;;13970:520;;13758:738;;13651:845;;;;:::o;14502:366::-;14644:3;14665:67;14729:2;14724:3;14665:67;:::i;:::-;14658:74;;14741:93;14830:3;14741:93;:::i;:::-;14859:2;14854:3;14850:12;14843:19;;14502:366;;;:::o;14874:::-;15016:3;15037:67;15101:2;15096:3;15037:67;:::i;:::-;15030:74;;15113:93;15202:3;15113:93;:::i;:::-;15231:2;15226:3;15222:12;15215:19;;14874:366;;;:::o;15246:::-;15388:3;15409:67;15473:2;15468:3;15409:67;:::i;:::-;15402:74;;15485:93;15574:3;15485:93;:::i;:::-;15603:2;15598:3;15594:12;15587:19;;15246:366;;;:::o;15618:::-;15760:3;15781:67;15845:2;15840:3;15781:67;:::i;:::-;15774:74;;15857:93;15946:3;15857:93;:::i;:::-;15975:2;15970:3;15966:12;15959:19;;15618:366;;;:::o;15990:::-;16132:3;16153:67;16217:2;16212:3;16153:67;:::i;:::-;16146:74;;16229:93;16318:3;16229:93;:::i;:::-;16347:2;16342:3;16338:12;16331:19;;15990:366;;;:::o;16362:::-;16504:3;16525:67;16589:2;16584:3;16525:67;:::i;:::-;16518:74;;16601:93;16690:3;16601:93;:::i;:::-;16719:2;16714:3;16710:12;16703:19;;16362:366;;;:::o;16734:::-;16876:3;16897:67;16961:2;16956:3;16897:67;:::i;:::-;16890:74;;16973:93;17062:3;16973:93;:::i;:::-;17091:2;17086:3;17082:12;17075:19;;16734:366;;;:::o;17106:::-;17248:3;17269:67;17333:2;17328:3;17269:67;:::i;:::-;17262:74;;17345:93;17434:3;17345:93;:::i;:::-;17463:2;17458:3;17454:12;17447:19;;17106:366;;;:::o;17478:::-;17620:3;17641:67;17705:2;17700:3;17641:67;:::i;:::-;17634:74;;17717:93;17806:3;17717:93;:::i;:::-;17835:2;17830:3;17826:12;17819:19;;17478:366;;;:::o;17850:::-;17992:3;18013:67;18077:2;18072:3;18013:67;:::i;:::-;18006:74;;18089:93;18178:3;18089:93;:::i;:::-;18207:2;18202:3;18198:12;18191:19;;17850:366;;;:::o;18222:::-;18364:3;18385:67;18449:2;18444:3;18385:67;:::i;:::-;18378:74;;18461:93;18550:3;18461:93;:::i;:::-;18579:2;18574:3;18570:12;18563:19;;18222:366;;;:::o;18594:::-;18736:3;18757:67;18821:2;18816:3;18757:67;:::i;:::-;18750:74;;18833:93;18922:3;18833:93;:::i;:::-;18951:2;18946:3;18942:12;18935:19;;18594:366;;;:::o;18966:108::-;19043:24;19061:5;19043:24;:::i;:::-;19038:3;19031:37;18966:108;;:::o;19080:118::-;19167:24;19185:5;19167:24;:::i;:::-;19162:3;19155:37;19080:118;;:::o;19204:429::-;19381:3;19403:92;19491:3;19482:6;19403:92;:::i;:::-;19396:99;;19512:95;19603:3;19594:6;19512:95;:::i;:::-;19505:102;;19624:3;19617:10;;19204:429;;;;;:::o;19639:1053::-;19962:4;20000:3;19989:9;19985:19;19977:27;;20014:71;20082:1;20071:9;20067:17;20058:6;20014:71;:::i;:::-;20095:72;20163:2;20152:9;20148:18;20139:6;20095:72;:::i;:::-;20214:9;20208:4;20204:20;20199:2;20188:9;20184:18;20177:48;20242:108;20345:4;20336:6;20242:108;:::i;:::-;20234:116;;20397:9;20391:4;20387:20;20382:2;20371:9;20367:18;20360:48;20425:108;20528:4;20519:6;20425:108;:::i;:::-;20417:116;;20581:9;20575:4;20571:20;20565:3;20554:9;20550:19;20543:49;20609:76;20680:4;20671:6;20609:76;:::i;:::-;20601:84;;19639:1053;;;;;;;;:::o;20698:751::-;20921:4;20959:3;20948:9;20944:19;20936:27;;20973:71;21041:1;21030:9;21026:17;21017:6;20973:71;:::i;:::-;21054:72;21122:2;21111:9;21107:18;21098:6;21054:72;:::i;:::-;21136;21204:2;21193:9;21189:18;21180:6;21136:72;:::i;:::-;21218;21286:2;21275:9;21271:18;21262:6;21218:72;:::i;:::-;21338:9;21332:4;21328:20;21322:3;21311:9;21307:19;21300:49;21366:76;21437:4;21428:6;21366:76;:::i;:::-;21358:84;;20698:751;;;;;;;;:::o;21455:373::-;21598:4;21636:2;21625:9;21621:18;21613:26;;21685:9;21679:4;21675:20;21671:1;21660:9;21656:17;21649:47;21713:108;21816:4;21807:6;21713:108;:::i;:::-;21705:116;;21455:373;;;;:::o;21834:634::-;22055:4;22093:2;22082:9;22078:18;22070:26;;22142:9;22136:4;22132:20;22128:1;22117:9;22113:17;22106:47;22170:108;22273:4;22264:6;22170:108;:::i;:::-;22162:116;;22325:9;22319:4;22315:20;22310:2;22299:9;22295:18;22288:48;22353:108;22456:4;22447:6;22353:108;:::i;:::-;22345:116;;21834:634;;;;;:::o;22474:210::-;22561:4;22599:2;22588:9;22584:18;22576:26;;22612:65;22674:1;22663:9;22659:17;22650:6;22612:65;:::i;:::-;22474:210;;;;:::o;22690:313::-;22803:4;22841:2;22830:9;22826:18;22818:26;;22890:9;22884:4;22880:20;22876:1;22865:9;22861:17;22854:47;22918:78;22991:4;22982:6;22918:78;:::i;:::-;22910:86;;22690:313;;;;:::o;23009:419::-;23175:4;23213:2;23202:9;23198:18;23190:26;;23262:9;23256:4;23252:20;23248:1;23237:9;23233:17;23226:47;23290:131;23416:4;23290:131;:::i;:::-;23282:139;;23009:419;;;:::o;23434:::-;23600:4;23638:2;23627:9;23623:18;23615:26;;23687:9;23681:4;23677:20;23673:1;23662:9;23658:17;23651:47;23715:131;23841:4;23715:131;:::i;:::-;23707:139;;23434:419;;;:::o;23859:::-;24025:4;24063:2;24052:9;24048:18;24040:26;;24112:9;24106:4;24102:20;24098:1;24087:9;24083:17;24076:47;24140:131;24266:4;24140:131;:::i;:::-;24132:139;;23859:419;;;:::o;24284:::-;24450:4;24488:2;24477:9;24473:18;24465:26;;24537:9;24531:4;24527:20;24523:1;24512:9;24508:17;24501:47;24565:131;24691:4;24565:131;:::i;:::-;24557:139;;24284:419;;;:::o;24709:::-;24875:4;24913:2;24902:9;24898:18;24890:26;;24962:9;24956:4;24952:20;24948:1;24937:9;24933:17;24926:47;24990:131;25116:4;24990:131;:::i;:::-;24982:139;;24709:419;;;:::o;25134:::-;25300:4;25338:2;25327:9;25323:18;25315:26;;25387:9;25381:4;25377:20;25373:1;25362:9;25358:17;25351:47;25415:131;25541:4;25415:131;:::i;:::-;25407:139;;25134:419;;;:::o;25559:::-;25725:4;25763:2;25752:9;25748:18;25740:26;;25812:9;25806:4;25802:20;25798:1;25787:9;25783:17;25776:47;25840:131;25966:4;25840:131;:::i;:::-;25832:139;;25559:419;;;:::o;25984:::-;26150:4;26188:2;26177:9;26173:18;26165:26;;26237:9;26231:4;26227:20;26223:1;26212:9;26208:17;26201:47;26265:131;26391:4;26265:131;:::i;:::-;26257:139;;25984:419;;;:::o;26409:::-;26575:4;26613:2;26602:9;26598:18;26590:26;;26662:9;26656:4;26652:20;26648:1;26637:9;26633:17;26626:47;26690:131;26816:4;26690:131;:::i;:::-;26682:139;;26409:419;;;:::o;26834:::-;27000:4;27038:2;27027:9;27023:18;27015:26;;27087:9;27081:4;27077:20;27073:1;27062:9;27058:17;27051:47;27115:131;27241:4;27115:131;:::i;:::-;27107:139;;26834:419;;;:::o;27259:::-;27425:4;27463:2;27452:9;27448:18;27440:26;;27512:9;27506:4;27502:20;27498:1;27487:9;27483:17;27476:47;27540:131;27666:4;27540:131;:::i;:::-;27532:139;;27259:419;;;:::o;27684:::-;27850:4;27888:2;27877:9;27873:18;27865:26;;27937:9;27931:4;27927:20;27923:1;27912:9;27908:17;27901:47;27965:131;28091:4;27965:131;:::i;:::-;27957:139;;27684:419;;;:::o;28109:222::-;28202:4;28240:2;28229:9;28225:18;28217:26;;28253:71;28321:1;28310:9;28306:17;28297:6;28253:71;:::i;:::-;28109:222;;;;:::o;28337:332::-;28458:4;28496:2;28485:9;28481:18;28473:26;;28509:71;28577:1;28566:9;28562:17;28553:6;28509:71;:::i;:::-;28590:72;28658:2;28647:9;28643:18;28634:6;28590:72;:::i;:::-;28337:332;;;;;:::o;28675:129::-;28709:6;28736:20;;:::i;:::-;28726:30;;28765:33;28793:4;28785:6;28765:33;:::i;:::-;28675:129;;;:::o;28810:75::-;28843:6;28876:2;28870:9;28860:19;;28810:75;:::o;28891:311::-;28968:4;29058:18;29050:6;29047:30;29044:56;;;29080:18;;:::i;:::-;29044:56;29130:4;29122:6;29118:17;29110:25;;29190:4;29184;29180:15;29172:23;;28891:311;;;:::o;29208:::-;29285:4;29375:18;29367:6;29364:30;29361:56;;;29397:18;;:::i;:::-;29361:56;29447:4;29439:6;29435:17;29427:25;;29507:4;29501;29497:15;29489:23;;29208:311;;;:::o;29525:307::-;29586:4;29676:18;29668:6;29665:30;29662:56;;;29698:18;;:::i;:::-;29662:56;29736:29;29758:6;29736:29;:::i;:::-;29728:37;;29820:4;29814;29810:15;29802:23;;29525:307;;;:::o;29838:132::-;29905:4;29928:3;29920:11;;29958:4;29953:3;29949:14;29941:22;;29838:132;;;:::o;29976:141::-;30025:4;30048:3;30040:11;;30071:3;30068:1;30061:14;30105:4;30102:1;30092:18;30084:26;;29976:141;;;:::o;30123:114::-;30190:6;30224:5;30218:12;30208:22;;30123:114;;;:::o;30243:98::-;30294:6;30328:5;30322:12;30312:22;;30243:98;;;:::o;30347:99::-;30399:6;30433:5;30427:12;30417:22;;30347:99;;;:::o;30452:113::-;30522:4;30554;30549:3;30545:14;30537:22;;30452:113;;;:::o;30571:184::-;30670:11;30704:6;30699:3;30692:19;30744:4;30739:3;30735:14;30720:29;;30571:184;;;;:::o;30761:168::-;30844:11;30878:6;30873:3;30866:19;30918:4;30913:3;30909:14;30894:29;;30761:168;;;;:::o;30935:169::-;31019:11;31053:6;31048:3;31041:19;31093:4;31088:3;31084:14;31069:29;;30935:169;;;;:::o;31110:148::-;31212:11;31249:3;31234:18;;31110:148;;;;:::o;31264:305::-;31304:3;31323:20;31341:1;31323:20;:::i;:::-;31318:25;;31357:20;31375:1;31357:20;:::i;:::-;31352:25;;31511:1;31443:66;31439:74;31436:1;31433:81;31430:107;;;31517:18;;:::i;:::-;31430:107;31561:1;31558;31554:9;31547:16;;31264:305;;;;:::o;31575:185::-;31615:1;31632:20;31650:1;31632:20;:::i;:::-;31627:25;;31666:20;31684:1;31666:20;:::i;:::-;31661:25;;31705:1;31695:35;;31710:18;;:::i;:::-;31695:35;31752:1;31749;31745:9;31740:14;;31575:185;;;;:::o;31766:191::-;31806:4;31826:20;31844:1;31826:20;:::i;:::-;31821:25;;31860:20;31878:1;31860:20;:::i;:::-;31855:25;;31899:1;31896;31893:8;31890:34;;;31904:18;;:::i;:::-;31890:34;31949:1;31946;31942:9;31934:17;;31766:191;;;;:::o;31963:96::-;32000:7;32029:24;32047:5;32029:24;:::i;:::-;32018:35;;31963:96;;;:::o;32065:90::-;32099:7;32142:5;32135:13;32128:21;32117:32;;32065:90;;;:::o;32161:149::-;32197:7;32237:66;32230:5;32226:78;32215:89;;32161:149;;;:::o;32316:126::-;32353:7;32393:42;32386:5;32382:54;32371:65;;32316:126;;;:::o;32448:77::-;32485:7;32514:5;32503:16;;32448:77;;;:::o;32531:154::-;32615:6;32610:3;32605;32592:30;32677:1;32668:6;32663:3;32659:16;32652:27;32531:154;;;:::o;32691:307::-;32759:1;32769:113;32783:6;32780:1;32777:13;32769:113;;;32868:1;32863:3;32859:11;32853:18;32849:1;32844:3;32840:11;32833:39;32805:2;32802:1;32798:10;32793:15;;32769:113;;;32900:6;32897:1;32894:13;32891:101;;;32980:1;32971:6;32966:3;32962:16;32955:27;32891:101;32740:258;32691:307;;;:::o;33004:320::-;33048:6;33085:1;33079:4;33075:12;33065:22;;33132:1;33126:4;33122:12;33153:18;33143:81;;33209:4;33201:6;33197:17;33187:27;;33143:81;33271:2;33263:6;33260:14;33240:18;33237:38;33234:84;;;33290:18;;:::i;:::-;33234:84;33055:269;33004:320;;;:::o;33330:281::-;33413:27;33435:4;33413:27;:::i;:::-;33405:6;33401:40;33543:6;33531:10;33528:22;33507:18;33495:10;33492:34;33489:62;33486:88;;;33554:18;;:::i;:::-;33486:88;33594:10;33590:2;33583:22;33373:238;33330:281;;:::o;33617:233::-;33656:3;33679:24;33697:5;33679:24;:::i;:::-;33670:33;;33725:66;33718:5;33715:77;33712:103;;;33795:18;;:::i;:::-;33712:103;33842:1;33835:5;33831:13;33824:20;;33617:233;;;:::o;33856:176::-;33888:1;33905:20;33923:1;33905:20;:::i;:::-;33900:25;;33939:20;33957:1;33939:20;:::i;:::-;33934:25;;33978:1;33968:35;;33983:18;;:::i;:::-;33968:35;34024:1;34021;34017:9;34012:14;;33856:176;;;;:::o;34038:180::-;34086:77;34083:1;34076:88;34183:4;34180:1;34173:15;34207:4;34204:1;34197:15;34224:180;34272:77;34269:1;34262:88;34369:4;34366:1;34359:15;34393:4;34390:1;34383:15;34410:180;34458:77;34455:1;34448:88;34555:4;34552:1;34545:15;34579:4;34576:1;34569:15;34596:180;34644:77;34641:1;34634:88;34741:4;34738:1;34731:15;34765:4;34762:1;34755:15;34782:180;34830:77;34827:1;34820:88;34927:4;34924:1;34917:15;34951:4;34948:1;34941:15;34968:183;35003:3;35041:1;35023:16;35020:23;35017:128;;;35079:1;35076;35073;35058:23;35101:34;35132:1;35126:8;35101:34;:::i;:::-;35094:41;;35017:128;34968:183;:::o;35157:117::-;35266:1;35263;35256:12;35280:117;35389:1;35386;35379:12;35403:117;35512:1;35509;35502:12;35526:117;35635:1;35632;35625:12;35649:117;35758:1;35755;35748:12;35772:102;35813:6;35864:2;35860:7;35855:2;35848:5;35844:14;35840:28;35830:38;;35772:102;;;:::o;35880:106::-;35924:8;35973:5;35968:3;35964:15;35943:36;;35880:106;;;:::o;35992:239::-;36132:34;36128:1;36120:6;36116:14;36109:58;36201:22;36196:2;36188:6;36184:15;36177:47;35992:239;:::o;36237:234::-;36377:34;36373:1;36365:6;36361:14;36354:58;36446:17;36441:2;36433:6;36429:15;36422:42;36237:234;:::o;36477:227::-;36617:34;36613:1;36605:6;36601:14;36594:58;36686:10;36681:2;36673:6;36669:15;36662:35;36477:227;:::o;36710:223::-;36850:34;36846:1;36838:6;36834:14;36827:58;36919:6;36914:2;36906:6;36902:15;36895:31;36710:223;:::o;36939:229::-;37079:34;37075:1;37067:6;37063:14;37056:58;37148:12;37143:2;37135:6;37131:15;37124:37;36939:229;:::o;37174:224::-;37314:34;37310:1;37302:6;37298:14;37291:58;37383:7;37378:2;37370:6;37366:15;37359:32;37174:224;:::o;37404:222::-;37544:34;37540:1;37532:6;37528:14;37521:58;37613:5;37608:2;37600:6;37596:15;37589:30;37404:222;:::o;37632:229::-;37772:34;37768:1;37760:6;37756:14;37749:58;37841:12;37836:2;37828:6;37824:15;37817:37;37632:229;:::o;37867:228::-;38007:34;38003:1;37995:6;37991:14;37984:58;38076:11;38071:2;38063:6;38059:15;38052:36;37867:228;:::o;38101:::-;38241:34;38237:1;38229:6;38225:14;38218:58;38310:11;38305:2;38297:6;38293:15;38286:36;38101:228;:::o;38335:227::-;38475:34;38471:1;38463:6;38459:14;38452:58;38544:10;38539:2;38531:6;38527:15;38520:35;38335:227;:::o;38568:220::-;38708:34;38704:1;38696:6;38692:14;38685:58;38777:3;38772:2;38764:6;38760:15;38753:28;38568:220;:::o;38794:711::-;38833:3;38871:4;38853:16;38850:26;38847:39;;;38879:5;;38847:39;38908:20;;:::i;:::-;38983:1;38965:16;38961:24;38958:1;38952:4;38937:49;39016:4;39010:11;39115:16;39108:4;39100:6;39096:17;39093:39;39060:18;39052:6;39049:30;39033:113;39030:146;;;39161:5;;;;39030:146;39207:6;39201:4;39197:17;39243:3;39237:10;39270:18;39262:6;39259:30;39256:43;;;39292:5;;;;;;39256:43;39340:6;39333:4;39328:3;39324:14;39320:27;39399:1;39381:16;39377:24;39371:4;39367:35;39362:3;39359:44;39356:57;;;39406:5;;;;;;;39356:57;39423;39471:6;39465:4;39461:17;39453:6;39449:30;39443:4;39423:57;:::i;:::-;39496:3;39489:10;;38837:668;;;;;38794:711;;:::o;39511:122::-;39584:24;39602:5;39584:24;:::i;:::-;39577:5;39574:35;39564:63;;39623:1;39620;39613:12;39564:63;39511:122;:::o;39639:116::-;39709:21;39724:5;39709:21;:::i;:::-;39702:5;39699:32;39689:60;;39745:1;39742;39735:12;39689:60;39639:116;:::o;39761:120::-;39833:23;39850:5;39833:23;:::i;:::-;39826:5;39823:34;39813:62;;39871:1;39868;39861:12;39813:62;39761:120;:::o;39887:122::-;39960:24;39978:5;39960:24;:::i;:::-;39953:5;39950:35;39940:63;;39999:1;39996;39989:12;39940:63;39887:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2483600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"name()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"symbol()": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1258,
									"end": 1262,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1250,
									"end": 1257,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1257,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1263,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1263,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1250,
									"end": 1263,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1250,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1281,
									"end": 1286,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1278,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1286,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1306,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1303,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1163,
									"end": 1321,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8910,
									"end": 8998,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8910,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8984,
									"end": 8990,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8981,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8977,
									"end": 8990,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8910,
									"end": 8998,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8910,
									"end": 8998,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 927,
									"end": 933,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 941,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 943,
									"end": 949,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 980,
									"end": 989,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 971,
									"end": 978,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 967,
									"end": 990,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 963,
									"end": 995,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1140,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1137,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1124,
									"end": 1141,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1118,
									"end": 1142,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1187,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1158,
									"end": 1188,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1370,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1370,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1380,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1438,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1419,
									"end": 1444,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1489,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1463,
									"end": 1469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1460,
									"end": 1490,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1664,
									"end": 1671,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1655,
									"end": 1661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1644,
									"end": 1653,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1662,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1588,
									"end": 1672,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1588,
									"end": 1672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1744,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1731,
									"end": 1740,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1727,
									"end": 1745,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1746,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1773,
									"end": 1791,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1762,
									"end": 1792,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1966,
									"end": 1973,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1963,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1955,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 1964,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1890,
									"end": 1974,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1890,
									"end": 1974,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2037,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2048,
									"end": 2078,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2048,
									"end": 2078,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2115,
									"end": 2119,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2107,
									"end": 2113,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2165,
									"end": 2171,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2192,
									"end": 2201,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2275,
									"end": 2279,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2365,
									"end": 2383,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2357,
									"end": 2363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2354,
									"end": 2384,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2447,
									"end": 2453,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2503,
									"end": 2507,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2499,
									"end": 2514,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2595,
									"end": 2596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2619,
									"end": 2625,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2613,
									"end": 2626,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2699,
									"end": 2702,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2695,
									"end": 2706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2689,
									"end": 2707,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2686,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2680,
									"end": 2683,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 2687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2669,
									"end": 2708,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 2643,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2644,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2629,
									"end": 2644,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2629,
									"end": 2644,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 2742,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2730,
									"end": 2743,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2813,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2802,
									"end": 2805,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2798,
									"end": 2814,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2791,
									"end": 2818,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2576,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2884,
									"end": 2890,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2921,
									"end": 2922,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2915,
									"end": 2919,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2911,
									"end": 2923,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2901,
									"end": 2923,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2901,
									"end": 2923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2968,
									"end": 2969,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2962,
									"end": 2966,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2958,
									"end": 2970,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2989,
									"end": 3007,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3045,
									"end": 3049,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3037,
									"end": 3043,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3050,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3023,
									"end": 3050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3023,
									"end": 3050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3109,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3096,
									"end": 3110,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3076,
									"end": 3094,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3073,
									"end": 3111,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2891,
									"end": 3160,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3271,
									"end": 3275,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3241,
									"end": 3247,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3277,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3367,
									"end": 3377,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3364,
									"end": 3386,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3361,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3331,
									"end": 3341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3328,
									"end": 3362,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3325,
									"end": 3387,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3430,
									"end": 3440,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3428,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3419,
									"end": 3441,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3209,
									"end": 3447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3453,
									"end": 3633,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3453,
									"end": 3633,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3501,
									"end": 3578,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3498,
									"end": 3499,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3491,
									"end": 3579,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3602,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3595,
									"end": 3596,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3588,
									"end": 3603,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3622,
									"end": 3626,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3619,
									"end": 3620,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3612,
									"end": 3627,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3639,
									"end": 3819,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3639,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3687,
									"end": 3764,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3684,
									"end": 3685,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3677,
									"end": 3765,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3784,
									"end": 3788,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3774,
									"end": 3789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3808,
									"end": 3812,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3805,
									"end": 3806,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3798,
									"end": 3813,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3825,
									"end": 3942,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3825,
									"end": 3942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3931,
									"end": 3932,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3924,
									"end": 3936,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3948,
									"end": 4065,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3948,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4058,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4054,
									"end": 4055,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4059,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4071,
									"end": 4188,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 4071,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4180,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4177,
									"end": 4178,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4170,
									"end": 4182,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4311,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4194,
									"end": 4311,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4303,
									"end": 4304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4300,
									"end": 4301,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4293,
									"end": 4305,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4358,
									"end": 4364,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4409,
									"end": 4411,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4405,
									"end": 4412,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4400,
									"end": 4402,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4393,
									"end": 4398,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4389,
									"end": 4403,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4385,
									"end": 4413,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4413,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4413,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 18270,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6dd8c36bf90343f0f2efffb61736f4723baf1311bdd6bfa7e10e502843d563764736f6c63430008070033",
									".code": [
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "731133E9"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "731133E9"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "F5298ACA"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 18270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2556,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2556,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2542,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2556,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2556,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2556,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2556,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2527,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2633,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2621,
											"end": 2643,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2421,
											"end": 2651,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1532,
											"end": 1642,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1642,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1601,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1642,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1532,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1532,
											"end": 1695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1683,
											"end": 1694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1659,
											"end": 1695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1659,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1659,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1532,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1703,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 683,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2190,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2240,
											"end": 2260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2260,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2240,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2270,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4606,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4598,
											"end": 4658,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4645,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4645,
											"end": 4657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4645,
											"end": 4657,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4645,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4622,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4622,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4658,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4598,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4576,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4782,
											"end": 4789,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4744,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4744,
											"end": 4796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4744,
											"end": 4796,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4744,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4804,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2989,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3034,
											"end": 3044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3007,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3211,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3269,
											"end": 3277,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3289,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4981,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 710,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3528,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3560,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3509,
											"end": 3561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3509,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3509,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3569,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3790,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3764,
											"end": 3801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3809,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4097,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4093,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4109,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4130,
											"end": 4134,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4136,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4113,
											"end": 4149,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4113,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4113,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4089,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4067,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4253,
											"end": 4257,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4235,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 4288,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5101,
											"end": 5103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5095,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4989,
											"end": 5124,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 463,
											"end": 476,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 684,
											"end": 694,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 680,
											"end": 733,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 680,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH",
											"source": 8,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 711,
											"end": 721,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 680,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 680,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 743,
											"end": 763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 774,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 799,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 814,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 810,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 806,
											"end": 815,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 799,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 799,
											"end": 877,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 832,
											"end": 840,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 832,
											"end": 840,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 832,
											"end": 840,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 832,
											"end": 840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 863,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 855,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 855,
											"end": 865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 855,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 855,
											"end": 865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 855,
											"end": 865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 799,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 799,
											"end": 877,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 799,
											"end": 877,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 799,
											"end": 877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 887,
											"end": 906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 909,
											"end": 926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 909,
											"end": 926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 887,
											"end": 926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 887,
											"end": 926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 953,
											"end": 954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 949,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 954,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 981,
											"end": 982,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 971,
											"end": 982,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 971,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 971,
											"end": 982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 971,
											"end": 982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 971,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 971,
											"end": 982,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 971,
											"end": 982,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 971,
											"end": 982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 971,
											"end": 982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 971,
											"end": 982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1040,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1029,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1027,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1014,
											"end": 1053,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 1014,
											"end": 1053,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1077,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1068,
											"end": 1079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 937,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 407,
											"end": 1130,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7147,
											"end": 7154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7147,
											"end": 7161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7133,
											"end": 7136,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7133,
											"end": 7143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7133,
											"end": 7161,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7125,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7239,
											"end": 7240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7225,
											"end": 7241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7217,
											"end": 7283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7296,
											"end": 7312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7315,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7296,
											"end": 7327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7361,
											"end": 7369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7379,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7381,
											"end": 7384,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7386,
											"end": 7393,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7395,
											"end": 7399,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 7340,
											"end": 7400,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7340,
											"end": 7400,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7340,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7440,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7433,
											"end": 7447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7485,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7527,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7520,
											"end": 7530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7503,
											"end": 7530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7503,
											"end": 7530,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7578,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7581,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7587,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7569,
											"end": 7588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7611,
											"end": 7622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7611,
											"end": 7632,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7611,
											"end": 7632,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7603,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7732,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7735,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7736,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7741,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7742,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7765,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7816,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7807,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7808,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7795,
											"end": 7822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7454,
											"end": 7834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7454,
											"end": 7834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7454,
											"end": 7834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7413,
											"end": 7834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7875,
											"end": 7879,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7865,
											"end": 7873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7885,
											"end": 7888,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7898,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7931,
											"end": 7939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7941,
											"end": 7945,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7947,
											"end": 7949,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7951,
											"end": 7954,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7956,
											"end": 7963,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 7969,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7911,
											"end": 7970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7911,
											"end": 7970,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7911,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8019,
											"end": 8027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8039,
											"end": 8042,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8053,
											"end": 8057,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 7983,
											"end": 8058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8058,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7983,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7114,
											"end": 8066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 8066,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9543,
											"end": 9559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9543,
											"end": 9545,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9543,
											"end": 9559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9543,
											"end": 9559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9543,
											"end": 9559,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9543,
											"end": 9559,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9535,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9610,
											"end": 9626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9629,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9629,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9629,
											"end": 9641,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9629,
											"end": 9641,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9629,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9610,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9610,
											"end": 9641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9693,
											"end": 9695,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9675,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9652,
											"end": 9696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9707,
											"end": 9731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9752,
											"end": 9758,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9734,
											"end": 9759,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9734,
											"end": 9759,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9734,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9707,
											"end": 9759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9707,
											"end": 9759,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9793,
											"end": 9801,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9822,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9824,
											"end": 9831,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9833,
											"end": 9837,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9772,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9860,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9861,
											"end": 9863,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9864,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9867,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 9878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9933,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9909,
											"end": 9917,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9939,
											"end": 9945,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9894,
											"end": 9946,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 9979,
											"end": 9987,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9997,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10001,
											"end": 10003,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10008,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10017,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10019,
											"end": 10023,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 9959,
											"end": 10024,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9959,
											"end": 10024,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 9959,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10037,
											"end": 10111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10068,
											"end": 10076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10086,
											"end": 10087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10092,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10096,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10106,
											"end": 10110,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10037,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10037,
											"end": 10111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10037,
											"end": 10111,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 10037,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9390,
											"end": 10119,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13803,
											"end": 14134,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 13803,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13958,
											"end": 13966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13949,
											"end": 13966,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13949,
											"end": 13966,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13949,
											"end": 13954,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13949,
											"end": 13966,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13949,
											"end": 13966,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13949,
											"end": 13966,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13949,
											"end": 13966,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 13941,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14061,
											"end": 14069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14041,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14042,
											"end": 14047,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 14023,
											"end": 14069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14107,
											"end": 14115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14100,
											"end": 14105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14117,
											"end": 14125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14085,
											"end": 14126,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13803,
											"end": 14134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13803,
											"end": 14134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13803,
											"end": 14134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13803,
											"end": 14134,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5768,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5866,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5866,
											"end": 5878,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5866,
											"end": 5878,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5866,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5889,
											"end": 5909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5930,
											"end": 5932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5889,
											"end": 5933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5889,
											"end": 5933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 5971,
											"end": 5996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 5996,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5971,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6030,
											"end": 6038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6048,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6050,
											"end": 6053,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6009,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6009,
											"end": 6069,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6009,
											"end": 6069,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6009,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6116,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6117,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6163,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6142,
											"end": 6153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6134,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6268,
											"end": 6279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6268,
											"end": 6288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6258,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6259,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6264,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6265,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6288,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6319,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6320,
											"end": 6322,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6323,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6326,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6388,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6380,
											"end": 6384,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6370,
											"end": 6378,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6390,
											"end": 6392,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6400,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6414,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6434,
											"end": 6442,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6448,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6452,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6468,
											"end": 6472,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6414,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6414,
											"end": 6473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6414,
											"end": 6473,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6414,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6486,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6517,
											"end": 6525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6531,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6533,
											"end": 6535,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6537,
											"end": 6539,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6553,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6486,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6486,
											"end": 6554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6486,
											"end": 6554,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6486,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5757,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5588,
											"end": 6562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11633,
											"end": 12441,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 11633,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11776,
											"end": 11777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11778,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11760,
											"end": 11778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11760,
											"end": 11764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11760,
											"end": 11778,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11760,
											"end": 11778,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11760,
											"end": 11778,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11760,
											"end": 11778,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 11752,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 11850,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11850,
											"end": 11862,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11850,
											"end": 11862,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 11850,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11873,
											"end": 11893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11896,
											"end": 11913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11873,
											"end": 11917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11873,
											"end": 11917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11928,
											"end": 11952,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11955,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 11955,
											"end": 11980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11955,
											"end": 11980,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 11955,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11928,
											"end": 11980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11928,
											"end": 11980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 12014,
											"end": 12022,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12024,
											"end": 12028,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12038,
											"end": 12039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12045,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12047,
											"end": 12054,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 11993,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12094,
											"end": 12103,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12094,
											"end": 12107,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12112,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12147,
											"end": 12153,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12132,
											"end": 12143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12132,
											"end": 12153,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12132,
											"end": 12153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 12124,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12266,
											"end": 12272,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12252,
											"end": 12272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12239,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12240,
											"end": 12242,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12230,
											"end": 12243,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12244,
											"end": 12248,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12230,
											"end": 12249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12272,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12340,
											"end": 12341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12326,
											"end": 12330,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12316,
											"end": 12324,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 12344,
											"end": 12346,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12348,
											"end": 12354,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12355,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12398,
											"end": 12402,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12416,
											"end": 12419,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12421,
											"end": 12428,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 12368,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11741,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 12441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 12441,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15313,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 16488,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17488,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 17488,
											"end": 17490,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17488,
											"end": 17501,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17488,
											"end": 17501,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17488,
											"end": 17501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 17488,
											"end": 17503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17488,
											"end": 17503,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 17488,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17484,
											"end": 18054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17484,
											"end": 18054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 17484,
											"end": 18054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17541,
											"end": 17543,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17524,
											"end": 17567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17567,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17568,
											"end": 17576,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17578,
											"end": 17582,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17584,
											"end": 17587,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17589,
											"end": 17596,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17598,
											"end": 17602,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 17524,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17916,
											"end": 17922,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17909,
											"end": 17923,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17965,
											"end": 18027,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 17520,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17697,
											"end": 17745,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17697,
											"end": 17745,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17697,
											"end": 17745,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17685,
											"end": 17693,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17685,
											"end": 17745,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17681,
											"end": 17840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 17681,
											"end": 17840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17770,
											"end": 17820,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17681,
											"end": 17840,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 17681,
											"end": 17840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17604,
											"end": 17855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17484,
											"end": 18054,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 17484,
											"end": 18054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17248,
											"end": 18061,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 18069,
											"end": 18267,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 18069,
											"end": 18267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18135,
											"end": 18151,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 18164,
											"end": 18186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18203,
											"end": 18204,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18189,
											"end": 18205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18164,
											"end": 18205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18164,
											"end": 18205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18227,
											"end": 18234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18222,
											"end": 18223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18216,
											"end": 18234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18254,
											"end": 18259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18247,
											"end": 18259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18069,
											"end": 18267,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16711,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 16711,
											"end": 16713,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16711,
											"end": 16724,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16711,
											"end": 16724,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16711,
											"end": 16724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 16711,
											"end": 16726,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16711,
											"end": 16726,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 16711,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16707,
											"end": 17233,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16707,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 16707,
											"end": 17233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16764,
											"end": 16766,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16785,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16747,
											"end": 16785,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16785,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16786,
											"end": 16794,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16796,
											"end": 16800,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16802,
											"end": 16804,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16814,
											"end": 16818,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 16747,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17095,
											"end": 17101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17102,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17206,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 16743,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16881,
											"end": 16924,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16881,
											"end": 16924,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16881,
											"end": 16924,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16869,
											"end": 16924,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16865,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 16865,
											"end": 17019,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16949,
											"end": 16999,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16865,
											"end": 17019,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 16865,
											"end": 17019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16820,
											"end": 17034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16707,
											"end": 17233,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 16707,
											"end": 17233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 17240,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 865,
											"end": 870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 890,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 890,
											"end": 971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1027,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1059,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1134,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1149,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 1095,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1369,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1434,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1461,
											"end": 1475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1247,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1251,
											"end": 1265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 1491,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1599,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1673,
											"end": 1694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1725,
											"end": 1729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1714,
											"end": 1730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1767,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1770,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1739,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1887,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1860,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1907,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 2052,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2192,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2193,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2199,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2203,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2162,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 2435,
											"end": 2438,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2418,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 2345,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2592,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2596,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2555,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2738,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2838,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 2932,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2941,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2844,
											"end": 2977,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3108,
											"end": 3113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3120,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3220,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3267,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3398,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3357,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3502,
											"end": 3522,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3587,
											"end": 3604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 3540,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3347,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3624,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3701,
											"end": 3721,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3730,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3769,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3871,
											"end": 3903,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3906,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3868,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4085,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4051,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4224,
											"end": 4231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4179,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3775,
											"end": 4249,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4488,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4494,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4497,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4458,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4642,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4815,
											"end": 4822,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4804,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4770,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4904,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 4953,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 4917,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5058,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4843,
											"end": 5146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5198,
											"end": 5216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5217,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5230,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5441,
											"end": 5448,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5371,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5156,
											"end": 5459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5531,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5580,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 5544,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5715,
											"end": 5737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 5685,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 5764,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 5962,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 5923,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6053,
											"end": 6170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6280,
											"end": 6287,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6235,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6308,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6467,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 6536,
											"end": 6543,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 6491,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6653,
											"end": 6671,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 6675,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6639,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6780,
											"end": 6842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6770,
											"end": 6842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 6859,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 7266,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7256,
											"end": 7316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6865,
											"end": 7333,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7464,
											"end": 7466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7435,
											"end": 7467,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7470,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7432,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7649,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7615,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7605,
											"end": 7668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7788,
											"end": 7795,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7764,
											"end": 7786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7743,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7688,
											"end": 7806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7904,
											"end": 7910,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7949,
											"end": 7958,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7940,
											"end": 7947,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7936,
											"end": 7959,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7932,
											"end": 7964,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 8048,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7929,
											"end": 8048,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7967,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7967,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 7967,
											"end": 8046,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7967,
											"end": 8046,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7967,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 8048,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7929,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 8157,
											"end": 8164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8137,
											"end": 8146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8133,
											"end": 8155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 8112,
											"end": 8165,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8165,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 8112,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8102,
											"end": 8165,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8102,
											"end": 8165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8240,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 8285,
											"end": 8292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8265,
											"end": 8274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8240,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 8240,
											"end": 8293,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8240,
											"end": 8293,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 8240,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8293,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8342,
											"end": 8344,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8368,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8413,
											"end": 8420,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 8368,
											"end": 8421,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8368,
											"end": 8421,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 8368,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 8438,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8553,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8555,
											"end": 8561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8600,
											"end": 8609,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8587,
											"end": 8610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8583,
											"end": 8616,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8580,
											"end": 8700,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8619,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8619,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 8619,
											"end": 8698,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8619,
											"end": 8698,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8619,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8700,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8580,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8764,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8809,
											"end": 8816,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8800,
											"end": 8806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8785,
											"end": 8807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 8764,
											"end": 8817,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8764,
											"end": 8817,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8764,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8817,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8710,
											"end": 8827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8892,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8937,
											"end": 8944,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8928,
											"end": 8934,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8917,
											"end": 8926,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 8892,
											"end": 8945,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8892,
											"end": 8945,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8892,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8945,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8837,
											"end": 8955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 8996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9020,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 9065,
											"end": 9072,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9041,
											"end": 9063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9020,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9020,
											"end": 9073,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9020,
											"end": 9073,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 9020,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9073,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9152,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9139,
											"end": 9148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9122,
											"end": 9154,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9181,
											"end": 9199,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9173,
											"end": 9179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9200,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9284,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 9167,
											"end": 9284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 9203,
											"end": 9282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 9203,
											"end": 9282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9203,
											"end": 9282,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 9203,
											"end": 9282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9167,
											"end": 9284,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 9167,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9308,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 9362,
											"end": 9369,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9338,
											"end": 9360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9308,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 9308,
											"end": 9370,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9308,
											"end": 9370,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 9308,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9370,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 9387,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9511,
											"end": 9517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9525,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9570,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9556,
											"end": 9565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9554,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9571,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9536,
											"end": 9655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9536,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 9536,
											"end": 9655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9574,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9574,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 9574,
											"end": 9653,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9574,
											"end": 9653,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 9574,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9536,
											"end": 9655,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 9536,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9720,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9694,
											"end": 9725,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9744,
											"end": 9750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9741,
											"end": 9771,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9738,
											"end": 9855,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9738,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 9738,
											"end": 9855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9774,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 9774,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 9774,
											"end": 9853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9774,
											"end": 9853,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 9774,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9738,
											"end": 9855,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 9738,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9879,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 9949,
											"end": 9956,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 9946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 9938,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9879,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 9879,
											"end": 9957,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9879,
											"end": 9957,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 9879,
											"end": 9957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9869,
											"end": 9957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9869,
											"end": 9957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9665,
											"end": 9967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10036,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10023,
											"end": 10032,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10006,
											"end": 10038,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10057,
											"end": 10063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10054,
											"end": 10084,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10051,
											"end": 10168,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10051,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 10051,
											"end": 10168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10087,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 10087,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 10087,
											"end": 10166,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10087,
											"end": 10166,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 10087,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10051,
											"end": 10168,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 10051,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 10262,
											"end": 10269,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10253,
											"end": 10259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10251,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 10192,
											"end": 10270,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10192,
											"end": 10270,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 10192,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 10287,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10400,
											"end": 10402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10388,
											"end": 10397,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10386,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10398,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10368,
											"end": 10487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10368,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 10368,
											"end": 10487,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10368,
											"end": 10487,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 10368,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10551,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10586,
											"end": 10592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10575,
											"end": 10584,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 10551,
											"end": 10603,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10551,
											"end": 10603,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10551,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10497,
											"end": 10613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10293,
											"end": 10620,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10732,
											"end": 10741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10719,
											"end": 10742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10715,
											"end": 10747,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10712,
											"end": 10831,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10712,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10712,
											"end": 10831,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10750,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10750,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 10750,
											"end": 10829,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10750,
											"end": 10829,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10750,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10712,
											"end": 10831,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10712,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 10950,
											"end": 10957,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10941,
											"end": 10947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10930,
											"end": 10939,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10926,
											"end": 10948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 10895,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 10958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 10958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10975,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11040,
											"end": 11046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11089,
											"end": 11091,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11077,
											"end": 11086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11064,
											"end": 11087,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11060,
											"end": 11092,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11176,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 11057,
											"end": 11176,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11095,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 11095,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 11095,
											"end": 11174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11095,
											"end": 11174,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 11095,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11176,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 11057,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 11285,
											"end": 11292,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11276,
											"end": 11282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11274,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11261,
											"end": 11283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11240,
											"end": 11293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 11240,
											"end": 11293,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11240,
											"end": 11293,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 11240,
											"end": 11293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11230,
											"end": 11293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11230,
											"end": 11293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11310,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11385,
											"end": 11395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11406,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11448,
											"end": 11451,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11440,
											"end": 11446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11406,
											"end": 11452,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11406,
											"end": 11452,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11406,
											"end": 11452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11479,
											"end": 11482,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11475,
											"end": 11489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11489,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11461,
											"end": 11489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11316,
											"end": 11495,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 11606,
											"end": 11611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 11588,
											"end": 11612,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11588,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 11588,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11583,
											"end": 11586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11774,
											"end": 11777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11803,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 11851,
											"end": 11856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11803,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 11803,
											"end": 11857,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11803,
											"end": 11857,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 11803,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11873,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 11952,
											"end": 11958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11947,
											"end": 11950,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11873,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 11873,
											"end": 11959,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11873,
											"end": 11959,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 11873,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11959,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12033,
											"end": 12038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12062,
											"end": 12069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12103,
											"end": 12109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12100,
											"end": 12101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12097,
											"end": 12110,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12186,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12206,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 12265,
											"end": 12268,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 12250,
											"end": 12263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12206,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 12206,
											"end": 12269,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12206,
											"end": 12269,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 12206,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12199,
											"end": 12269,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 12199,
											"end": 12269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 12345,
											"end": 12351,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 12292,
											"end": 12352,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12292,
											"end": 12352,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 12292,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12282,
											"end": 12352,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12282,
											"end": 12352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12138,
											"end": 12362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12125,
											"end": 12126,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12122,
											"end": 12123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12127,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 12078,
											"end": 12362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12082,
											"end": 12096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12378,
											"end": 12381,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12381,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 12387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 12387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11779,
											"end": 12387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11655,
											"end": 12387,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12393,
											"end": 12502,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 12393,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12474,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 12489,
											"end": 12494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12474,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 12474,
											"end": 12495,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12474,
											"end": 12495,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 12474,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12469,
											"end": 12472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12496,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12502,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12594,
											"end": 12597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 12654,
											"end": 12659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12622,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 12622,
											"end": 12660,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12622,
											"end": 12660,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 12622,
											"end": 12660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 12739,
											"end": 12745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12734,
											"end": 12737,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 12676,
											"end": 12746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12676,
											"end": 12746,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 12676,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12746,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12795,
											"end": 12798,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12788,
											"end": 12792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12781,
											"end": 12786,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 12755,
											"end": 12807,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12755,
											"end": 12807,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 12755,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 12854,
											"end": 12860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 12832,
											"end": 12861,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12832,
											"end": 12861,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 12832,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12827,
											"end": 12830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12823,
											"end": 12862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12816,
											"end": 12862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12816,
											"end": 12862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12868,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12962,
											"end": 12965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 13023,
											"end": 13028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12990,
											"end": 13029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 12990,
											"end": 13029,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12990,
											"end": 13029,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 12990,
											"end": 13029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 13109,
											"end": 13115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13104,
											"end": 13107,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13116,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13125,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 13170,
											"end": 13176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13165,
											"end": 13168,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13158,
											"end": 13162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13151,
											"end": 13156,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13147,
											"end": 13163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13125,
											"end": 13177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 13125,
											"end": 13177,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13125,
											"end": 13177,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 13125,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13202,
											"end": 13231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 13224,
											"end": 13230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13202,
											"end": 13231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 13202,
											"end": 13231,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13202,
											"end": 13231,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 13202,
											"end": 13231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13200,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13193,
											"end": 13232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12966,
											"end": 13238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12874,
											"end": 13238,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13378,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 13411,
											"end": 13416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13378,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 13378,
											"end": 13417,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13378,
											"end": 13417,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 13378,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13433,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 13515,
											"end": 13521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13433,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 13433,
											"end": 13522,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13433,
											"end": 13522,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 13433,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13426,
											"end": 13522,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13426,
											"end": 13522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13531,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 13576,
											"end": 13582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13571,
											"end": 13574,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13564,
											"end": 13568,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13562,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13553,
											"end": 13569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13531,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 13531,
											"end": 13583,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13531,
											"end": 13583,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 13531,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13608,
											"end": 13614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13603,
											"end": 13606,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13599,
											"end": 13615,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13592,
											"end": 13615,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13592,
											"end": 13615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13621,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13754,
											"end": 13757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13791,
											"end": 13796,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13785,
											"end": 13797,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 13846,
											"end": 13855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 13820,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13872,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 13954,
											"end": 13960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13872,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 13872,
											"end": 13961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13872,
											"end": 13961,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 13872,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13865,
											"end": 13961,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13865,
											"end": 13961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13992,
											"end": 13993,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13981,
											"end": 13990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13977,
											"end": 13994,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14008,
											"end": 14009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14154,
											"end": 14155,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14149,
											"end": 14490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14490,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 14149,
											"end": 14490,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13970,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 13970,
											"end": 14490,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14087,
											"end": 14091,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14083,
											"end": 14092,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14072,
											"end": 14081,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14093,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14063,
											"end": 14066,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14056,
											"end": 14094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14123,
											"end": 14129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14118,
											"end": 14121,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14114,
											"end": 14130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14130,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 14003,
											"end": 14140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14149,
											"end": 14490,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 14149,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 14248,
											"end": 14253,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 14216,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14276,
											"end": 14277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14304,
											"end": 14310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14301,
											"end": 14302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14298,
											"end": 14311,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14372,
											"end": 14386,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14369,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14363,
											"end": 14366,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 14359,
											"end": 14370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14352,
											"end": 14387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14428,
											"end": 14429,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14419,
											"end": 14426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14415,
											"end": 14430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14404,
											"end": 14430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14404,
											"end": 14430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14330,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14323,
											"end": 14324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14319,
											"end": 14331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14314,
											"end": 14331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 14290,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14473,
											"end": 14479,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 14464,
											"end": 14480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14457,
											"end": 14480,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14457,
											"end": 14480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14156,
											"end": 14490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14156,
											"end": 14490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13970,
											"end": 14490,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 13970,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13970,
											"end": 14490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13758,
											"end": 14496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13651,
											"end": 14496,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14502,
											"end": 14868,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 14502,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14644,
											"end": 14647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 14729,
											"end": 14731,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 14724,
											"end": 14727,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 14665,
											"end": 14732,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 14732,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 14665,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14658,
											"end": 14732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14658,
											"end": 14732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14741,
											"end": 14834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 14830,
											"end": 14833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14741,
											"end": 14834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 14741,
											"end": 14834,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14741,
											"end": 14834,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 14741,
											"end": 14834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14859,
											"end": 14861,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14854,
											"end": 14857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14850,
											"end": 14862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14843,
											"end": 14862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14843,
											"end": 14862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14868,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14868,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14874,
											"end": 15240,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 14874,
											"end": 15240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15016,
											"end": 15019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 15101,
											"end": 15103,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 15096,
											"end": 15099,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15037,
											"end": 15104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 15037,
											"end": 15104,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15037,
											"end": 15104,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 15037,
											"end": 15104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15113,
											"end": 15206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 15202,
											"end": 15205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15113,
											"end": 15206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 15113,
											"end": 15206,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15113,
											"end": 15206,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 15113,
											"end": 15206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15231,
											"end": 15233,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15226,
											"end": 15229,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15222,
											"end": 15234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15215,
											"end": 15234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15215,
											"end": 15234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15240,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15246,
											"end": 15612,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 15246,
											"end": 15612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15388,
											"end": 15391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15409,
											"end": 15476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 15473,
											"end": 15475,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 15468,
											"end": 15471,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 15409,
											"end": 15476,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15409,
											"end": 15476,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 15409,
											"end": 15476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15402,
											"end": 15476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15402,
											"end": 15476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15485,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 15574,
											"end": 15577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15485,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 15485,
											"end": 15578,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15485,
											"end": 15578,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 15485,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15598,
											"end": 15601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15594,
											"end": 15606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15587,
											"end": 15606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15587,
											"end": 15606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15246,
											"end": 15612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15618,
											"end": 15984,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 15618,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15760,
											"end": 15763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 15845,
											"end": 15847,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15840,
											"end": 15843,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15781,
											"end": 15848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 15781,
											"end": 15848,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15781,
											"end": 15848,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 15781,
											"end": 15848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15774,
											"end": 15848,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15774,
											"end": 15848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15857,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 15946,
											"end": 15949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15857,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 15857,
											"end": 15950,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15857,
											"end": 15950,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 15857,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15975,
											"end": 15977,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15970,
											"end": 15973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 15978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 15978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15959,
											"end": 15978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15618,
											"end": 15984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15618,
											"end": 15984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15618,
											"end": 15984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15618,
											"end": 15984,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15990,
											"end": 16356,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 15990,
											"end": 16356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16132,
											"end": 16135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16153,
											"end": 16220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 16217,
											"end": 16219,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 16212,
											"end": 16215,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16153,
											"end": 16220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 16153,
											"end": 16220,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16153,
											"end": 16220,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 16153,
											"end": 16220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16146,
											"end": 16220,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16146,
											"end": 16220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16229,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 16318,
											"end": 16321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16229,
											"end": 16322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 16229,
											"end": 16322,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16229,
											"end": 16322,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 16229,
											"end": 16322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16347,
											"end": 16349,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16342,
											"end": 16345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16338,
											"end": 16350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16331,
											"end": 16350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16331,
											"end": 16350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15990,
											"end": 16356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16362,
											"end": 16728,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 16362,
											"end": 16728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16504,
											"end": 16507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16525,
											"end": 16592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 16589,
											"end": 16591,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 16584,
											"end": 16587,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16525,
											"end": 16592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 16525,
											"end": 16592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16525,
											"end": 16592,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 16525,
											"end": 16592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16518,
											"end": 16592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16518,
											"end": 16592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16601,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 16690,
											"end": 16693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16601,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 16601,
											"end": 16694,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16601,
											"end": 16694,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 16601,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16721,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16714,
											"end": 16717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16710,
											"end": 16722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16703,
											"end": 16722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16703,
											"end": 16722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16362,
											"end": 16728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16362,
											"end": 16728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16362,
											"end": 16728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16362,
											"end": 16728,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16734,
											"end": 17100,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 16734,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16876,
											"end": 16879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16897,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 16961,
											"end": 16963,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 16956,
											"end": 16959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16897,
											"end": 16964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 16897,
											"end": 16964,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16897,
											"end": 16964,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 16897,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16890,
											"end": 16964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16890,
											"end": 16964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16973,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 17062,
											"end": 17065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16973,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 16973,
											"end": 17066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16973,
											"end": 17066,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 16973,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17091,
											"end": 17093,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17086,
											"end": 17089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17082,
											"end": 17094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 17100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 17100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 17100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 17100,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17106,
											"end": 17472,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 17106,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17248,
											"end": 17251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17269,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 17333,
											"end": 17335,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 17328,
											"end": 17331,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17269,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 17269,
											"end": 17336,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17269,
											"end": 17336,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 17269,
											"end": 17336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17262,
											"end": 17336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17262,
											"end": 17336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17345,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 17434,
											"end": 17437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17345,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 17345,
											"end": 17438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17345,
											"end": 17438,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 17345,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17463,
											"end": 17465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17458,
											"end": 17461,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17454,
											"end": 17466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17447,
											"end": 17466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17447,
											"end": 17466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17106,
											"end": 17472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17106,
											"end": 17472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17106,
											"end": 17472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17106,
											"end": 17472,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17620,
											"end": 17623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 17705,
											"end": 17707,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 17700,
											"end": 17703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 17641,
											"end": 17708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17634,
											"end": 17708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17634,
											"end": 17708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 17806,
											"end": 17809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 17717,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17835,
											"end": 17837,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17830,
											"end": 17833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17826,
											"end": 17838,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17819,
											"end": 17838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17819,
											"end": 17838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17478,
											"end": 17844,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17850,
											"end": 18216,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 17850,
											"end": 18216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17992,
											"end": 17995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18013,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 18077,
											"end": 18079,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 18072,
											"end": 18075,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18013,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 18013,
											"end": 18080,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18013,
											"end": 18080,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 18013,
											"end": 18080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18089,
											"end": 18182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 18178,
											"end": 18181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18089,
											"end": 18182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 18089,
											"end": 18182,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18089,
											"end": 18182,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 18089,
											"end": 18182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18207,
											"end": 18209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18202,
											"end": 18205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18198,
											"end": 18210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18191,
											"end": 18210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18191,
											"end": 18210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17850,
											"end": 18216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17850,
											"end": 18216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17850,
											"end": 18216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17850,
											"end": 18216,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18222,
											"end": 18588,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 18222,
											"end": 18588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18364,
											"end": 18367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 18449,
											"end": 18451,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 18444,
											"end": 18447,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18385,
											"end": 18452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 18385,
											"end": 18452,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18385,
											"end": 18452,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 18385,
											"end": 18452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18378,
											"end": 18452,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18378,
											"end": 18452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18461,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 18550,
											"end": 18553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18461,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 18461,
											"end": 18554,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18461,
											"end": 18554,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 18461,
											"end": 18554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18579,
											"end": 18581,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18574,
											"end": 18577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18570,
											"end": 18582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18563,
											"end": 18582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18563,
											"end": 18582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18222,
											"end": 18588,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18222,
											"end": 18588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18222,
											"end": 18588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18222,
											"end": 18588,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18594,
											"end": 18960,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 18594,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18736,
											"end": 18739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18757,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 18821,
											"end": 18823,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 18816,
											"end": 18819,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18757,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 18757,
											"end": 18824,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18757,
											"end": 18824,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 18757,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18750,
											"end": 18824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18750,
											"end": 18824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 18922,
											"end": 18925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18833,
											"end": 18926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 18833,
											"end": 18926,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18833,
											"end": 18926,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 18833,
											"end": 18926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18951,
											"end": 18953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18946,
											"end": 18949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18942,
											"end": 18954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18935,
											"end": 18954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18935,
											"end": 18954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18960,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18966,
											"end": 19074,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 18966,
											"end": 19074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19043,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19043,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 19043,
											"end": 19067,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19043,
											"end": 19067,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 19043,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19038,
											"end": 19041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19031,
											"end": 19068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18966,
											"end": 19074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18966,
											"end": 19074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18966,
											"end": 19074,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19080,
											"end": 19198,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 19080,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19167,
											"end": 19191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 19185,
											"end": 19190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19167,
											"end": 19191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 19167,
											"end": 19191,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19167,
											"end": 19191,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 19167,
											"end": 19191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19162,
											"end": 19165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19155,
											"end": 19192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19080,
											"end": 19198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19080,
											"end": 19198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19080,
											"end": 19198,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19381,
											"end": 19384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19403,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 19491,
											"end": 19494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19488,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19403,
											"end": 19495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 19403,
											"end": 19495,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19403,
											"end": 19495,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 19403,
											"end": 19495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19396,
											"end": 19495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19396,
											"end": 19495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19512,
											"end": 19607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 19603,
											"end": 19606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19594,
											"end": 19600,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19512,
											"end": 19607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 19512,
											"end": 19607,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19512,
											"end": 19607,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 19512,
											"end": 19607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19505,
											"end": 19607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19505,
											"end": 19607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19624,
											"end": 19627,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19617,
											"end": 19627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19617,
											"end": 19627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19204,
											"end": 19633,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19962,
											"end": 19966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20000,
											"end": 20003,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 19989,
											"end": 19998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19985,
											"end": 20004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19977,
											"end": 20004,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19977,
											"end": 20004,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20014,
											"end": 20085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 20082,
											"end": 20083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20071,
											"end": 20080,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20067,
											"end": 20084,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20058,
											"end": 20064,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 20014,
											"end": 20085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 20014,
											"end": 20085,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20014,
											"end": 20085,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 20014,
											"end": 20085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20095,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 20163,
											"end": 20165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20152,
											"end": 20161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20148,
											"end": 20166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20139,
											"end": 20145,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20095,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 20095,
											"end": 20167,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20095,
											"end": 20167,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 20095,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20214,
											"end": 20223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20208,
											"end": 20212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20204,
											"end": 20224,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20199,
											"end": 20201,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20188,
											"end": 20197,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20184,
											"end": 20202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20177,
											"end": 20225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20242,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 20345,
											"end": 20349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20336,
											"end": 20342,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20242,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 20242,
											"end": 20350,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20242,
											"end": 20350,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 20242,
											"end": 20350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20234,
											"end": 20350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20234,
											"end": 20350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20397,
											"end": 20406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20391,
											"end": 20395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20387,
											"end": 20407,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20382,
											"end": 20384,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20371,
											"end": 20380,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20367,
											"end": 20385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20360,
											"end": 20408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20425,
											"end": 20533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 20528,
											"end": 20532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20519,
											"end": 20525,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20425,
											"end": 20533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 20425,
											"end": 20533,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20425,
											"end": 20533,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 20425,
											"end": 20533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20417,
											"end": 20533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20417,
											"end": 20533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20581,
											"end": 20590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20575,
											"end": 20579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20571,
											"end": 20591,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20565,
											"end": 20568,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 20554,
											"end": 20563,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20550,
											"end": 20569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20543,
											"end": 20592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20609,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 20680,
											"end": 20684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20671,
											"end": 20677,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20609,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 20609,
											"end": 20685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20609,
											"end": 20685,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 20609,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20601,
											"end": 20685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20601,
											"end": 20685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19639,
											"end": 20692,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20921,
											"end": 20925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20959,
											"end": 20962,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 20948,
											"end": 20957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20936,
											"end": 20963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20936,
											"end": 20963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20973,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 21041,
											"end": 21042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21030,
											"end": 21039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21026,
											"end": 21043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21017,
											"end": 21023,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 20973,
											"end": 21044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 20973,
											"end": 21044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20973,
											"end": 21044,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 20973,
											"end": 21044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21054,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 21122,
											"end": 21124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21111,
											"end": 21120,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21107,
											"end": 21125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21098,
											"end": 21104,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 21054,
											"end": 21126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 21054,
											"end": 21126,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21054,
											"end": 21126,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 21054,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21136,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 21204,
											"end": 21206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21193,
											"end": 21202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21189,
											"end": 21207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21180,
											"end": 21186,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 21136,
											"end": 21208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 21136,
											"end": 21208,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21136,
											"end": 21208,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 21136,
											"end": 21208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21218,
											"end": 21290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 21286,
											"end": 21288,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 21275,
											"end": 21284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21271,
											"end": 21289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21262,
											"end": 21268,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 21218,
											"end": 21290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 21218,
											"end": 21290,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21218,
											"end": 21290,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 21218,
											"end": 21290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21338,
											"end": 21347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21332,
											"end": 21336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21328,
											"end": 21348,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21322,
											"end": 21325,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 21311,
											"end": 21320,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21307,
											"end": 21326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21300,
											"end": 21349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21366,
											"end": 21442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 21437,
											"end": 21441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21428,
											"end": 21434,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21366,
											"end": 21442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 21366,
											"end": 21442,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21366,
											"end": 21442,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 21366,
											"end": 21442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21358,
											"end": 21442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21358,
											"end": 21442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20698,
											"end": 21449,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21598,
											"end": 21602,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21636,
											"end": 21638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21625,
											"end": 21634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21621,
											"end": 21639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21613,
											"end": 21639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21613,
											"end": 21639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21685,
											"end": 21694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21679,
											"end": 21683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21675,
											"end": 21695,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21671,
											"end": 21672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21660,
											"end": 21669,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21656,
											"end": 21673,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21649,
											"end": 21696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21713,
											"end": 21821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 21816,
											"end": 21820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21807,
											"end": 21813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21713,
											"end": 21821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 21713,
											"end": 21821,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21713,
											"end": 21821,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 21713,
											"end": 21821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21705,
											"end": 21821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21705,
											"end": 21821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21455,
											"end": 21828,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22055,
											"end": 22059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22093,
											"end": 22095,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22082,
											"end": 22091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22078,
											"end": 22096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22070,
											"end": 22096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22070,
											"end": 22096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22142,
											"end": 22151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22136,
											"end": 22140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22132,
											"end": 22152,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22128,
											"end": 22129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22117,
											"end": 22126,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22113,
											"end": 22130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22106,
											"end": 22153,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22170,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 22273,
											"end": 22277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22264,
											"end": 22270,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22170,
											"end": 22278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 22170,
											"end": 22278,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22170,
											"end": 22278,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 22170,
											"end": 22278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22162,
											"end": 22278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22162,
											"end": 22278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22325,
											"end": 22334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22319,
											"end": 22323,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22315,
											"end": 22335,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22310,
											"end": 22312,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22299,
											"end": 22308,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22295,
											"end": 22313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22288,
											"end": 22336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22353,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 22456,
											"end": 22460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22447,
											"end": 22453,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22353,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 22353,
											"end": 22461,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22353,
											"end": 22461,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 22353,
											"end": 22461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22345,
											"end": 22461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22345,
											"end": 22461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 22468,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22561,
											"end": 22565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22599,
											"end": 22601,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22584,
											"end": 22602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22576,
											"end": 22602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22576,
											"end": 22602,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22612,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 22674,
											"end": 22675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22663,
											"end": 22672,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22659,
											"end": 22676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22650,
											"end": 22656,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22612,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 22612,
											"end": 22677,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22612,
											"end": 22677,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 22612,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22474,
											"end": 22684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22803,
											"end": 22807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22841,
											"end": 22843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22830,
											"end": 22839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22826,
											"end": 22844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22818,
											"end": 22844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22818,
											"end": 22844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22890,
											"end": 22899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22884,
											"end": 22888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22880,
											"end": 22900,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22876,
											"end": 22877,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22865,
											"end": 22874,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22861,
											"end": 22878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22854,
											"end": 22901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 22996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 22991,
											"end": 22995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22982,
											"end": 22988,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 22996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 22918,
											"end": 22996,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22918,
											"end": 22996,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 22918,
											"end": 22996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22910,
											"end": 22996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22910,
											"end": 22996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22690,
											"end": 23003,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23009,
											"end": 23428,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 23009,
											"end": 23428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23175,
											"end": 23179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23213,
											"end": 23215,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23202,
											"end": 23211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23198,
											"end": 23216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23190,
											"end": 23216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23190,
											"end": 23216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23262,
											"end": 23271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23256,
											"end": 23260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23252,
											"end": 23272,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23248,
											"end": 23249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23237,
											"end": 23246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23233,
											"end": 23250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23226,
											"end": 23273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23290,
											"end": 23421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 23416,
											"end": 23420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23290,
											"end": 23421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 23290,
											"end": 23421,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23290,
											"end": 23421,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 23290,
											"end": 23421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23282,
											"end": 23421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23282,
											"end": 23421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23009,
											"end": 23428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23009,
											"end": 23428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23009,
											"end": 23428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23009,
											"end": 23428,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23434,
											"end": 23853,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 23434,
											"end": 23853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23600,
											"end": 23604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23638,
											"end": 23640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23627,
											"end": 23636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23623,
											"end": 23641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23615,
											"end": 23641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23615,
											"end": 23641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23687,
											"end": 23696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23681,
											"end": 23685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23677,
											"end": 23697,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23673,
											"end": 23674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23662,
											"end": 23671,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23658,
											"end": 23675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23651,
											"end": 23698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23715,
											"end": 23846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 23841,
											"end": 23845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23715,
											"end": 23846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 23715,
											"end": 23846,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23715,
											"end": 23846,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 23715,
											"end": 23846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23707,
											"end": 23846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23707,
											"end": 23846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23434,
											"end": 23853,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23434,
											"end": 23853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23434,
											"end": 23853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23434,
											"end": 23853,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23859,
											"end": 24278,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 23859,
											"end": 24278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24025,
											"end": 24029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24063,
											"end": 24065,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24052,
											"end": 24061,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24048,
											"end": 24066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24040,
											"end": 24066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24040,
											"end": 24066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24112,
											"end": 24121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24106,
											"end": 24110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24102,
											"end": 24122,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24098,
											"end": 24099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24087,
											"end": 24096,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24083,
											"end": 24100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24076,
											"end": 24123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24140,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 24266,
											"end": 24270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24140,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 24140,
											"end": 24271,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24140,
											"end": 24271,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 24140,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24132,
											"end": 24271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24132,
											"end": 24271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23859,
											"end": 24278,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23859,
											"end": 24278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23859,
											"end": 24278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23859,
											"end": 24278,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24284,
											"end": 24703,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 24284,
											"end": 24703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24450,
											"end": 24454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24488,
											"end": 24490,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24477,
											"end": 24486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24473,
											"end": 24491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24465,
											"end": 24491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24465,
											"end": 24491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24537,
											"end": 24546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24531,
											"end": 24535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24527,
											"end": 24547,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24523,
											"end": 24524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24512,
											"end": 24521,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24508,
											"end": 24525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24501,
											"end": 24548,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24565,
											"end": 24696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 24691,
											"end": 24695,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24565,
											"end": 24696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 24565,
											"end": 24696,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24565,
											"end": 24696,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 24565,
											"end": 24696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24557,
											"end": 24696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24557,
											"end": 24696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24284,
											"end": 24703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24284,
											"end": 24703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24284,
											"end": 24703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24284,
											"end": 24703,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24709,
											"end": 25128,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 24709,
											"end": 25128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24875,
											"end": 24879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24913,
											"end": 24915,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24902,
											"end": 24911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24898,
											"end": 24916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24890,
											"end": 24916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24890,
											"end": 24916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24962,
											"end": 24971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24956,
											"end": 24960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24952,
											"end": 24972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24948,
											"end": 24949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24937,
											"end": 24946,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24933,
											"end": 24950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24926,
											"end": 24973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24990,
											"end": 25121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 25116,
											"end": 25120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24990,
											"end": 25121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 24990,
											"end": 25121,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24990,
											"end": 25121,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 24990,
											"end": 25121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24982,
											"end": 25121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24982,
											"end": 25121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24709,
											"end": 25128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24709,
											"end": 25128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24709,
											"end": 25128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24709,
											"end": 25128,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25134,
											"end": 25553,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 25134,
											"end": 25553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25300,
											"end": 25304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25338,
											"end": 25340,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25327,
											"end": 25336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25323,
											"end": 25341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25315,
											"end": 25341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25387,
											"end": 25396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25381,
											"end": 25385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25377,
											"end": 25397,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25373,
											"end": 25374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25362,
											"end": 25371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25358,
											"end": 25375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25351,
											"end": 25398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25415,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 25541,
											"end": 25545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25415,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 25415,
											"end": 25546,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25415,
											"end": 25546,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 25415,
											"end": 25546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25407,
											"end": 25546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25407,
											"end": 25546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25134,
											"end": 25553,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25134,
											"end": 25553,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25134,
											"end": 25553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25134,
											"end": 25553,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25559,
											"end": 25978,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 25559,
											"end": 25978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25725,
											"end": 25729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25763,
											"end": 25765,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25752,
											"end": 25761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25748,
											"end": 25766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25740,
											"end": 25766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25740,
											"end": 25766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25812,
											"end": 25821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25806,
											"end": 25810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25802,
											"end": 25822,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25798,
											"end": 25799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25787,
											"end": 25796,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25783,
											"end": 25800,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25776,
											"end": 25823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25840,
											"end": 25971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 25966,
											"end": 25970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25840,
											"end": 25971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 25840,
											"end": 25971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25840,
											"end": 25971,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 25840,
											"end": 25971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25832,
											"end": 25971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25832,
											"end": 25971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25559,
											"end": 25978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25559,
											"end": 25978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25559,
											"end": 25978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25559,
											"end": 25978,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25984,
											"end": 26403,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 25984,
											"end": 26403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26150,
											"end": 26154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26188,
											"end": 26190,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26177,
											"end": 26186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26173,
											"end": 26191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26165,
											"end": 26191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26165,
											"end": 26191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26237,
											"end": 26246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26231,
											"end": 26235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26227,
											"end": 26247,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26223,
											"end": 26224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26212,
											"end": 26221,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26208,
											"end": 26225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26201,
											"end": 26248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26265,
											"end": 26396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 26391,
											"end": 26395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26265,
											"end": 26396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 26265,
											"end": 26396,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26265,
											"end": 26396,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 26265,
											"end": 26396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26257,
											"end": 26396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26257,
											"end": 26396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25984,
											"end": 26403,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25984,
											"end": 26403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25984,
											"end": 26403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25984,
											"end": 26403,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26409,
											"end": 26828,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 26409,
											"end": 26828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26575,
											"end": 26579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26613,
											"end": 26615,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26602,
											"end": 26611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26598,
											"end": 26616,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26590,
											"end": 26616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26590,
											"end": 26616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26662,
											"end": 26671,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26656,
											"end": 26660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26652,
											"end": 26672,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26648,
											"end": 26649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26637,
											"end": 26646,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26633,
											"end": 26650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26626,
											"end": 26673,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26690,
											"end": 26821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 26816,
											"end": 26820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26690,
											"end": 26821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 26690,
											"end": 26821,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26690,
											"end": 26821,
											"name": "tag",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 26690,
											"end": 26821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26682,
											"end": 26821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26682,
											"end": 26821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26409,
											"end": 26828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26409,
											"end": 26828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26409,
											"end": 26828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26409,
											"end": 26828,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26834,
											"end": 27253,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 26834,
											"end": 27253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27000,
											"end": 27004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27038,
											"end": 27040,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27027,
											"end": 27036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27023,
											"end": 27041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27015,
											"end": 27041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27015,
											"end": 27041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27087,
											"end": 27096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27081,
											"end": 27085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27077,
											"end": 27097,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27073,
											"end": 27074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27062,
											"end": 27071,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27058,
											"end": 27075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27051,
											"end": 27098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27115,
											"end": 27246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 27241,
											"end": 27245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27115,
											"end": 27246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 27115,
											"end": 27246,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27115,
											"end": 27246,
											"name": "tag",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 27115,
											"end": 27246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27107,
											"end": 27246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27107,
											"end": 27246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26834,
											"end": 27253,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26834,
											"end": 27253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26834,
											"end": 27253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26834,
											"end": 27253,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27259,
											"end": 27678,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 27259,
											"end": 27678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27425,
											"end": 27429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27463,
											"end": 27465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27452,
											"end": 27461,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27448,
											"end": 27466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27440,
											"end": 27466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27440,
											"end": 27466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27512,
											"end": 27521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27506,
											"end": 27510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27502,
											"end": 27522,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27498,
											"end": 27499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27487,
											"end": 27496,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27483,
											"end": 27500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27476,
											"end": 27523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27540,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 27666,
											"end": 27670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27540,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 27540,
											"end": 27671,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27540,
											"end": 27671,
											"name": "tag",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 27540,
											"end": 27671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27532,
											"end": 27671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27532,
											"end": 27671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27259,
											"end": 27678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27259,
											"end": 27678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27259,
											"end": 27678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27259,
											"end": 27678,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27684,
											"end": 28103,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 27684,
											"end": 28103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27850,
											"end": 27854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27888,
											"end": 27890,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27877,
											"end": 27886,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27865,
											"end": 27891,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27865,
											"end": 27891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27937,
											"end": 27946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27931,
											"end": 27935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27927,
											"end": 27947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27923,
											"end": 27924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27912,
											"end": 27921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27908,
											"end": 27925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27901,
											"end": 27948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27965,
											"end": 28096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 28091,
											"end": 28095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27965,
											"end": 28096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 27965,
											"end": 28096,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27965,
											"end": 28096,
											"name": "tag",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 27965,
											"end": 28096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27957,
											"end": 28096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27957,
											"end": 28096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 28103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 28103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 28103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27684,
											"end": 28103,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28202,
											"end": 28206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28240,
											"end": 28242,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28229,
											"end": 28238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28225,
											"end": 28243,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28217,
											"end": 28243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28217,
											"end": 28243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 28321,
											"end": 28322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28310,
											"end": 28319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28306,
											"end": 28323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28297,
											"end": 28303,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28253,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 28253,
											"end": 28324,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28253,
											"end": 28324,
											"name": "tag",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 28253,
											"end": 28324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28109,
											"end": 28331,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28458,
											"end": 28462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28496,
											"end": 28498,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 28485,
											"end": 28494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28481,
											"end": 28499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28473,
											"end": 28499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28473,
											"end": 28499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28509,
											"end": 28580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 28577,
											"end": 28578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28566,
											"end": 28575,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28562,
											"end": 28579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28553,
											"end": 28559,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 28509,
											"end": 28580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 28509,
											"end": 28580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28509,
											"end": 28580,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 28509,
											"end": 28580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28590,
											"end": 28662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 28658,
											"end": 28660,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28647,
											"end": 28656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28643,
											"end": 28661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28634,
											"end": 28640,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28590,
											"end": 28662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 28590,
											"end": 28662,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28590,
											"end": 28662,
											"name": "tag",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 28590,
											"end": 28662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28337,
											"end": 28669,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28675,
											"end": 28804,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 28675,
											"end": 28804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28709,
											"end": 28715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "tag",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 28736,
											"end": 28756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28726,
											"end": 28756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28726,
											"end": 28756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28765,
											"end": 28798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 28793,
											"end": 28797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28785,
											"end": 28791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28765,
											"end": 28798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 28765,
											"end": 28798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28765,
											"end": 28798,
											"name": "tag",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 28765,
											"end": 28798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28675,
											"end": 28804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28675,
											"end": 28804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28675,
											"end": 28804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28675,
											"end": 28804,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28810,
											"end": 28885,
											"name": "tag",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 28810,
											"end": 28885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28843,
											"end": 28849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28876,
											"end": 28878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 28870,
											"end": 28879,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 28860,
											"end": 28879,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28860,
											"end": 28879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28810,
											"end": 28885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28810,
											"end": 28885,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28891,
											"end": 29202,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 28891,
											"end": 29202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28968,
											"end": 28972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29058,
											"end": 29076,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29050,
											"end": 29056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29047,
											"end": 29077,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29044,
											"end": 29100,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29044,
											"end": 29100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 29044,
											"end": 29100,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29080,
											"end": 29098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 29080,
											"end": 29098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 29080,
											"end": 29098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29080,
											"end": 29098,
											"name": "tag",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 29080,
											"end": 29098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29044,
											"end": 29100,
											"name": "tag",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 29044,
											"end": 29100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29130,
											"end": 29134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29122,
											"end": 29128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29118,
											"end": 29135,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 29110,
											"end": 29135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29110,
											"end": 29135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29190,
											"end": 29194,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29184,
											"end": 29188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29180,
											"end": 29195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29172,
											"end": 29195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29172,
											"end": 29195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28891,
											"end": 29202,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28891,
											"end": 29202,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28891,
											"end": 29202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28891,
											"end": 29202,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29208,
											"end": 29519,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 29208,
											"end": 29519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29285,
											"end": 29289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29375,
											"end": 29393,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29367,
											"end": 29373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29364,
											"end": 29394,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29361,
											"end": 29417,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29361,
											"end": 29417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 29361,
											"end": 29417,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29397,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 29397,
											"end": 29415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 29397,
											"end": 29415,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29397,
											"end": 29415,
											"name": "tag",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 29397,
											"end": 29415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29361,
											"end": 29417,
											"name": "tag",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 29361,
											"end": 29417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29447,
											"end": 29451,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29439,
											"end": 29445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29435,
											"end": 29452,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 29427,
											"end": 29452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29427,
											"end": 29452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29507,
											"end": 29511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29501,
											"end": 29505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29497,
											"end": 29512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29489,
											"end": 29512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29489,
											"end": 29512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29208,
											"end": 29519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29208,
											"end": 29519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29208,
											"end": 29519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29208,
											"end": 29519,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29525,
											"end": 29832,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 29525,
											"end": 29832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29586,
											"end": 29590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29676,
											"end": 29694,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29668,
											"end": 29674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29665,
											"end": 29695,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29662,
											"end": 29718,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29662,
											"end": 29718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 29662,
											"end": 29718,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29698,
											"end": 29716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 29698,
											"end": 29716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 29698,
											"end": 29716,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29698,
											"end": 29716,
											"name": "tag",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 29698,
											"end": 29716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29662,
											"end": 29718,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 29662,
											"end": 29718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29736,
											"end": 29765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 29758,
											"end": 29764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29736,
											"end": 29765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 29736,
											"end": 29765,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29736,
											"end": 29765,
											"name": "tag",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 29736,
											"end": 29765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29728,
											"end": 29765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29728,
											"end": 29765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29820,
											"end": 29824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29814,
											"end": 29818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29810,
											"end": 29825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29802,
											"end": 29825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29802,
											"end": 29825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29525,
											"end": 29832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29525,
											"end": 29832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29525,
											"end": 29832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29525,
											"end": 29832,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29838,
											"end": 29970,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 29838,
											"end": 29970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29905,
											"end": 29909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29920,
											"end": 29931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29920,
											"end": 29931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29958,
											"end": 29962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29953,
											"end": 29956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29949,
											"end": 29963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29941,
											"end": 29963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29941,
											"end": 29963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29838,
											"end": 29970,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29838,
											"end": 29970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29838,
											"end": 29970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29838,
											"end": 29970,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29976,
											"end": 30117,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 29976,
											"end": 30117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30025,
											"end": 30029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30048,
											"end": 30051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30040,
											"end": 30051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30040,
											"end": 30051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30071,
											"end": 30074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30068,
											"end": 30069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30061,
											"end": 30075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30105,
											"end": 30109,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30102,
											"end": 30103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30092,
											"end": 30110,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 30084,
											"end": 30110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30084,
											"end": 30110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29976,
											"end": 30117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29976,
											"end": 30117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29976,
											"end": 30117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29976,
											"end": 30117,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30123,
											"end": 30237,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 30123,
											"end": 30237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30190,
											"end": 30196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30224,
											"end": 30229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30218,
											"end": 30230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30208,
											"end": 30230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30208,
											"end": 30230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30123,
											"end": 30237,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30123,
											"end": 30237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30123,
											"end": 30237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30123,
											"end": 30237,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30243,
											"end": 30341,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 30243,
											"end": 30341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30294,
											"end": 30300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30328,
											"end": 30333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30322,
											"end": 30334,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30312,
											"end": 30334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30312,
											"end": 30334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30243,
											"end": 30341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30243,
											"end": 30341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30243,
											"end": 30341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30243,
											"end": 30341,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30347,
											"end": 30446,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 30347,
											"end": 30446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30399,
											"end": 30405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30433,
											"end": 30438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30427,
											"end": 30439,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 30417,
											"end": 30439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30417,
											"end": 30439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30347,
											"end": 30446,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30347,
											"end": 30446,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30347,
											"end": 30446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30347,
											"end": 30446,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30452,
											"end": 30565,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 30452,
											"end": 30565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30522,
											"end": 30526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30554,
											"end": 30558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30549,
											"end": 30552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30545,
											"end": 30559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30537,
											"end": 30559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30537,
											"end": 30559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30452,
											"end": 30565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30452,
											"end": 30565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30452,
											"end": 30565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30452,
											"end": 30565,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30670,
											"end": 30681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30704,
											"end": 30710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30699,
											"end": 30702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30692,
											"end": 30711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30744,
											"end": 30748,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30739,
											"end": 30742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30735,
											"end": 30749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30720,
											"end": 30749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30720,
											"end": 30749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30571,
											"end": 30755,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30844,
											"end": 30855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30878,
											"end": 30884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30873,
											"end": 30876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30866,
											"end": 30885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30918,
											"end": 30922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30913,
											"end": 30916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30909,
											"end": 30923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30894,
											"end": 30923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30894,
											"end": 30923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30761,
											"end": 30929,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31019,
											"end": 31030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31053,
											"end": 31059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31048,
											"end": 31051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31041,
											"end": 31060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31093,
											"end": 31097,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31088,
											"end": 31091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31084,
											"end": 31098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31069,
											"end": 31098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31069,
											"end": 31098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30935,
											"end": 31104,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31212,
											"end": 31223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31249,
											"end": 31252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31234,
											"end": 31252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31234,
											"end": 31252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31110,
											"end": 31258,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31304,
											"end": 31307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31323,
											"end": 31343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 31341,
											"end": 31342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31323,
											"end": 31343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 31323,
											"end": 31343,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31323,
											"end": 31343,
											"name": "tag",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 31323,
											"end": 31343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31318,
											"end": 31343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31318,
											"end": 31343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31357,
											"end": 31377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 31375,
											"end": 31376,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31357,
											"end": 31377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 31357,
											"end": 31377,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31357,
											"end": 31377,
											"name": "tag",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 31357,
											"end": 31377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31352,
											"end": 31377,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31352,
											"end": 31377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31511,
											"end": 31512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31443,
											"end": 31509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31439,
											"end": 31513,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31436,
											"end": 31437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31433,
											"end": 31514,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 31430,
											"end": 31537,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31430,
											"end": 31537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "657"
										},
										{
											"begin": 31430,
											"end": 31537,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31517,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "658"
										},
										{
											"begin": 31517,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 31517,
											"end": 31535,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31517,
											"end": 31535,
											"name": "tag",
											"source": 9,
											"value": "658"
										},
										{
											"begin": 31517,
											"end": 31535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31430,
											"end": 31537,
											"name": "tag",
											"source": 9,
											"value": "657"
										},
										{
											"begin": 31430,
											"end": 31537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31561,
											"end": 31562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31558,
											"end": 31559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31554,
											"end": 31563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31547,
											"end": 31563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31547,
											"end": 31563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31264,
											"end": 31569,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31615,
											"end": 31616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31632,
											"end": 31652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 31650,
											"end": 31651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31632,
											"end": 31652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 31632,
											"end": 31652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31632,
											"end": 31652,
											"name": "tag",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 31632,
											"end": 31652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31627,
											"end": 31652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31627,
											"end": 31652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31666,
											"end": 31686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 31684,
											"end": 31685,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31666,
											"end": 31686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 31666,
											"end": 31686,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31666,
											"end": 31686,
											"name": "tag",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 31666,
											"end": 31686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31661,
											"end": 31686,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31661,
											"end": 31686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31705,
											"end": 31706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31695,
											"end": 31730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 31695,
											"end": 31730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31710,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "664"
										},
										{
											"begin": 31710,
											"end": 31728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 31710,
											"end": 31728,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31710,
											"end": 31728,
											"name": "tag",
											"source": 9,
											"value": "664"
										},
										{
											"begin": 31710,
											"end": 31728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31695,
											"end": 31730,
											"name": "tag",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 31695,
											"end": 31730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31752,
											"end": 31753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31749,
											"end": 31750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31745,
											"end": 31754,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 31740,
											"end": 31754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31740,
											"end": 31754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31575,
											"end": 31760,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31806,
											"end": 31810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31826,
											"end": 31846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "667"
										},
										{
											"begin": 31844,
											"end": 31845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31826,
											"end": 31846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 31826,
											"end": 31846,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31826,
											"end": 31846,
											"name": "tag",
											"source": 9,
											"value": "667"
										},
										{
											"begin": 31826,
											"end": 31846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31821,
											"end": 31846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31821,
											"end": 31846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31860,
											"end": 31880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 31878,
											"end": 31879,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31860,
											"end": 31880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 31860,
											"end": 31880,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31860,
											"end": 31880,
											"name": "tag",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 31860,
											"end": 31880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31855,
											"end": 31880,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31855,
											"end": 31880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31899,
											"end": 31900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31896,
											"end": 31897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31893,
											"end": 31901,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 31890,
											"end": 31924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 31890,
											"end": 31924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 31890,
											"end": 31924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 31904,
											"end": 31922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "670"
										},
										{
											"begin": 31904,
											"end": 31922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 31904,
											"end": 31922,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31904,
											"end": 31922,
											"name": "tag",
											"source": 9,
											"value": "670"
										},
										{
											"begin": 31904,
											"end": 31922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31890,
											"end": 31924,
											"name": "tag",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 31890,
											"end": 31924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31949,
											"end": 31950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31946,
											"end": 31947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31942,
											"end": 31951,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31934,
											"end": 31951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31934,
											"end": 31951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31766,
											"end": 31957,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31963,
											"end": 32059,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 31963,
											"end": 32059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32000,
											"end": 32007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32029,
											"end": 32053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 32047,
											"end": 32052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32029,
											"end": 32053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 32029,
											"end": 32053,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32029,
											"end": 32053,
											"name": "tag",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 32029,
											"end": 32053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32018,
											"end": 32053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32018,
											"end": 32053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31963,
											"end": 32059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31963,
											"end": 32059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31963,
											"end": 32059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31963,
											"end": 32059,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32065,
											"end": 32155,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 32065,
											"end": 32155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32099,
											"end": 32106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32142,
											"end": 32147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32135,
											"end": 32148,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32128,
											"end": 32149,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32117,
											"end": 32149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32117,
											"end": 32149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32065,
											"end": 32155,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32065,
											"end": 32155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32065,
											"end": 32155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32065,
											"end": 32155,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32161,
											"end": 32310,
											"name": "tag",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 32161,
											"end": 32310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32197,
											"end": 32204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32237,
											"end": 32303,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32230,
											"end": 32235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32226,
											"end": 32304,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 32215,
											"end": 32304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32215,
											"end": 32304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32161,
											"end": 32310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32161,
											"end": 32310,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32161,
											"end": 32310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32161,
											"end": 32310,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32316,
											"end": 32442,
											"name": "tag",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 32316,
											"end": 32442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32353,
											"end": 32360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32393,
											"end": 32435,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32386,
											"end": 32391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32382,
											"end": 32436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 32371,
											"end": 32436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32371,
											"end": 32436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32316,
											"end": 32442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32316,
											"end": 32442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32316,
											"end": 32442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32316,
											"end": 32442,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32448,
											"end": 32525,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 32448,
											"end": 32525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32485,
											"end": 32492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32514,
											"end": 32519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32503,
											"end": 32519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32503,
											"end": 32519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32448,
											"end": 32525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32448,
											"end": 32525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32448,
											"end": 32525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32448,
											"end": 32525,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32531,
											"end": 32685,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 32531,
											"end": 32685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32615,
											"end": 32621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32610,
											"end": 32613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32605,
											"end": 32608,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32592,
											"end": 32622,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 32677,
											"end": 32678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32668,
											"end": 32674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32663,
											"end": 32666,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32659,
											"end": 32675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32652,
											"end": 32679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32531,
											"end": 32685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32531,
											"end": 32685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32531,
											"end": 32685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32531,
											"end": 32685,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 32691,
											"end": 32998,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 32691,
											"end": 32998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32759,
											"end": 32760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "tag",
											"source": 9,
											"value": "681"
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32783,
											"end": 32789,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32780,
											"end": 32781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32777,
											"end": 32790,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "683"
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32868,
											"end": 32869,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 32863,
											"end": 32866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32859,
											"end": 32870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32853,
											"end": 32871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 32849,
											"end": 32850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32844,
											"end": 32847,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 32840,
											"end": 32851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32833,
											"end": 32872,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32805,
											"end": 32807,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32802,
											"end": 32803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32798,
											"end": 32808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32793,
											"end": 32808,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32793,
											"end": 32808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "681"
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "tag",
											"source": 9,
											"value": "683"
										},
										{
											"begin": 32769,
											"end": 32882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32900,
											"end": 32906,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32897,
											"end": 32898,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32894,
											"end": 32907,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 32891,
											"end": 32992,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 32891,
											"end": 32992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 32891,
											"end": 32992,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 32980,
											"end": 32981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32971,
											"end": 32977,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 32966,
											"end": 32969,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 32962,
											"end": 32978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32955,
											"end": 32982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32891,
											"end": 32992,
											"name": "tag",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 32891,
											"end": 32992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32740,
											"end": 32998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32691,
											"end": 32998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32691,
											"end": 32998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32691,
											"end": 32998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32691,
											"end": 32998,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33004,
											"end": 33324,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 33004,
											"end": 33324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33048,
											"end": 33054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33085,
											"end": 33086,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 33079,
											"end": 33083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33075,
											"end": 33087,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 33065,
											"end": 33087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33065,
											"end": 33087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33132,
											"end": 33133,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 33126,
											"end": 33130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33122,
											"end": 33134,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 33153,
											"end": 33171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33143,
											"end": 33224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 33143,
											"end": 33224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33209,
											"end": 33213,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 33201,
											"end": 33207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33197,
											"end": 33214,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 33187,
											"end": 33214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33187,
											"end": 33214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33143,
											"end": 33224,
											"name": "tag",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 33143,
											"end": 33224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33271,
											"end": 33273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 33263,
											"end": 33269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33260,
											"end": 33274,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 33240,
											"end": 33258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33237,
											"end": 33275,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 33234,
											"end": 33318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 33234,
											"end": 33318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "687"
										},
										{
											"begin": 33234,
											"end": 33318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33290,
											"end": 33308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "688"
										},
										{
											"begin": 33290,
											"end": 33308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 33290,
											"end": 33308,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33290,
											"end": 33308,
											"name": "tag",
											"source": 9,
											"value": "688"
										},
										{
											"begin": 33290,
											"end": 33308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33234,
											"end": 33318,
											"name": "tag",
											"source": 9,
											"value": "687"
										},
										{
											"begin": 33234,
											"end": 33318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33055,
											"end": 33324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33004,
											"end": 33324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33004,
											"end": 33324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33004,
											"end": 33324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33004,
											"end": 33324,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33330,
											"end": 33611,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 33330,
											"end": 33611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33413,
											"end": 33440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 33435,
											"end": 33439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33413,
											"end": 33440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 33413,
											"end": 33440,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33413,
											"end": 33440,
											"name": "tag",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 33413,
											"end": 33440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33405,
											"end": 33411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33401,
											"end": 33441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33543,
											"end": 33549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33531,
											"end": 33541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33528,
											"end": 33550,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 33507,
											"end": 33525,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33495,
											"end": 33505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33492,
											"end": 33526,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 33489,
											"end": 33551,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 33486,
											"end": 33574,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 33486,
											"end": 33574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 33486,
											"end": 33574,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33554,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "693"
										},
										{
											"begin": 33554,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 33554,
											"end": 33572,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33554,
											"end": 33572,
											"name": "tag",
											"source": 9,
											"value": "693"
										},
										{
											"begin": 33554,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33486,
											"end": 33574,
											"name": "tag",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 33486,
											"end": 33574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33594,
											"end": 33604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33590,
											"end": 33592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 33583,
											"end": 33605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 33373,
											"end": 33611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33330,
											"end": 33611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33330,
											"end": 33611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33330,
											"end": 33611,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33617,
											"end": 33850,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 33617,
											"end": 33850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33656,
											"end": 33659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33679,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "695"
										},
										{
											"begin": 33697,
											"end": 33702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33679,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 33679,
											"end": 33703,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33679,
											"end": 33703,
											"name": "tag",
											"source": 9,
											"value": "695"
										},
										{
											"begin": 33679,
											"end": 33703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33670,
											"end": 33703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33670,
											"end": 33703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33725,
											"end": 33791,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33718,
											"end": 33723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33715,
											"end": 33792,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 33712,
											"end": 33815,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 33712,
											"end": 33815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 33712,
											"end": 33815,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33795,
											"end": 33813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 33795,
											"end": 33813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 33795,
											"end": 33813,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33795,
											"end": 33813,
											"name": "tag",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 33795,
											"end": 33813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33712,
											"end": 33815,
											"name": "tag",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 33712,
											"end": 33815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33842,
											"end": 33843,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 33835,
											"end": 33840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33831,
											"end": 33844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33824,
											"end": 33844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33824,
											"end": 33844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33617,
											"end": 33850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33617,
											"end": 33850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33617,
											"end": 33850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33617,
											"end": 33850,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33888,
											"end": 33889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33905,
											"end": 33925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "699"
										},
										{
											"begin": 33923,
											"end": 33924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33905,
											"end": 33925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 33905,
											"end": 33925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33905,
											"end": 33925,
											"name": "tag",
											"source": 9,
											"value": "699"
										},
										{
											"begin": 33905,
											"end": 33925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33900,
											"end": 33925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33900,
											"end": 33925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33939,
											"end": 33959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "700"
										},
										{
											"begin": 33957,
											"end": 33958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33939,
											"end": 33959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 33939,
											"end": 33959,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33939,
											"end": 33959,
											"name": "tag",
											"source": 9,
											"value": "700"
										},
										{
											"begin": 33939,
											"end": 33959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33934,
											"end": 33959,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 33934,
											"end": 33959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33978,
											"end": 33979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33968,
											"end": 34003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 33968,
											"end": 34003,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33983,
											"end": 34001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 33983,
											"end": 34001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 33983,
											"end": 34001,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 33983,
											"end": 34001,
											"name": "tag",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 33983,
											"end": 34001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33968,
											"end": 34003,
											"name": "tag",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 33968,
											"end": 34003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34024,
											"end": 34025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 34021,
											"end": 34022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 34017,
											"end": 34026,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 34012,
											"end": 34026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 34012,
											"end": 34026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33856,
											"end": 34032,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 34038,
											"end": 34218,
											"name": "tag",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 34038,
											"end": 34218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34086,
											"end": 34163,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34083,
											"end": 34084,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34076,
											"end": 34164,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34183,
											"end": 34187,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 34180,
											"end": 34181,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 34173,
											"end": 34188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34207,
											"end": 34211,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 34204,
											"end": 34205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34197,
											"end": 34212,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 34224,
											"end": 34404,
											"name": "tag",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 34224,
											"end": 34404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34272,
											"end": 34349,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34269,
											"end": 34270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34262,
											"end": 34350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34369,
											"end": 34373,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 34366,
											"end": 34367,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 34359,
											"end": 34374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34393,
											"end": 34397,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 34390,
											"end": 34391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34383,
											"end": 34398,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 34410,
											"end": 34590,
											"name": "tag",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 34410,
											"end": 34590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34458,
											"end": 34535,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34455,
											"end": 34456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34448,
											"end": 34536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34555,
											"end": 34559,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 34552,
											"end": 34553,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 34545,
											"end": 34560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34579,
											"end": 34583,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 34576,
											"end": 34577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34569,
											"end": 34584,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 34596,
											"end": 34776,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 34596,
											"end": 34776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34644,
											"end": 34721,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34641,
											"end": 34642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34634,
											"end": 34722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34741,
											"end": 34745,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 34738,
											"end": 34739,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 34731,
											"end": 34746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34765,
											"end": 34769,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 34762,
											"end": 34763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34755,
											"end": 34770,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 34782,
											"end": 34962,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 34782,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34830,
											"end": 34907,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34827,
											"end": 34828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34820,
											"end": 34908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34927,
											"end": 34931,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 34924,
											"end": 34925,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 34917,
											"end": 34932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 34951,
											"end": 34955,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 34948,
											"end": 34949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 34941,
											"end": 34956,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 34968,
											"end": 35151,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 34968,
											"end": 35151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35003,
											"end": 35006,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35041,
											"end": 35042,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 35023,
											"end": 35039,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 35020,
											"end": 35043,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 35017,
											"end": 35145,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 35017,
											"end": 35145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 35017,
											"end": 35145,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 35079,
											"end": 35080,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 35076,
											"end": 35077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35073,
											"end": 35074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 35058,
											"end": 35081,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 35101,
											"end": 35135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 35132,
											"end": 35133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35126,
											"end": 35134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 35101,
											"end": 35135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 35101,
											"end": 35135,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 35101,
											"end": 35135,
											"name": "tag",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 35101,
											"end": 35135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35094,
											"end": 35135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 35094,
											"end": 35135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 35017,
											"end": 35145,
											"name": "tag",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 35017,
											"end": 35145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 34968,
											"end": 35151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 34968,
											"end": 35151,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 35157,
											"end": 35274,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 35157,
											"end": 35274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35266,
											"end": 35267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35263,
											"end": 35264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 35256,
											"end": 35268,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 35280,
											"end": 35397,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 35280,
											"end": 35397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35389,
											"end": 35390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35386,
											"end": 35387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 35379,
											"end": 35391,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 35403,
											"end": 35520,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 35403,
											"end": 35520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35512,
											"end": 35513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35509,
											"end": 35510,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 35502,
											"end": 35514,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 35526,
											"end": 35643,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 35526,
											"end": 35643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35635,
											"end": 35636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35632,
											"end": 35633,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 35625,
											"end": 35637,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 35649,
											"end": 35766,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 35649,
											"end": 35766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35758,
											"end": 35759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35755,
											"end": 35756,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 35748,
											"end": 35760,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 35772,
											"end": 35874,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 35772,
											"end": 35874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35813,
											"end": 35819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35864,
											"end": 35866,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 35860,
											"end": 35867,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 35855,
											"end": 35857,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 35848,
											"end": 35853,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 35844,
											"end": 35858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 35840,
											"end": 35868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 35830,
											"end": 35868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 35830,
											"end": 35868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 35772,
											"end": 35874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 35772,
											"end": 35874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 35772,
											"end": 35874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 35772,
											"end": 35874,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 35880,
											"end": 35986,
											"name": "tag",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 35880,
											"end": 35986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 35924,
											"end": 35932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 35973,
											"end": 35978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 35968,
											"end": 35971,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 35964,
											"end": 35979,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 35943,
											"end": 35979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 35943,
											"end": 35979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 35880,
											"end": 35986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 35880,
											"end": 35986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 35880,
											"end": 35986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 35880,
											"end": 35986,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 35992,
											"end": 36231,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 35992,
											"end": 36231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 36132,
											"end": 36166,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 36128,
											"end": 36129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 36120,
											"end": 36126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36116,
											"end": 36130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36109,
											"end": 36167,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36201,
											"end": 36223,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 36196,
											"end": 36198,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 36188,
											"end": 36194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36184,
											"end": 36199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36177,
											"end": 36224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 35992,
											"end": 36231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 35992,
											"end": 36231,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 36237,
											"end": 36471,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 36237,
											"end": 36471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 36377,
											"end": 36411,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 36373,
											"end": 36374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 36365,
											"end": 36371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36361,
											"end": 36375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36354,
											"end": 36412,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36446,
											"end": 36463,
											"name": "PUSH",
											"source": 9,
											"value": "6572206E6F7220617070726F7665640000000000000000000000000000000000"
										},
										{
											"begin": 36441,
											"end": 36443,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 36433,
											"end": 36439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36429,
											"end": 36444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36422,
											"end": 36464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36237,
											"end": 36471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 36237,
											"end": 36471,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 36477,
											"end": 36704,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 36477,
											"end": 36704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 36617,
											"end": 36651,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 36613,
											"end": 36614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 36605,
											"end": 36611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36601,
											"end": 36615,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36594,
											"end": 36652,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36686,
											"end": 36696,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36681,
											"end": 36683,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 36673,
											"end": 36679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36669,
											"end": 36684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36662,
											"end": 36697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36477,
											"end": 36704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 36477,
											"end": 36704,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 36710,
											"end": 36933,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 36710,
											"end": 36933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 36850,
											"end": 36884,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 36846,
											"end": 36847,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 36838,
											"end": 36844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36834,
											"end": 36848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36827,
											"end": 36885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36919,
											"end": 36925,
											"name": "PUSH",
											"source": 9,
											"value": "616E636500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36914,
											"end": 36916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 36906,
											"end": 36912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 36902,
											"end": 36917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 36895,
											"end": 36926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36710,
											"end": 36933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 36710,
											"end": 36933,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 36939,
											"end": 37168,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 36939,
											"end": 37168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 37079,
											"end": 37113,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 37075,
											"end": 37076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 37067,
											"end": 37073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37063,
											"end": 37077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37056,
											"end": 37114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37148,
											"end": 37160,
											"name": "PUSH",
											"source": 9,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 37143,
											"end": 37145,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 37135,
											"end": 37141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37131,
											"end": 37146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37124,
											"end": 37161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 36939,
											"end": 37168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 36939,
											"end": 37168,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 37174,
											"end": 37398,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 37174,
											"end": 37398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 37314,
											"end": 37348,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 37310,
											"end": 37311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 37302,
											"end": 37308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37298,
											"end": 37312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37291,
											"end": 37349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37383,
											"end": 37390,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37378,
											"end": 37380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 37370,
											"end": 37376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37366,
											"end": 37381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37359,
											"end": 37391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37174,
											"end": 37398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 37174,
											"end": 37398,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 37404,
											"end": 37626,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 37404,
											"end": 37626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 37544,
											"end": 37578,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 37540,
											"end": 37541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 37532,
											"end": 37538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37528,
											"end": 37542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37521,
											"end": 37579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37613,
											"end": 37618,
											"name": "PUSH",
											"source": 9,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37608,
											"end": 37610,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 37600,
											"end": 37606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37596,
											"end": 37611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37589,
											"end": 37619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37404,
											"end": 37626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 37404,
											"end": 37626,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 37632,
											"end": 37861,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 37632,
											"end": 37861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 37772,
											"end": 37806,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 37768,
											"end": 37769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 37760,
											"end": 37766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37756,
											"end": 37770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37749,
											"end": 37807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37841,
											"end": 37853,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 37836,
											"end": 37838,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 37828,
											"end": 37834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37824,
											"end": 37839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37817,
											"end": 37854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37632,
											"end": 37861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 37632,
											"end": 37861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 37867,
											"end": 38095,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 37867,
											"end": 38095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38007,
											"end": 38041,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 38003,
											"end": 38004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 37995,
											"end": 38001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 37991,
											"end": 38005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 37984,
											"end": 38042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38076,
											"end": 38087,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38071,
											"end": 38073,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 38063,
											"end": 38069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38059,
											"end": 38074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38052,
											"end": 38088,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 37867,
											"end": 38095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 37867,
											"end": 38095,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 38101,
											"end": 38329,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 38101,
											"end": 38329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38241,
											"end": 38275,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 38237,
											"end": 38238,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 38229,
											"end": 38235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38225,
											"end": 38239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38218,
											"end": 38276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38310,
											"end": 38321,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38305,
											"end": 38307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 38297,
											"end": 38303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38293,
											"end": 38308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38286,
											"end": 38322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38101,
											"end": 38329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38101,
											"end": 38329,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 38335,
											"end": 38562,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 38335,
											"end": 38562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38475,
											"end": 38509,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 38471,
											"end": 38472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 38463,
											"end": 38469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38459,
											"end": 38473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38452,
											"end": 38510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38544,
											"end": 38554,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38539,
											"end": 38541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 38531,
											"end": 38537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38527,
											"end": 38542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38520,
											"end": 38555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38335,
											"end": 38562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38335,
											"end": 38562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 38568,
											"end": 38788,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 38568,
											"end": 38788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38708,
											"end": 38742,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 38704,
											"end": 38705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 38696,
											"end": 38702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38692,
											"end": 38706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38685,
											"end": 38743,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38777,
											"end": 38780,
											"name": "PUSH",
											"source": 9,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38772,
											"end": 38774,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 38764,
											"end": 38770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38760,
											"end": 38775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 38753,
											"end": 38781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 38568,
											"end": 38788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38568,
											"end": 38788,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 38794,
											"end": 39505,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 38794,
											"end": 39505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38833,
											"end": 38836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 38871,
											"end": 38875,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 38853,
											"end": 38869,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 38850,
											"end": 38876,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 38847,
											"end": 38886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 38847,
											"end": 38886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "732"
										},
										{
											"begin": 38847,
											"end": 38886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 38879,
											"end": 38884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 38879,
											"end": 38884,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 38847,
											"end": 38886,
											"name": "tag",
											"source": 9,
											"value": "732"
										},
										{
											"begin": 38847,
											"end": 38886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38908,
											"end": 38928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "733"
										},
										{
											"begin": 38908,
											"end": 38928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 38908,
											"end": 38928,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 38908,
											"end": 38928,
											"name": "tag",
											"source": 9,
											"value": "733"
										},
										{
											"begin": 38908,
											"end": 38928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38983,
											"end": 38984,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 38965,
											"end": 38981,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 38961,
											"end": 38985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 38958,
											"end": 38959,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 38952,
											"end": 38956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 38937,
											"end": 38986,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 39016,
											"end": 39020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39010,
											"end": 39021,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 39115,
											"end": 39131,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 39108,
											"end": 39112,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 39100,
											"end": 39106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 39096,
											"end": 39113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39093,
											"end": 39132,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 39060,
											"end": 39078,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39052,
											"end": 39058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 39049,
											"end": 39079,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 39033,
											"end": 39146,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 39030,
											"end": 39176,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 39030,
											"end": 39176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "734"
										},
										{
											"begin": 39030,
											"end": 39176,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39161,
											"end": 39166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39161,
											"end": 39166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39161,
											"end": 39166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 39161,
											"end": 39166,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 39030,
											"end": 39176,
											"name": "tag",
											"source": 9,
											"value": "734"
										},
										{
											"begin": 39030,
											"end": 39176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39207,
											"end": 39213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39201,
											"end": 39205,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 39197,
											"end": 39214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39243,
											"end": 39246,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39237,
											"end": 39247,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 39270,
											"end": 39288,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39262,
											"end": 39268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39259,
											"end": 39289,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 39256,
											"end": 39299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 39256,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "735"
										},
										{
											"begin": 39256,
											"end": 39299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39292,
											"end": 39297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39292,
											"end": 39297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39292,
											"end": 39297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39292,
											"end": 39297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39292,
											"end": 39297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 39292,
											"end": 39297,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 39256,
											"end": 39299,
											"name": "tag",
											"source": 9,
											"value": "735"
										},
										{
											"begin": 39256,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39340,
											"end": 39346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39333,
											"end": 39337,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 39328,
											"end": 39331,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 39324,
											"end": 39338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39320,
											"end": 39347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39399,
											"end": 39400,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 39381,
											"end": 39397,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 39377,
											"end": 39401,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 39371,
											"end": 39375,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 39367,
											"end": 39402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39362,
											"end": 39365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39359,
											"end": 39403,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 39356,
											"end": 39413,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 39356,
											"end": 39413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "736"
										},
										{
											"begin": 39356,
											"end": 39413,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 39406,
											"end": 39411,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 39356,
											"end": 39413,
											"name": "tag",
											"source": 9,
											"value": "736"
										},
										{
											"begin": 39356,
											"end": 39413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39423,
											"end": 39480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "737"
										},
										{
											"begin": 39471,
											"end": 39477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 39465,
											"end": 39469,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 39461,
											"end": 39478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39453,
											"end": 39459,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 39449,
											"end": 39479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 39443,
											"end": 39447,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 39423,
											"end": 39480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 39423,
											"end": 39480,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 39423,
											"end": 39480,
											"name": "tag",
											"source": 9,
											"value": "737"
										},
										{
											"begin": 39423,
											"end": 39480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39496,
											"end": 39499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 39489,
											"end": 39499,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 39489,
											"end": 39499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38837,
											"end": 39505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38837,
											"end": 39505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38837,
											"end": 39505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38837,
											"end": 39505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38837,
											"end": 39505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 38794,
											"end": 39505,
											"name": "tag",
											"source": 9,
											"value": "731"
										},
										{
											"begin": 38794,
											"end": 39505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 38794,
											"end": 39505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 38794,
											"end": 39505,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 39511,
											"end": 39633,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 39511,
											"end": 39633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39584,
											"end": 39608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 39602,
											"end": 39607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39584,
											"end": 39608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 39584,
											"end": 39608,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 39584,
											"end": 39608,
											"name": "tag",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 39584,
											"end": 39608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39577,
											"end": 39582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39574,
											"end": 39609,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 39564,
											"end": 39627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "740"
										},
										{
											"begin": 39564,
											"end": 39627,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39623,
											"end": 39624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 39620,
											"end": 39621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39613,
											"end": 39625,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 39564,
											"end": 39627,
											"name": "tag",
											"source": 9,
											"value": "740"
										},
										{
											"begin": 39564,
											"end": 39627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39511,
											"end": 39633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39511,
											"end": 39633,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 39639,
											"end": 39755,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 39639,
											"end": 39755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39709,
											"end": 39730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 39724,
											"end": 39729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39709,
											"end": 39730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 39709,
											"end": 39730,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 39709,
											"end": 39730,
											"name": "tag",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 39709,
											"end": 39730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39702,
											"end": 39707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39699,
											"end": 39731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 39689,
											"end": 39749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "743"
										},
										{
											"begin": 39689,
											"end": 39749,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39745,
											"end": 39746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 39742,
											"end": 39743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39735,
											"end": 39747,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 39689,
											"end": 39749,
											"name": "tag",
											"source": 9,
											"value": "743"
										},
										{
											"begin": 39689,
											"end": 39749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39639,
											"end": 39755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39639,
											"end": 39755,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 39761,
											"end": 39881,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 39761,
											"end": 39881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39833,
											"end": 39856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 39850,
											"end": 39855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39833,
											"end": 39856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 39833,
											"end": 39856,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 39833,
											"end": 39856,
											"name": "tag",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 39833,
											"end": 39856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39826,
											"end": 39831,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39823,
											"end": 39857,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 39813,
											"end": 39875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 39813,
											"end": 39875,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39871,
											"end": 39872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 39868,
											"end": 39869,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39861,
											"end": 39873,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 39813,
											"end": 39875,
											"name": "tag",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 39813,
											"end": 39875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39761,
											"end": 39881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39761,
											"end": 39881,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 39887,
											"end": 40009,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 39887,
											"end": 40009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39960,
											"end": 39984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "748"
										},
										{
											"begin": 39978,
											"end": 39983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39960,
											"end": 39984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 39960,
											"end": 39984,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 39960,
											"end": 39984,
											"name": "tag",
											"source": 9,
											"value": "748"
										},
										{
											"begin": 39960,
											"end": 39984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39953,
											"end": 39958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 39950,
											"end": 39985,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 39940,
											"end": 40003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 39940,
											"end": 40003,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 39999,
											"end": 40000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 39996,
											"end": 39997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 39989,
											"end": 40001,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 39940,
											"end": 40003,
											"name": "tag",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 39940,
											"end": 40003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 39887,
											"end": 40009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 39887,
											"end": 40009,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"name()": "06fdde03",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0x7cc4e7c4325a6bd6445f757cd8dc13839d130a638a97e46ca76d9894766ebf8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5361767bdbc08a5b04f66a2fba13ff75171af4fe3a17f567c1d3d3a69d4bd19\",\"dweb:/ipfs/QmS9ZqJeShhYoHZBFs64k48pKwe4j7NXCRuDxk9tHQLzAS\"]},\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ERC1155.sol\":{\"keccak256\":\"0x92b7de4f0d8c0a3274d7216cddd75153c417dcdf1ba2c53d4d2d79a39c8e38af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69ed8afc2136223c6a8d8bf706d3869d1d3f8d01d6583ce6afa2b0f2a968d3ec\",\"dweb:/ipfs/QmbY39zymcgrtQ7FRvbVVg3t2sMRmjXT2HmhGeejSvzX6c\"]},\"ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"IERC1155.sol\":{\"keccak256\":\"0x587db26034adaa66fa8a31ee6de099be4d8114c2c044565deddcd049179159b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b88b1f7b6eab9bb0dd62611490e7df9311d3015dc4d41345e71681cd3de3b81b\",\"dweb:/ipfs/QmRGejTzHihs7dyvTvpuPWVs9LMu25BMGoQGg8LN8toC4y\"]},\"IERC1155MetadataURI.sol\":{\"keccak256\":\"0x745a9a0f7b50bcc511f403bec236cae8d561dd73c08428e3ad0ac66c1c441c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a919c492a0d32f4cfd9bb685d048857967fda19a7d681e4bf1db2c7c4e446d1\",\"dweb:/ipfs/Qmco96PfKfpXVXzfuursxr9sSWUVNSrXoboY1LJe2SevLP\"]},\"IERC1155Receiver.sol\":{\"keccak256\":\"0xc48cda1346a8428f774c22cf73103051524df9eb54aa8617727890a10400e4f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f4f8461733f286b4b9092ecdcfc4af12624f38e841f04c42aa718361eaf92a3\",\"dweb:/ipfs/QmXbUpLdRVwsDhckEXiRKSZgQjEPsDgr1vfA92rfRfcvNb\"]},\"IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"Strings.sol\":{\"keccak256\":\"0x2340652d89057e68adedd2bc12877a3fedace72562b1d8b03643e8ae2fbe973f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6377c8fcde8315dddfcf87b317b89cf2cb48aaa94df1a215997efe34f9bc0c96\",\"dweb:/ipfs/QmdC6rkyzfJ6YHpypKztoerPYJAwRpXN4BEnPBtdv7g2id\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 374,
								"contract": "ERC1155.sol:ERC1155",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 376,
								"contract": "ERC1155.sol:ERC1155",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 382,
								"contract": "ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 388,
								"contract": "ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 390,
								"contract": "ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155.sol\":{\"keccak256\":\"0x587db26034adaa66fa8a31ee6de099be4d8114c2c044565deddcd049179159b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b88b1f7b6eab9bb0dd62611490e7df9311d3015dc4d41345e71681cd3de3b81b\",\"dweb:/ipfs/QmRGejTzHihs7dyvTvpuPWVs9LMu25BMGoQGg8LN8toC4y\"]},\"IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155.sol\":{\"keccak256\":\"0x587db26034adaa66fa8a31ee6de099be4d8114c2c044565deddcd049179159b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b88b1f7b6eab9bb0dd62611490e7df9311d3015dc4d41345e71681cd3de3b81b\",\"dweb:/ipfs/QmRGejTzHihs7dyvTvpuPWVs9LMu25BMGoQGg8LN8toC4y\"]},\"IERC1155MetadataURI.sol\":{\"keccak256\":\"0x745a9a0f7b50bcc511f403bec236cae8d561dd73c08428e3ad0ac66c1c441c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a919c492a0d32f4cfd9bb685d048857967fda19a7d681e4bf1db2c7c4e446d1\",\"dweb:/ipfs/Qmco96PfKfpXVXzfuursxr9sSWUVNSrXoboY1LJe2SevLP\"]},\"IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC1155Receiver.sol\":{\"keccak256\":\"0xc48cda1346a8428f774c22cf73103051524df9eb54aa8617727890a10400e4f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f4f8461733f286b4b9092ecdcfc4af12624f38e841f04c42aa718361eaf92a3\",\"dweb:/ipfs/QmXbUpLdRVwsDhckEXiRKSZgQjEPsDgr1vfA92rfRfcvNb\"]},\"IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Strings.sol\":169:2470  library Strings {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Strings.sol\":169:2470  library Strings {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1101b63c6d1fc63d228e3ac87009e2a610a1ef16352618e74feb2406ebab49864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1101b63c6d1fc63d228e3ac87009e2a610a1ef16352618e74feb2406ebab49864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 LT SHL PUSH4 0xC6D1FC63 0xD2 0x28 0xE3 0xAC DUP8 STOP SWAP15 0x2A PUSH2 0xA1E CALL PUSH4 0x52618E74 INVALID 0xB2 BLOCKHASH PUSH15 0xBAB49864736F6C6343000807003300 ",
							"sourceMap": "169:2301:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1101b63c6d1fc63d228e3ac87009e2a610a1ef16352618e74feb2406ebab49864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 LT SHL PUSH4 0xC6D1FC63 0xD2 0x28 0xE3 0xAC DUP8 STOP SWAP15 0x2A PUSH2 0xA1E CALL PUSH4 0x52618E74 INVALID 0xB2 BLOCKHASH PUSH15 0xBAB49864736F6C6343000807003300 ",
							"sourceMap": "169:2301:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 169,
									"end": 2470,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1101b63c6d1fc63d228e3ac87009e2a610a1ef16352618e74feb2406ebab49864736f6c63430008070033",
									".code": [
										{
											"begin": 169,
											"end": 2470,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 169,
											"end": 2470,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Strings.sol\":{\"keccak256\":\"0x2340652d89057e68adedd2bc12877a3fedace72562b1d8b03643e8ae2fbe973f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6377c8fcde8315dddfcf87b317b89cf2cb48aaa94df1a215997efe34f9bc0c96\",\"dweb:/ipfs/QmdC6rkyzfJ6YHpypKztoerPYJAwRpXN4BEnPBtdv7g2id\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							329
						]
					},
					"id": 330,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 329,
							"linearizedBaseContracts": [
								329
							],
							"name": "Address",
							"nameLocation": "210:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1276:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1505:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1527:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1505:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1498:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1219:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1270:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:6:0"
									},
									"scope": 329,
									"src": "1210:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2542:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2569:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2561:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2561:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2561:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2586:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2553:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2645:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2640:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2658:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2658:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2680:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2658:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2702:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1544:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2480:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2506:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2490:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:0"
									},
									"scope": 329,
									"src": "2471:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3639:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3687:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3696:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "3657:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 67,
												"nodeType": "Return",
												"src": "3650:79:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2796:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3559:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3588:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "3625:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:14:0"
									},
									"scope": 329,
									"src": "3550:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "4118:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4158:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4166:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4172:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 85,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "4175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 81,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4136:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4136:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 87,
												"nodeType": "Return",
												"src": "4129:59:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3745:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3976:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4007:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3999:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 73,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 75,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3988:97:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4104:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4103:14:0"
									},
									"scope": 329,
									"src": "3967:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4718:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4766:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4779:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 101,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															109,
															153
														],
														"referencedDeclaration": 153,
														"src": "4736:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4736:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 100,
												"id": 107,
												"nodeType": "Return",
												"src": "4729:94:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4204:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4580:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4620:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4612:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4650:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4637:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4637:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4673:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4665:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:84:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4704:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:14:0"
									},
									"scope": 329,
									"src": "4571:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "5271:271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5298:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$329",
																				"typeString": "library Address"
																			}
																		],
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5290:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5290:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5290:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5290:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5315:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5290:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5322:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5282:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5282:81:0"
											},
											{
												"assignments": [
													135,
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5380:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5375:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5402:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "5389:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 136,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5389:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"id": 142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "5442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 138,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5416:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5416:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "5435:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5416:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5416:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5374:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5492:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "5500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 148,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5509:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 149,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "5521:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 145,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5465:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5465:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 151,
												"nodeType": "Return",
												"src": "5458:76:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4839:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5096:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5166:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5153:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5181:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5219:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5205:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5205:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5117:121:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "5257:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5257:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5256:14:0"
									},
									"scope": 329,
									"src": "5087:455:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "5827:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5872:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5878:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 163,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															199
														],
														"referencedDeclaration": 199,
														"src": "5845:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5845:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "5838:80:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "5550:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5736:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5784:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5771:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5754:35:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5813:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:0"
									},
									"scope": 329,
									"src": "5727:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6280:171:0",
										"statements": [
											{
												"assignments": [
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6297:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6292:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 182,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6319:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6306:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 184,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"arguments": [
														{
															"id": 188,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "6351:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6333:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6333:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6291:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 194,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 195,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6430:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 191,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6374:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6374:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 181,
												"id": 197,
												"nodeType": "Return",
												"src": "6367:76:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5934:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6127:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6164:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6156:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6194:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6181:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6181:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6223:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6209:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6145:97:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6266:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6266:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:14:0"
									},
									"scope": 329,
									"src": "6118:333:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "6735:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6782:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6788:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 209,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															216,
															245
														],
														"referencedDeclaration": 245,
														"src": "6753:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6753:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "6746:84:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6459:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6647:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6676:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6697:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6684:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:35:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "6721:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 206,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6721:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6720:14:0"
									},
									"scope": 329,
									"src": "6638:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "7191:173:0",
										"statements": [
											{
												"assignments": [
													229,
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7208:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7203:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7203:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7230:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 244,
														"src": "7217:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 230,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 232,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7244:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7244:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7244:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7202:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 239,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 240,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7331:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7343:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7287:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7287:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 227,
												"id": 243,
												"nodeType": "Return",
												"src": "7280:76:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6846:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7041:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7080:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7072:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7110:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7097:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7097:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7139:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7125:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7125:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7061:97:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7177:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7177:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:14:0"
									},
									"scope": 329,
									"src": "7032:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7859:445:0",
										"statements": [
											{
												"condition": {
													"id": 259,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "8237:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "8260:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 278,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "8272:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 276,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8252:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "8252:33:0"
														}
													]
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "7870:427:0",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "7883:348:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 260,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7902:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7902:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7923:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7902:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "7898:290:0",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "7926:262:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 266,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 248,
																							"src": "8131:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 265,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "8120:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8120:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8140:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 264,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8112:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8112:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "8112:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 273,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "8209:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 258,
															"id": 274,
															"nodeType": "Return",
															"src": "8202:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7372:282:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7669:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7714:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7706:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7736:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7731:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7731:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7767:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7754:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7754:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7802:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7788:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7788:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7695:126:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "7845:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7844:14:0"
									},
									"scope": 329,
									"src": "7660:644:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8697:141:0",
										"statements": [
											{
												"condition": {
													"id": 296,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "8712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "8771:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "8794:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 302,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "8806:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 300,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "8786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8786:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "ExpressionStatement",
															"src": "8786:33:0"
														}
													]
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "8708:123:0",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "8721:44:0",
													"statements": [
														{
															"expression": {
																"id": 297,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "8743:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 295,
															"id": 298,
															"nodeType": "Return",
															"src": "8736:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "8312:215:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8542:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8569:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8605:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8592:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8640:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8626:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8626:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8558:101:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8683:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8682:14:0"
									},
									"scope": 329,
									"src": "8533:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "8929:469:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "9007:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9007:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9027:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9007:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "9344:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 322,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9366:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 321,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9359:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9359:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "9359:20:0"
														}
													]
												},
												"id": 326,
												"nodeType": "IfStatement",
												"src": "9003:388:0",
												"trueBody": {
													"id": 320,
													"nodeType": "Block",
													"src": "9030:308:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9191:136:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9210:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9239:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9233:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9233:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9214:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9279:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9283:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9275:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9275:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9296:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9268:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9268:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9268:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9239:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 310,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9283:10:0",
																	"valueSize": 1
																}
															],
															"id": 319,
															"nodeType": "InlineAssembly",
															"src": "9182:145:0"
														}
													]
												}
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8855:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8876:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8863:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8863:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8902:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "8888:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8862:53:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8929:0:0"
									},
									"scope": 329,
									"src": "8846:552:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 330,
							"src": "202:9199:0",
							"usedErrors": []
						}
					],
					"src": "104:9299:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 331,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 332,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "718:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 337,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 336,
												"id": 339,
												"nodeType": "Return",
												"src": "729:17:1"
											}
										]
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 351,
									"src": "656:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "829:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 346,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 345,
												"id": 348,
												"nodeType": "Return",
												"src": "840:15:1"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "813:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:1"
									},
									"scope": 351,
									"src": "762:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 352,
							"src": "623:243:1",
							"usedErrors": []
						}
					],
					"src": "89:779:1"
				},
				"id": 1
			},
			"ERC1155.sol": {
				"ast": {
					"absolutePath": "ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							329
						],
						"Context": [
							351
						],
						"ERC1155": [
							1636
						],
						"ERC165": [
							1660
						],
						"IERC1155": [
							1782
						],
						"IERC1155MetadataURI": [
							1797
						],
						"IERC1155Receiver": [
							1838
						],
						"IERC165": [
							1850
						],
						"Strings": [
							2076
						]
					},
					"id": 1637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1783,
							"src": "139:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1839,
							"src": "165:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC1155MetadataURI.sol",
							"file": "./IERC1155MetadataURI.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1798,
							"src": "199:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 330,
							"src": "236:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 352,
							"src": "261:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC165.sol",
							"file": "./ERC165.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 1661,
							"src": "286:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Strings.sol",
							"file": "./Strings.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1637,
							"sourceUnit": 2077,
							"src": "310:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 362,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 351,
										"src": "579:7:2"
									},
									"id": 363,
									"nodeType": "InheritanceSpecifier",
									"src": "579:7:2"
								},
								{
									"baseName": {
										"id": 364,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1660,
										"src": "588:6:2"
									},
									"id": 365,
									"nodeType": "InheritanceSpecifier",
									"src": "588:6:2"
								},
								{
									"baseName": {
										"id": 366,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "596:8:2"
									},
									"id": 367,
									"nodeType": "InheritanceSpecifier",
									"src": "596:8:2"
								},
								{
									"baseName": {
										"id": 368,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1797,
										"src": "606:19:2"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "606:19:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 361,
								"nodeType": "StructuredDocumentation",
								"src": "337:220:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1636,
							"linearizedBaseContracts": [
								1636,
								1797,
								1782,
								1660,
								1850,
								351
							],
							"name": "ERC1155",
							"nameLocation": "568:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 372,
									"libraryName": {
										"id": 370,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 329,
										"src": "639:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "633:26:2",
									"typeName": {
										"id": 371,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 374,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "679:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "665:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 373,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 376,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "704:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "690:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 375,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "690:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "825:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "769:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 381,
										"keyType": {
											"id": 377,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "777:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "769:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 380,
											"keyType": {
												"id": 378,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "788:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 379,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "807:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "947:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "894:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 387,
										"keyType": {
											"id": 383,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "902:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "894:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 386,
											"keyType": {
												"id": 384,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "921:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "913:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 385,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "932:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1104:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1636,
									"src": "1089:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 389,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1089:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1239:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "1258:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 400,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1250:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1250:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "1250:13:2"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 404,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1274:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 405,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1281:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1274:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "1274:12:2"
											},
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 408,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1297:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 409,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1306:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1297:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1297:16:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1117:40:2",
										"text": " @dev See {_setURI}."
									},
									"id": 413,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1189:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1175:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1175:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1209:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1195:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1230:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1216:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1216:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:64:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:2"
									},
									"scope": 1636,
									"src": "1163:158:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1659,
										1849
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1501:202:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1532:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 426,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "1552:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1782_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1782_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 425,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1547:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1547:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1782",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1547:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1532:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1590:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 432,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "1610:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1797_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1797_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 431,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1605:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1605:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1797",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1605:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1590:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1532:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 439,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1683:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 437,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1659:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1636_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1659,
															"src": "1659:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1659:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1532:163:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 423,
												"id": 442,
												"nodeType": "Return",
												"src": "1512:183:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1329:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1402:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 420,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 418,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1660,
												"src": "1469:6:2"
											},
											{
												"id": 419,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1850,
												"src": "1477:7:2"
											}
										],
										"src": "1460:25:2"
									},
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1427:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1420:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 415,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1420:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:20:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1495:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1495:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:6:2"
									},
									"scope": 1636,
									"src": "1393:310:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1796
									],
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "2192:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 457,
																	"name": "_uri",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2234:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 460,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2257:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 458,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "2240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$2076_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1938,
																		"src": "2240:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2240:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 455,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2217:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2217:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2217:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2210:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 453,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2210:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2210:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 452,
												"id": 464,
												"nodeType": "Return",
												"src": "2203:59:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "1711:397:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2123:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 449,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2159:8:2"
									},
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2135:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2127:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:12:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2177:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2177:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:15:2"
									},
									"scope": 1636,
									"src": "2114:156:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1720
									],
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "2516:135:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 478,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2535:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2554:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2546:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 479,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2546:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2546:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2535:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2558:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2527:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2527:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "2527:76:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 487,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2621:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 489,
														"indexExpression": {
															"id": 488,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "2631:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2621:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 491,
													"indexExpression": {
														"id": 490,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "2635:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2621:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 492,
												"nodeType": "Return",
												"src": "2614:29:2"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "2278:137:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2430:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 473,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2489:8:2"
									},
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2448:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2440:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2465:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2457:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:29:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2507:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:9:2"
									},
									"scope": 1636,
									"src": "2421:230:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1733
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2996:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 509,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "3015:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3015:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 511,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3034:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3034:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3015:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3046:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3007:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3007:83:2"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "3120:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "3103:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 519,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3103:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ArrayTypeName",
															"src": "3103:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 525,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "3150:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3150:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3136:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 522,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3140:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ArrayTypeName",
															"src": "3140:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3103:63:2"
											},
											{
												"body": {
													"id": 553,
													"nodeType": "Block",
													"src": "3225:76:2",
													"statements": [
														{
															"expression": {
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 540,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "3240:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 542,
																	"indexExpression": {
																		"id": 541,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "3254:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3240:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 544,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "3269:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 546,
																			"indexExpression": {
																				"id": 545,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "3278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3269:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 547,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "3282:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 549,
																			"indexExpression": {
																				"id": 548,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "3286:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3282:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 543,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "3259:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3259:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3240:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "3240:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 533,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "3199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 534,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3203:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3203:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3199:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"initializationExpression": {
													"assignments": [
														530
													],
													"declarations": [
														{
															"constant": false,
															"id": 530,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3192:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 554,
															"src": "3184:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 529,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3184:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 532,
													"initialValue": {
														"hexValue": "30",
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3196:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3184:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3220:3:2",
														"subExpression": {
															"id": 537,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "3222:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 539,
													"nodeType": "ExpressionStatement",
													"src": "3220:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3179:122:2"
											},
											{
												"expression": {
													"id": 555,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 521,
													"src": "3320:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 507,
												"id": 556,
												"nodeType": "Return",
												"src": "3313:20:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2659:152:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2826:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2946:8:2"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2841:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 496,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 497,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2885:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2868:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 499,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2868:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 500,
													"nodeType": "ArrayTypeName",
													"src": "2868:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:49:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2973:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2973:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 505,
													"nodeType": "ArrayTypeName",
													"src": "2973:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2972:18:2"
									},
									"scope": 1636,
									"src": "2817:524:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1741
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3498:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 568,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "3528:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3528:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3542:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3552:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 567,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3509:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3509:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "3509:52:2"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3349:59:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3423:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 565,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3489:8:2"
									},
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3449:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3441:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3464:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3459:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3459:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:33:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:0:2"
									},
									"scope": 1636,
									"src": "3414:155:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1751
									],
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "3746:63:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 586,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3764:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 587,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "3783:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3764:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 590,
													"indexExpression": {
														"id": 589,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3792:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3764:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 585,
												"id": 591,
												"nodeType": "Return",
												"src": "3757:44:2"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3577:58:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3650:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 582,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3722:8:2"
									},
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3667:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3692:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3684:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:35:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3740:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:6:2"
									},
									"scope": 1636,
									"src": "3641:168:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1765
									],
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "4056:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 609,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "4089:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 610,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "4097:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4097:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4089:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 614,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "4130:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 615,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "4136:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4136:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 613,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "4113:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4113:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4089:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4164:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4067:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4067:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "4067:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "4253:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4259:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4263:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 626,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4267:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 627,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4275:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 622,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "4235:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4235:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "4235:45:2"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3817:58:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3890:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 606,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:2"
									},
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3917:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3948:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3940:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3969:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3961:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3990:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3982:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4020:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "4007:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4007:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3906:125:2"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4056:0:2"
									},
									"scope": 1636,
									"src": "3881:407:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1781
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "4565:239:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 649,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "4598:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 650,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "4606:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4606:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4598:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 654,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "4639:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 655,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "4645:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4645:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "4622:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4622:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4598:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4673:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4576:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "4576:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "4767:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4773:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "4777:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 666,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "4782:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 667,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "4791:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 662,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "4744:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "4744:52:2"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "4296:63:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4374:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 646,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4556:8:2"
									},
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4414:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4406:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4437:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4429:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4467:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4450:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 637,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 638,
													"nodeType": "ArrayTypeName",
													"src": "4450:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4481:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 640,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4481:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 641,
													"nodeType": "ArrayTypeName",
													"src": "4481:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4529:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "4516:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4516:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:145:2"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4565:0:2"
									},
									"scope": 1636,
									"src": "4365:439:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "4935:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "4952:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "4956:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "4960:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 686,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "4968:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 682,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "4946:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4946:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "4946:27:2"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "4821:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4844:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4836:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4865:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4857:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4857:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4886:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4878:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4916:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4903:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:102:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4935:0:2"
									},
									"scope": 1636,
									"src": "4812:169:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "5084:40:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5101:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5105:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 702,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "5109:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "5095:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5095:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "5095:21:2"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4998:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5021:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5013:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5013:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5042:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5034:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5063:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "5055:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:74:2"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 1636,
									"src": "4989:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "5757:805:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 721,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "5776:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5790:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5782:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 722,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5782:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5782:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5776:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5794:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5768:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5768:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "5768:66:2"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5855:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "5847:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 730,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5847:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 732,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5866:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5866:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5847:31:2"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5906:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "5889:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 737,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5889:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 738,
															"nodeType": "ArrayTypeName",
															"src": "5889:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [
														{
															"id": 741,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5930:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "5912:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5912:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5889:44:2"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5961:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "5944:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 746,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5944:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 747,
															"nodeType": "ArrayTypeName",
															"src": "5944:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"arguments": [
														{
															"id": 750,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "5989:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "5971:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5971:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5944:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6030:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "6040:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6046:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6050:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 758,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6055:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 759,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "6064:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 753,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "6009:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6009:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "6009:60:2"
											},
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "6090:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "6082:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6082:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 764,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "6104:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 766,
														"indexExpression": {
															"id": 765,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6114:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6104:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 768,
													"indexExpression": {
														"id": 767,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "6118:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6104:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6082:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "6142:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 772,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "6157:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6142:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6165:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6134:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6134:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "6134:76:2"
											},
											{
												"id": 787,
												"nodeType": "UncheckedBlock",
												"src": "6221:79:2",
												"statements": [
													{
														"expression": {
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 777,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "6246:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 780,
																	"indexExpression": {
																		"id": 778,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "6256:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6246:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 781,
																"indexExpression": {
																	"id": 779,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6260:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6246:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6268:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 783,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "6282:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6268:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6246:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 786,
														"nodeType": "ExpressionStatement",
														"src": "6246:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 788,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6310:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 791,
															"indexExpression": {
																"id": 789,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "6320:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6310:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 792,
														"indexExpression": {
															"id": 790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6324:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6310:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 793,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "6331:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6310:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "6310:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 797,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6370:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "6380:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6386:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6390:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 801,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "6394:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "6355:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "EmitStatement",
												"src": "6350:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6434:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "6444:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6450:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 809,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6459:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 810,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "6468:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 804,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "6414:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6414:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "6414:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6517:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "6527:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "6533:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6537:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "6541:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 819,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "6549:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 813,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "6486:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6486:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "6486:68:2"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "5132:450:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5597:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5633:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5625:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5625:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5656:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5648:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5677:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5669:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5698:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5690:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5728:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "5715:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 716,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5715:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:125:2"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:2"
									},
									"scope": 1636,
									"src": "5588:974:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "7114:952:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 840,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "7133:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7133:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 842,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "7147:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7147:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7133:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7163:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7125:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7125:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "7125:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 849,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "7225:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7239:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7231:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 850,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7231:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7231:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7225:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7243:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7217:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7217:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "7217:66:2"
											},
											{
												"assignments": [
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7304:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "7296:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 858,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7296:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 860,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "7315:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7315:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7296:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 864,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "7361:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "7371:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7377:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "7381:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 868,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "7386:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 869,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "7395:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 863,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "7340:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7340:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "7340:60:2"
											},
											{
												"body": {
													"id": 929,
													"nodeType": "Block",
													"src": "7454:380:2",
													"statements": [
														{
															"assignments": [
																884
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 884,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7477:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 929,
																	"src": "7469:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7469:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 888,
															"initialValue": {
																"baseExpression": {
																	"id": 885,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "7482:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 887,
																"indexExpression": {
																	"id": 886,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "7486:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7482:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7469:19:2"
														},
														{
															"assignments": [
																890
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 890,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7511:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 929,
																	"src": "7503:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 889,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7503:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 894,
															"initialValue": {
																"baseExpression": {
																	"id": 891,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "7520:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 893,
																"indexExpression": {
																	"id": 892,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "7528:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7520:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7503:27:2"
														},
														{
															"assignments": [
																896
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 896,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7555:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 929,
																	"src": "7547:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 895,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7547:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 902,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 897,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "7569:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 899,
																	"indexExpression": {
																		"id": 898,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "7579:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7569:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 901,
																"indexExpression": {
																	"id": 900,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "7583:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7569:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7547:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 904,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "7611:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 905,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "7626:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7611:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7634:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 903,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7603:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7603:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 909,
															"nodeType": "ExpressionStatement",
															"src": "7603:76:2"
														},
														{
															"id": 920,
															"nodeType": "UncheckedBlock",
															"src": "7694:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 910,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 382,
																					"src": "7723:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 913,
																				"indexExpression": {
																					"id": 911,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 884,
																					"src": "7733:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7723:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 914,
																			"indexExpression": {
																				"id": 912,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 826,
																				"src": "7737:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7723:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 915,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 896,
																				"src": "7745:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 916,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "7759:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7745:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7723:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 919,
																	"nodeType": "ExpressionStatement",
																	"src": "7723:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 921,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "7795:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 924,
																		"indexExpression": {
																			"id": 922,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "7805:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7795:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 925,
																	"indexExpression": {
																		"id": 923,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "7809:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7795:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 926,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "7816:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7795:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "7795:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "7433:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 877,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "7437:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7437:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7433:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"initializationExpression": {
													"assignments": [
														873
													],
													"declarations": [
														{
															"constant": false,
															"id": 873,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7426:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 930,
															"src": "7418:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7418:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 875,
													"initialValue": {
														"hexValue": "30",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7430:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7418:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7449:3:2",
														"subExpression": {
															"id": 880,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "7451:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 882,
													"nodeType": "ExpressionStatement",
													"src": "7449:3:2"
												},
												"nodeType": "ForStatement",
												"src": "7413:421:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 932,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "7865:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "7875:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7881:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "7885:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 936,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "7890:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 931,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "7851:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "EmitStatement",
												"src": "7846:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "7931:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "7941:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7947:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "7951:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 944,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "7956:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 945,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "7965:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 939,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "7911:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7911:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "7911:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "8019:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "8029:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "8035:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8039:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 953,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "8044:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 954,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "8053:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 948,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "7983:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "7983:75:2"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "6570:344:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6929:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6970:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "6962:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6993:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "6985:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6985:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7023:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "7006:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 829,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7006:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 830,
													"nodeType": "ArrayTypeName",
													"src": "7006:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7054:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "7037:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 832,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7037:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 833,
													"nodeType": "ArrayTypeName",
													"src": "7037:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7085:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "7072:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7072:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:145:2"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7114:0:2"
									},
									"scope": 1636,
									"src": "6920:1146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "8966:32:2",
										"statements": [
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 964,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "8977:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "8984:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8977:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "8977:13:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "8074:830:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8919:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8941:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8927:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 960,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8927:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8926:22:2"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8966:0:2"
									},
									"scope": 1636,
									"src": "8910:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "9524:595:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "9543:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9557:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9549:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9549:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9549:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9543:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9561:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9535:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9535:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "9535:62:2"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9618:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "9610:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9610:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9629:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9629:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9610:31:2"
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9669:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "9652:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 998,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 999,
															"nodeType": "ArrayTypeName",
															"src": "9652:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "9693:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "9675:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9675:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9652:44:2"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9724:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "9707:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1007,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9707:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1008,
															"nodeType": "ArrayTypeName",
															"src": "9707:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"arguments": [
														{
															"id": 1011,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "9752:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1010,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "9734:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9734:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9707:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "9793:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9811:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9803:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9803:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9803:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9815:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "9819:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1022,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "9824:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1023,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "9833:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1014,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "9772:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9772:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "9772:66:2"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1026,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "9851:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1029,
															"indexExpression": {
																"id": 1027,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "9861:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9851:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1030,
														"indexExpression": {
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9865:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9851:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1031,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "9872:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9851:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "9851:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1035,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "9909:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9927:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9919:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9919:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9919:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9931:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "9935:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1042,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "9939:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "9894:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9894:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "9889:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "9979:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9997:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9989:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1047,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9989:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9989:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "10001:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "10005:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1053,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "10010:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "10019:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1045,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "9959:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9959:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "9959:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1058,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "10068:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10086:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10078:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1059,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10078:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10078:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "10090:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "10094:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1065,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10098:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1066,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "10106:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1057,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "10037:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10037:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "10037:74:2"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "9012:372:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9399:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9423:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "9415:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "9436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9436:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9465:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "9457:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9495:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "9482:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9482:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9404:102:2"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9524:0:2"
									},
									"scope": 1636,
									"src": "9390:729:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "10681:654:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "10700:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10714:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10706:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1086,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10706:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10706:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10700:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10718:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10692:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10692:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "10692:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1095,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "10773:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10773:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1097,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "10787:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10787:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10773:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10803:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10765:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10765:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "10765:81:2"
											},
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10867:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1180,
														"src": "10859:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1103,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10859:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1105,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "10878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10859:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "10924:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10942:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10934:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10934:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10934:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "10946:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "10950:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1116,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "10955:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1117,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "10964:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1108,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "10903:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10903:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "10903:66:2"
											},
											{
												"body": {
													"id": 1143,
													"nodeType": "Block",
													"src": "11023:62:2",
													"statements": [
														{
															"expression": {
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1131,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "11038:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1136,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1132,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "11048:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1134,
																			"indexExpression": {
																				"id": 1133,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "11052:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11048:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11038:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1137,
																	"indexExpression": {
																		"id": 1135,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "11056:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11038:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1138,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "11063:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1140,
																	"indexExpression": {
																		"id": 1139,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "11071:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11063:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11038:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1142,
															"nodeType": "ExpressionStatement",
															"src": "11038:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "11002:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1125,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "11006:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11006:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11002:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"initializationExpression": {
													"assignments": [
														1121
													],
													"declarations": [
														{
															"constant": false,
															"id": 1121,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10995:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1144,
															"src": "10987:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1120,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10987:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1123,
													"initialValue": {
														"hexValue": "30",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10999:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10987:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11018:3:2",
														"subExpression": {
															"id": 1128,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "11018:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1130,
													"nodeType": "ExpressionStatement",
													"src": "11018:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10982:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1146,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "11116:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11134:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11126:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11126:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11126:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "11138:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "11142:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1153,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "11147:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1145,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "11102:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11102:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "EmitStatement",
												"src": "11097:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "11188:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11206:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11198:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11198:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11198:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "11210:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1163,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "11214:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1164,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "11219:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "11228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1156,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "11168:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11168:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "11168:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "11282:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11300:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11292:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11292:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11292:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "11304:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "11308:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1176,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "11313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1177,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "11322:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1168,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "11246:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11246:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "11246:81:2"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "10127:389:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "10531:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10560:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "10552:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10590:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "10573:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1074,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10573:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1075,
													"nodeType": "ArrayTypeName",
													"src": "10573:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10621:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "10604:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1077,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1078,
													"nodeType": "ArrayTypeName",
													"src": "10604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "10639:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10639:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10541:122:2"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10681:0:2"
									},
									"scope": 1636,
									"src": "10522:813:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "11741:700:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "11760:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11776:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11768:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11768:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11768:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11760:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11780:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11752:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11752:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "11752:66:2"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11839:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "11831:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1201,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11831:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1203,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "11850:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11850:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11831:31:2"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11890:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "11873:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1208,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11873:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1209,
															"nodeType": "ArrayTypeName",
															"src": "11873:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"id": 1212,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "11914:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "11896:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11896:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11873:44:2"
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11945:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "11928:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1217,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11928:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1218,
															"nodeType": "ArrayTypeName",
															"src": "11928:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"arguments": [
														{
															"id": 1221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "11973:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "11955:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11955:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11928:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1225,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "12014:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "12024:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12038:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12030:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1227,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12030:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12030:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "12042:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1232,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "12047:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12056:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1224,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "11993:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11993:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "11993:66:2"
											},
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "12080:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "12072:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12072:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1238,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "12094:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1240,
														"indexExpression": {
															"id": 1239,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "12104:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12094:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1242,
													"indexExpression": {
														"id": 1241,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "12108:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12094:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12072:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1245,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "12132:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1246,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "12147:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12132:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12155:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12124:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12124:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "12124:70:2"
											},
											{
												"id": 1261,
												"nodeType": "UncheckedBlock",
												"src": "12205:79:2",
												"statements": [
													{
														"expression": {
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1251,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "12230:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1254,
																	"indexExpression": {
																		"id": 1252,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "12240:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12230:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1255,
																"indexExpression": {
																	"id": 1253,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "12244:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12230:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1256,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "12252:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1257,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12266:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12252:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12230:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1260,
														"nodeType": "ExpressionStatement",
														"src": "12230:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1263,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "12316:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "12326:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12340:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12332:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12332:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12332:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "12344:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "12348:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1262,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "12301:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12301:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "EmitStatement",
												"src": "12296:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "12388:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "12398:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12412:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12404:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12404:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12404:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "12416:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1281,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "12421:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12430:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1273,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "12368:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12368:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "12368:65:2"
											}
										]
									},
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "11343:284:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11642:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11666:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "11658:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11689:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "11681:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11710:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "11702:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11702:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11647:76:2"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11741:0:2"
									},
									"scope": 1636,
									"src": "11633:808:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "12824:836:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "12843:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12859:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12851:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1300,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12851:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12851:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12843:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12863:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12835:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12835:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "12835:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1309,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "12920:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12920:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1311,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "12934:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12934:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12920:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12950:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12912:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "12912:81:2"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "13014:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1408,
														"src": "13006:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13006:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1319,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "13025:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13025:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13006:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "13071:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1324,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "13081:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13095:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13087:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1325,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13087:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13087:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "13099:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1330,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "13104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13113:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1322,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "13050:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13050:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "13050:66:2"
											},
											{
												"body": {
													"id": 1383,
													"nodeType": "Block",
													"src": "13170:332:2",
													"statements": [
														{
															"assignments": [
																1346
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1346,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "13193:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1383,
																	"src": "13185:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13185:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1350,
															"initialValue": {
																"baseExpression": {
																	"id": 1347,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "13198:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1349,
																"indexExpression": {
																	"id": 1348,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "13202:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13198:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13185:19:2"
														},
														{
															"assignments": [
																1352
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1352,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "13227:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1383,
																	"src": "13219:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1351,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13219:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1356,
															"initialValue": {
																"baseExpression": {
																	"id": 1353,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "13236:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1355,
																"indexExpression": {
																	"id": 1354,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "13244:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13219:27:2"
														},
														{
															"assignments": [
																1358
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1358,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "13271:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1383,
																	"src": "13263:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1357,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13263:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1364,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1359,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "13285:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1361,
																	"indexExpression": {
																		"id": 1360,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "13295:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13285:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1363,
																"indexExpression": {
																	"id": 1362,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "13299:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13285:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13263:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1366,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1358,
																			"src": "13327:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1367,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "13342:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13327:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13350:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1365,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13319:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13319:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1371,
															"nodeType": "ExpressionStatement",
															"src": "13319:70:2"
														},
														{
															"id": 1382,
															"nodeType": "UncheckedBlock",
															"src": "13404:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1372,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 382,
																					"src": "13433:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1375,
																				"indexExpression": {
																					"id": 1373,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1346,
																					"src": "13443:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "13433:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1376,
																			"indexExpression": {
																				"id": 1374,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1289,
																				"src": "13447:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "13433:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1377,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1358,
																				"src": "13455:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1378,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "13469:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13455:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13433:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1381,
																	"nodeType": "ExpressionStatement",
																	"src": "13433:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1338,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "13149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1339,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "13153:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13153:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13149:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1384,
												"initializationExpression": {
													"assignments": [
														1335
													],
													"declarations": [
														{
															"constant": false,
															"id": 1335,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13142:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1384,
															"src": "13134:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1334,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13134:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1337,
													"initialValue": {
														"hexValue": "30",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13146:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13134:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13165:3:2",
														"subExpression": {
															"id": 1342,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "13165:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1344,
													"nodeType": "ExpressionStatement",
													"src": "13165:3:2"
												},
												"nodeType": "ForStatement",
												"src": "13129:373:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1386,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "13533:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1387,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "13543:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13557:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13549:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1388,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13549:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13549:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "13561:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1393,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "13566:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1385,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "13519:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13519:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "EmitStatement",
												"src": "13514:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1397,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "13607:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "13617:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13631:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13623:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13623:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13623:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "13635:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1404,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "13640:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13649:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1396,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "13587:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13587:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "13587:65:2"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "12449:236:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12700:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12729:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "12721:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12721:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12761:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "12744:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12744:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1291,
													"nodeType": "ArrayTypeName",
													"src": "12744:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12792:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "12775:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1293,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12775:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1294,
													"nodeType": "ArrayTypeName",
													"src": "12775:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12710:96:2"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12824:0:2"
									},
									"scope": 1636,
									"src": "12691:969:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "13930:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "13949:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1421,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "13958:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13949:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13968:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13941:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13941:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "13941:71:2"
											},
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1426,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "14023:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1429,
															"indexExpression": {
																"id": 1427,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "14042:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14023:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1430,
														"indexExpression": {
															"id": 1428,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "14049:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14023:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1431,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "14061:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14023:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "14023:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1435,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "14100:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1436,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "14107:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1437,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "14117:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1434,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "14085:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14085:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "EmitStatement",
												"src": "14080:46:2"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "13668:129:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13812:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13849:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "13841:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13841:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "13865:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13897:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "13892:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13892:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13830:82:2"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13930:0:2"
									},
									"scope": 1636,
									"src": "13803:331:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "15311:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "14142:944:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15101:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15140:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "15132:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "15159:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15159:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15190:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "15182:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15220:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "15203:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1449,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15203:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1450,
													"nodeType": "ArrayTypeName",
													"src": "15203:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15251:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "15234:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1452,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15234:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1453,
													"nodeType": "ArrayTypeName",
													"src": "15234:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15282:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "15269:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15269:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15121:172:2"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15311:0:2"
									},
									"scope": 1636,
									"src": "15092:221:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "16486:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "15321:941:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16277:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16315:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "16307:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16342:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "16334:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16334:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16365:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "16357:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16395:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "16378:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1468,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16378:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1469,
													"nodeType": "ArrayTypeName",
													"src": "16378:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16426:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "16409:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1471,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1472,
													"nodeType": "ArrayTypeName",
													"src": "16409:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16457:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "16444:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16444:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16296:172:2"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16486:0:2"
									},
									"scope": 1636,
									"src": "16268:220:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "16696:544:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1494,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "16711:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "16711:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16711:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"nodeType": "IfStatement",
												"src": "16707:526:2",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "16728:505:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1521,
																		"nodeType": "Block",
																		"src": "16846:188:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1514,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1510,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1508,
																						"src": "16869:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1511,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1838,
																								"src": "16881:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1838_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1512,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1819,
																							"src": "16881:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16881:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16869:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1520,
																				"nodeType": "IfStatement",
																				"src": "16865:154:2",
																				"trueBody": {
																					"id": 1519,
																					"nodeType": "Block",
																					"src": "16926:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1516,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16956:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1515,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16949:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1517,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16949:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1518,
																							"nodeType": "ExpressionStatement",
																							"src": "16949:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1522,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1509,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1508,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16836:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1522,
																				"src": "16829:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1507,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16829:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16828:17:2"
																	},
																	"src": "16820:214:2"
																},
																{
																	"block": {
																		"id": 1530,
																		"nodeType": "Block",
																		"src": "17069:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1527,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1524,
																							"src": "17095:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1526,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17088:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17088:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1529,
																				"nodeType": "ExpressionStatement",
																				"src": "17088:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1531,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1525,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1524,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17061:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1531,
																				"src": "17047:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1523,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17047:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17046:22:2"
																	},
																	"src": "17035:83:2"
																},
																{
																	"block": {
																		"id": 1536,
																		"nodeType": "Block",
																		"src": "17125:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1533,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17151:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1532,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17144:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17144:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1535,
																				"nodeType": "ExpressionStatement",
																				"src": "17144:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1537,
																	"nodeType": "TryCatchClause",
																	"src": "17119:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1501,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "16786:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1502,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "16796:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1487,
																		"src": "16802:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1504,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "16806:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1505,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "16814:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1498,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1485,
																				"src": "16764:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1497,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1838,
																			"src": "16747:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1838_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16747:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1838",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1819,
																	"src": "16747:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16747:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1538,
															"nodeType": "TryStatement",
															"src": "16743:479:2"
														}
													]
												}
											}
										]
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "16505:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16554:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "16546:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16546:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16581:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "16573:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16604:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "16596:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16625:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "16617:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16646:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "16638:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "16663:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16663:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16535:152:2"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16696:0:2"
									},
									"scope": 1636,
									"src": "16496:744:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "17473:588:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "17488:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "17488:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17488:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "17484:570:2",
												"trueBody": {
													"id": 1604,
													"nodeType": "Block",
													"src": "17505:549:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1586,
																		"nodeType": "Block",
																		"src": "17662:193:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1575,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1573,
																						"src": "17685:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1576,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1838,
																								"src": "17697:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1838_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1577,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1837,
																							"src": "17697:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1578,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17697:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17685:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1585,
																				"nodeType": "IfStatement",
																				"src": "17681:159:2",
																				"trueBody": {
																					"id": 1584,
																					"nodeType": "Block",
																					"src": "17747:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1581,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17777:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1580,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17770:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1582,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17770:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1583,
																							"nodeType": "ExpressionStatement",
																							"src": "17770:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1587,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1574,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1573,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "17638:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1587,
																				"src": "17631:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1572,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17631:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17612:49:2"
																	},
																	"src": "17604:251:2"
																},
																{
																	"block": {
																		"id": 1595,
																		"nodeType": "Block",
																		"src": "17890:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1592,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1589,
																							"src": "17916:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1591,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17909:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17909:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1594,
																				"nodeType": "ExpressionStatement",
																				"src": "17909:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1596,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1590,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1589,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17882:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1596,
																				"src": "17868:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1588,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17868:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17867:22:2"
																	},
																	"src": "17856:83:2"
																},
																{
																	"block": {
																		"id": 1601,
																		"nodeType": "Block",
																		"src": "17946:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1598,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17972:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1597,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17965:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1599,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17965:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1600,
																				"nodeType": "ExpressionStatement",
																				"src": "17965:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1602,
																	"nodeType": "TryCatchClause",
																	"src": "17940:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1566,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "17568:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1567,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1546,
																		"src": "17578:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1568,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "17584:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1569,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "17589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1570,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1556,
																		"src": "17598:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1548,
																				"src": "17541:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1562,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1838,
																			"src": "17524:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1838_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17524:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1838",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1837,
																	"src": "17524:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17524:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1603,
															"nodeType": "TryStatement",
															"src": "17520:523:2"
														}
													]
												}
											}
										]
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "17257:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17311:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "17303:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17338:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "17330:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17361:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "17353:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17353:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "17391:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "17374:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1549,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17374:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1550,
													"nodeType": "ArrayTypeName",
													"src": "17374:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "17422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "17405:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17405:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "17405:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "17440:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17440:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17292:172:2"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17473:0:2"
									},
									"scope": 1636,
									"src": "17248:813:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "18153:114:2",
										"statements": [
											{
												"assignments": [
													1619
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "18181:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "18164:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1617,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18164:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1618,
															"nodeType": "ArrayTypeName",
															"src": "18164:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18203:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18189:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1620,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18193:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1621,
															"nodeType": "ArrayTypeName",
															"src": "18193:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18189:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18164:41:2"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1626,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "18216:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1628,
														"indexExpression": {
															"hexValue": "30",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18222:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18216:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1629,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "18227:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18216:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "18216:18:2"
											},
											{
												"expression": {
													"id": 1632,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1619,
													"src": "18254:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1614,
												"id": 1633,
												"nodeType": "Return",
												"src": "18247:12:2"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "18078:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "18104:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "18096:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18095:17:2"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "18135:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18135:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "18135:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18134:18:2"
									},
									"scope": 1636,
									"src": "18069:198:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1637,
							"src": "559:17711:2",
							"usedErrors": []
						}
					],
					"src": "112:18160:2"
				},
				"id": 2
			},
			"ERC165.sol": {
				"ast": {
					"absolutePath": "ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1660
						],
						"IERC165": [
							1850
						]
					},
					"id": 1661,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 1851,
							"src": "129:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1641,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1850,
										"src": "775:7:3"
									},
									"id": 1642,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1660,
							"linearizedBaseContracts": [
								1660,
								1850
							],
							"name": "ERC165",
							"nameLocation": "765:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1849
									],
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "945:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1651,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "963:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1653,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "983:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1850_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1850_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1652,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1850",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1657,
												"nodeType": "Return",
												"src": "956:47:3"
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1647,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:3"
									},
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "881:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:3"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "939:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:3"
									},
									"scope": 1660,
									"src": "854:157:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1661,
							"src": "747:267:3",
							"usedErrors": []
						}
					],
					"src": "102:914:3"
				},
				"id": 3
			},
			"IERC1155.sol": {
				"ast": {
					"absolutePath": "IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1782
						],
						"IERC165": [
							1850
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1662,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1783,
							"sourceUnit": 1851,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1665,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1850,
										"src": "361:7:4"
									},
									"id": 1666,
									"nodeType": "InheritanceSpecifier",
									"src": "361:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1664,
								"nodeType": "StructuredDocumentation",
								"src": "167:170:4",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1782,
							"linearizedBaseContracts": [
								1782,
								1850
							],
							"name": "IERC1155",
							"nameLocation": "349:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "376:123:4",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1679,
									"name": "TransferSingle",
									"nameLocation": "511:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "542:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "526:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "568:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "552:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "590:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "574:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "602:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "594:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "614:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "606:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:95:4"
									},
									"src": "505:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "629:147:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1694,
									"name": "TransferBatch",
									"nameLocation": "788:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "812:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "863:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "847:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "894:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "878:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "917:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "907:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "907:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "941:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "931:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1690,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "931:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1691,
													"nodeType": "ArrayTypeName",
													"src": "931:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:153:4"
									},
									"src": "782:173:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "963:150:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1703,
									"name": "ApprovalForAll",
									"nameLocation": "1125:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1156:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1140:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1181:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1165:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1196:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "1191:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1191:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:66:4"
									},
									"src": "1119:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "1214:349:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1710,
									"name": "URI",
									"nameLocation": "1575:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1586:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1579:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1579:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1609:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1593:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:34:4"
									},
									"src": "1569:44:4"
								},
								{
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "1621:179:4",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1815:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1833:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1825:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1850:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1842:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:29:4"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1877:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:9:4"
									},
									"scope": 1782,
									"src": "1806:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "1894:194:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2103:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2137:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "2118:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1722,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2118:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1723,
													"nodeType": "ArrayTypeName",
													"src": "2118:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2166:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "2147:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1725,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1726,
													"nodeType": "ArrayTypeName",
													"src": "2147:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:53:4"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "2221:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1729,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2221:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"nodeType": "ArrayTypeName",
													"src": "2221:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:18:4"
									},
									"scope": 1782,
									"src": "2094:145:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "2247:256:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2518:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2544:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "2536:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2559:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "2554:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2554:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2535:33:4"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:0:4"
									},
									"scope": 1782,
									"src": "2509:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "2586:139:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2740:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2765:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2757:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2782:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2774:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:35:4"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "2815:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1748,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2815:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:6:4"
									},
									"scope": 1782,
									"src": "2731:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "2829:568:4",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3412:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3447:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3439:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3470:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3462:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3491:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3483:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3512:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3504:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3544:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3529:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3529:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:127:4"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:0:4"
									},
									"scope": 1782,
									"src": "3403:162:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "3573:400:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3988:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4028:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "4020:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4020:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4051:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "4043:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4083:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "4064:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1771,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4064:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1772,
													"nodeType": "ArrayTypeName",
													"src": "4064:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4116:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "4097:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1774,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4097:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1775,
													"nodeType": "ArrayTypeName",
													"src": "4097:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4149:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "4134:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4134:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:151:4"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4169:0:4"
									},
									"scope": 1782,
									"src": "3979:191:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1783,
							"src": "339:3834:4",
							"usedErrors": []
						}
					],
					"src": "113:4062:4"
				},
				"id": 4
			},
			"IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1782
						],
						"IERC1155MetadataURI": [
							1797
						],
						"IERC165": [
							1850
						]
					},
					"id": 1798,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:5"
						},
						{
							"absolutePath": "IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 1785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 1783,
							"src": "147:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1787,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "409:8:5"
									},
									"id": 1788,
									"nodeType": "InheritanceSpecifier",
									"src": "409:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1786,
								"nodeType": "StructuredDocumentation",
								"src": "175:199:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1797,
							"linearizedBaseContracts": [
								1797,
								1782,
								1850
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "386:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "425:197:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "637:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "641:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:12:5"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "676:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "676:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:15:5"
									},
									"scope": 1797,
									"src": "628:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1798,
							"src": "376:318:5",
							"usedErrors": []
						}
					],
					"src": "120:576:5"
				},
				"id": 5
			},
			"IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1838
						],
						"IERC165": [
							1850
						]
					},
					"id": 1839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1799,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:6"
						},
						{
							"absolutePath": "IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1839,
							"sourceUnit": 1851,
							"src": "148:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1802,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1850,
										"src": "248:7:6"
									},
									"id": 1803,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1801,
								"nodeType": "StructuredDocumentation",
								"src": "175:41:6",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1838,
							"linearizedBaseContracts": [
								1838,
								1850
							],
							"name": "IERC1155Receiver",
							"nameLocation": "228:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "263:840:6",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1118:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1154:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "1146:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1181:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "1173:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1204:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "1196:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1225:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "1217:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1256:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "1241:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:132:6"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "1286:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1816,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1286:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:8:6"
									},
									"scope": 1838,
									"src": "1109:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "1302:1009:6",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2326:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2367:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2359:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2394:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2428:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2409:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1825,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2409:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1826,
													"nodeType": "ArrayTypeName",
													"src": "2409:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2461:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2442:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1828,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2442:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1829,
													"nodeType": "ArrayTypeName",
													"src": "2442:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2493:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2478:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2478:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:156:6"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2523:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2523:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2522:8:6"
									},
									"scope": 1838,
									"src": "2317:214:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1839,
							"src": "218:2316:6",
							"usedErrors": []
						}
					],
					"src": "121:2415:6"
				},
				"id": 6
			},
			"IERC165.sol": {
				"ast": {
					"absolutePath": "IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1850
						]
					},
					"id": 1851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1841,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1850,
							"linearizedBaseContracts": [
								1850
							],
							"name": "IERC165",
							"nameLocation": "429:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "824:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:7"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "867:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:7"
									},
									"scope": 1850,
									"src": "797:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1851,
							"src": "419:457:7",
							"usedErrors": []
						}
					],
					"src": "103:775:7"
				},
				"id": 7
			},
			"Strings.sol": {
				"ast": {
					"absolutePath": "Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2076
						]
					},
					"id": 2077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1853,
								"nodeType": "StructuredDocumentation",
								"src": "131:36:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2076,
							"linearizedBaseContracts": [
								2076
							],
							"name": "Strings",
							"nameLocation": "177:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1856,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "217:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2076,
									"src": "192:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1854,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "192:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "232:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1859,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "280:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2076,
									"src": "257:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1857,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "257:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1858,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "298:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "478:652:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "684:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "693:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "684:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1873,
												"nodeType": "IfStatement",
												"src": "680:53:8",
												"trueBody": {
													"id": 1872,
													"nodeType": "Block",
													"src": "696:37:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "718:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1866,
															"id": 1871,
															"nodeType": "Return",
															"src": "711:10:8"
														}
													]
												}
											},
											{
												"assignments": [
													1875
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "751:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "743:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "743:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1877,
												"initialValue": {
													"id": 1876,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1862,
													"src": "758:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "743:20:8"
											},
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "782:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "774:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "774:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1880,
												"nodeType": "VariableDeclarationStatement",
												"src": "774:14:8"
											},
											{
												"body": {
													"id": 1891,
													"nodeType": "Block",
													"src": "817:60:8",
													"statements": [
														{
															"expression": {
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "832:8:8",
																"subExpression": {
																	"id": 1884,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "832:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1886,
															"nodeType": "ExpressionStatement",
															"src": "832:8:8"
														},
														{
															"expression": {
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1887,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "855:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "863:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "855:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1890,
															"nodeType": "ExpressionStatement",
															"src": "855:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1881,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "806:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "814:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "806:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "WhileStatement",
												"src": "799:78:8"
											},
											{
												"assignments": [
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "900:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "887:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1893,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "887:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"arguments": [
														{
															"id": 1897,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "919:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "909:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1895,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "913:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:39:8"
											},
											{
												"body": {
													"id": 1930,
													"nodeType": "Block",
													"src": "956:135:8",
													"statements": [
														{
															"expression": {
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1903,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "971:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "971:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1906,
															"nodeType": "ExpressionStatement",
															"src": "971:11:8"
														},
														{
															"expression": {
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1907,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "997:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1909,
																	"indexExpression": {
																		"id": 1908,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "1004:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "997:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1914,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1027:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1919,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1917,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1862,
																									"src": "1040:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1918,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1048:2:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1040:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1916,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1032:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1915,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1032:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1920,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1032:19:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1027:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1021:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1912,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1021:5:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1021:31:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1014:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1910,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "1014:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1014:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "997:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1925,
															"nodeType": "ExpressionStatement",
															"src": "997:56:8"
														},
														{
															"expression": {
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1926,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "1068:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1077:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1068:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1929,
															"nodeType": "ExpressionStatement",
															"src": "1068:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1900,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "944:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "953:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "944:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1931,
												"nodeType": "WhileStatement",
												"src": "937:154:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1934,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "1115:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1108:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1932,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1108:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1936,
												"nodeType": "Return",
												"src": "1101:21:8"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "309:92:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "416:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "433:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "425:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:15:8"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "463:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1864,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "463:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:8"
									},
									"scope": 2076,
									"src": "407:723:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "1314:266:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1946,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "1329:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1338:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1329:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1952,
												"nodeType": "IfStatement",
												"src": "1325:56:8",
												"trueBody": {
													"id": 1951,
													"nodeType": "Block",
													"src": "1341:40:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1363:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1945,
															"id": 1950,
															"nodeType": "Return",
															"src": "1356:13:8"
														}
													]
												}
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1399:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1978,
														"src": "1391:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1391:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1956,
												"initialValue": {
													"id": 1955,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1941,
													"src": "1406:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1391:20:8"
											},
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1430:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1978,
														"src": "1422:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1422:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"hexValue": "30",
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1439:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1422:18:8"
											},
											{
												"body": {
													"id": 1971,
													"nodeType": "Block",
													"src": "1469:60:8",
													"statements": [
														{
															"expression": {
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1484:8:8",
																"subExpression": {
																	"id": 1964,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "1484:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1966,
															"nodeType": "ExpressionStatement",
															"src": "1484:8:8"
														},
														{
															"expression": {
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1967,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "1507:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1516:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1507:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1970,
															"nodeType": "ExpressionStatement",
															"src": "1507:10:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1961,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "1458:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1466:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1458:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1972,
												"nodeType": "WhileStatement",
												"src": "1451:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1974,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "1558:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1975,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "1565:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1973,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1979,
															2055,
															2075
														],
														"referencedDeclaration": 2055,
														"src": "1546:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1546:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1945,
												"id": 1977,
												"nodeType": "Return",
												"src": "1539:33:8"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "1138:96:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1249:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1269:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "1261:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:15:8"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "1299:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:15:8"
									},
									"scope": 2076,
									"src": "1240:340:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "1798:361:8",
										"statements": [
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1822:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2054,
														"src": "1809:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1989,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1809:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1999,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1841:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1994,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "1845:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1841:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1854:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1841:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1831:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1991,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1835:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1831:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1809:47:8"
											},
											{
												"expression": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2000,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "1867:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2002,
														"indexExpression": {
															"hexValue": "30",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1874:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1867:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1879:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1867:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "1867:15:8"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2006,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "1893:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2008,
														"indexExpression": {
															"hexValue": "31",
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1900:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1893:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1905:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1893:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "1893:15:8"
											},
											{
												"body": {
													"id": 2040,
													"nodeType": "Block",
													"src": "1964:90:8",
													"statements": [
														{
															"expression": {
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2026,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "1979:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2028,
																	"indexExpression": {
																		"id": 2027,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "1986:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1979:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2029,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "1991:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2033,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2030,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "2004:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2012:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2004:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1991:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1979:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2035,
															"nodeType": "ExpressionStatement",
															"src": "1979:37:8"
														},
														{
															"expression": {
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "2031:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2041:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2031:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2039,
															"nodeType": "ExpressionStatement",
															"src": "2031:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2020,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "1952:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1956:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1952:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"initializationExpression": {
													"assignments": [
														2013
													],
													"declarations": [
														{
															"constant": false,
															"id": 2013,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1932:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 2041,
															"src": "1924:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2012,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1924:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2019,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1936:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2015,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "1940:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1936:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1949:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1936:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1924:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1959:3:8",
														"subExpression": {
															"id": 2023,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "1961:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2025,
													"nodeType": "ExpressionStatement",
													"src": "1959:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1919:135:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2043,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "2072:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2081:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2072:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2064:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "2064:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2051,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "2144:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2137:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2049,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2137:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2053,
												"nodeType": "Return",
												"src": "2130:21:8"
											}
										]
									},
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "1588:114:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "1729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1752:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "1744:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:31:8"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "1783:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1783:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:15:8"
									},
									"scope": 2076,
									"src": "1708:451:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "2389:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2068,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2058,
																			"src": "2435:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2427:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2066,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2427:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2427:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2419:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2064,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2419:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2419:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2071,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "2443:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2063,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1979,
															2055,
															2075
														],
														"referencedDeclaration": 2055,
														"src": "2407:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2073,
												"nodeType": "Return",
												"src": "2400:59:8"
											}
										]
									},
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "2167:143:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2325:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2345:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2337:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2337:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:14:8"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2374:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2374:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:15:8"
									},
									"scope": 2076,
									"src": "2316:151:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2077,
							"src": "169:2301:8",
							"usedErrors": []
						}
					],
					"src": "104:2368:8"
				},
				"id": 8
			}
		}
	}
}